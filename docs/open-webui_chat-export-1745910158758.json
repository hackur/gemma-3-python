[{"id":"80b794e3-5743-4381-b024-c0b9f9bd5781","user_id":"9c6e0819-8e38-4c39-8d28-3f761341ba40","title":"üõ†Ô∏è Next.js 15 App Setup","chat":{"id":"","title":"üõ†Ô∏è Next.js 15 App Setup","models":["codewriter:latest"],"params":{},"history":{"messages":{"1bca05f4-9838-4e13-abcd-cb44d90240b8":{"id":"1bca05f4-9838-4e13-abcd-cb44d90240b8","parentId":null,"childrenIds":["a8f2abeb-8919-4261-8bda-6505d0162332"],"role":"user","content":"Do anything necessary to build a next.js 15 application which uses react 19.  \nMake sure it‚Äôs using npx create scripts and then sets up a basic landing page with 10 sections.  \n  \nInclude chakraui or whatever that ones called. Also include storybook. Only include elements you actually need.","timestamp":1745909473,"models":["codewriter:latest"]},"a8f2abeb-8919-4261-8bda-6505d0162332":{"parentId":"1bca05f4-9838-4e13-abcd-cb44d90240b8","id":"a8f2abeb-8919-4261-8bda-6505d0162332","childrenIds":[],"role":"assistant","content":"permissions\n\nOkay, let me tackle this step by step. The user wants a Next.js 15 app with React 19, using npx create scripts and Storybook. They also want a landing page with 10 sections and Chakra UI.\n\nFirst, I need to check if React 19 is compatible with Next.js 15. From the context, there's a mention of ReactJS 19 with Next.js in one of the sources. So, I can use npx create-next-app@latest for Next.js 15.\n\nNext, integrate Chakra UI. The context shows how to install Chakra UI with Next.js using @chakra-ui/react and other dependencies. Also, Storybook setup steps are in the context, using @storybook/nextjs.\n\nFor the landing page with 10 sections, I'll structure each section as a component. Chakra's Box, Heading, Text, and Divider can be used for sections.\n\nIncluding Storybook: Use the @storybook/nextjs package. Setup steps involve creating stories for each section, but since it's a landing page, maybe create a single story with multiple sections.\n\nWait, the user said \"include elements you actually need.\" Maybe not all 10 sections as separate stories but the whole page as one component with sections.\n\nSo, steps:\n\n1. Create Next.js 15 app with npx create-next-app@latest.\n2. Install Chakra UI and Storybook via npm install commands.\n3. Configure Storybook in .storybook/main.js with @storybook/nextjs framework.\n4. Create a LandingPage component in app/page.tsx with 10 sections using Chakra's components.\n5. Create a Storybook story for LandingPage to showcase it.\n\nLet me check the context again for exact commands and configurations. For Storybook, the .storybook/main.js setup is needed. Also, the landing page structure would use Chakra's layout components.\n\nPotential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15. Also, ensuring that all sections are properly structured.\n\n<details type=\"code_interpreter\" done=\"false\">\n<summary>Analyzing...</summary>\n```python\n```py\n# The following steps are to be executed in the terminal, not in Python. This is for guidance.\n# However, since this is a code interpreter, the actual shell commands cannot be executed here. Below steps are for reference.\n\n# Step 1: Create next.js app\n# Run in terminal\nnpx create-next-app@latest my-nextjs19-app\n\n# Step 2: Navigate to app directory\ncd my-nextjs19-app\n\n# Step 3: Install Chakra UI and Storybook\nnpm install @chakra-ui/react @emotion/react @emotion/styled framer-motion\nnpm install -D @storybook/nextjs\n\n# Step 4: Setup Storybook\nnpx storybook init --builder webpack5\n```\n```\n</details>\npermissions\n\nOkay, let me tackle this step by step. The user wants a Next.js 15 app with React 19, using npx create scripts and Storybook. They also want a landing page with 10 sections and Chakra UI.\n\nFirst, I need to check if React 19 is compatible with Next.js 15. From the context, there's a mention of ReactJS 19 with Next.js in one of the sources. So, I can use npx create-next-app@latest for Next.js 15.\n\nNext, integrate Chakra UI. The context shows how to install Chakra UI with Next.js using @chakra-ui/react and other dependencies. Also, Storybook setup steps are in the context, using @storybook/nextjs.\n\nFor the landing page with 10 sections, I'll structure each section as a component. Chakra's Box, Heading, Text, and Divider can be used for sections.\n\nIncluding Storybook: Use the @storybook/nextjs package. Setup steps involve creating stories for each section, but since it's a landing page, maybe create a single story with multiple sections.\n\nWait, the user said \"include elements you actually need.\" Maybe not all 10 sections as separate stories but the whole page as one component with sections.\n\nSo, steps:\n\n1. Create Next.js 15 app with npx create-next-app@latest.\n2. Install Chakra UI and Storybook via npm install commands.\n3. Configure Storybook in .storybook/main.js with @storybook/nextjs framework.\n4. Create a LandingPage component in app/page.tsx with 10 sections using Chakra's components.\n5. Create a Storybook story for LandingPage to showcase it.\n\nLet me check the context again for exact commands and configurations. For Storybook, the .storybook/main.js setup is needed. Also, the landing page structure would use Chakra's layout components.\n\nPotential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15. Also, ensuring that all sections are properly structured.\n\n<details type=\"code_interpreter\" done=\"true\" output=\"{&quot;stdout&quot;: null, &quot;stderr&quot;: &quot;PythonError: Traceback (most recent call last):\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 597, in eval_code_async\\n    await CodeRunner(\\n          ^^^^^^^^^^^\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 285, in __init__\\n    self.ast = next(self._gen)\\n               ^^^^^^^^^^^^^^^\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 149, in _parse_and_compile_gen\\n    mod = compile(source, filename, mode, flags | ast.PyCF_ONLY_AST)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\&quot;&lt;exec&gt;\\&quot;, line 1\\n    ```py\\n    ^\\nSyntaxError: invalid syntax\\n&quot;, &quot;result&quot;: null}\">\n<summary>Analyzed</summary>\n```python\n```py\n# The following commands are for reference and cannot be executed in this environment.\n# However, here's what the final project structure would look like:\n\n# Project Structure:\n# my-nextjs19-app/\n# ‚îú‚îÄ‚îÄ app/\n# ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx\n# ‚îú‚îÄ‚îÄ .storybook/\n# ‚îÇ   ‚îú‚îÄ‚îÄ main.js\n# ‚îÇ   ‚îî‚îÄ‚îÄ preview.ts\n# ‚îú‚îÄ‚îÄ components/\n# ‚îÇ   ‚îú‚îÄ‚îÄ LandingPage.tsx\n# ‚îú‚îÄ‚îÄ public/\n# ‚îú‚îÄ‚îÄ styles/\n# ‚îî‚îÄ‚îÄ package.json\n\n# For the landing page with 10 sections using Chakra UI, here's an example of app/page.tsx:\nimport { Box, Heading, Text } from '@chakra-ui/react';\n\nexport default function Home() {\n  return (\n    <Box p={4}>\n      <Heading mb={4}>Section 1</Heading>\n      <Text>Content for section 1...</Text>\n\n      {/* Repeat similar sections up to 10 */}\n    </Box>\n  );\n}\n\n# For Storybook, main.js would have:\nexport default {\n  stories: ['../components/**/*.stories.@(js|jsx|mjs|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials'\n  ],\n};\n```\n```\n</details>","model":"codewriter:latest","modelName":"codewriter","modelIdx":0,"userContext":null,"timestamp":1745909473,"statusHistory":[{"action":"web_search","description":"Generating search query","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"how to create a next.js 15 app with react 19 using npx create scripts","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"setup chakra ui in next.js 15 project","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"integrate storybook with next.js 15","done":false},{"action":"web_search","description":"Searched {{count}} sites","urls":["https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","https://www.chakra-ui.com/docs/get-started/frameworks/next-app","https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","https://storybook.js.org/docs/get-started/frameworks/nextjs","https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","https://storybook.js.org/recipes/next"],"done":true}],"sources":[{"source":{"collection_name":"web-search-e100b905b2fcf59be27ed4f5032e00a602fee66b669006b4dd98","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa"]},"document":["How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | MediumOpen in appSign upSign inWriteSign upSign inFrontEnd Web¬∑FrontendWeb is a platform for writers and readers to read and write a new post about frontend developers, full-stack developers, Web developers, and Computer science. It is an open-source community that joins and gathers frontend developers to build and share knowledge with otherHow can ReactJS 19 be used with Next.js in less than five minutes?Member-only storyReact 19 + Nextjs (Updated)How can ReactJS 19 be used with Next.js in less than five minutes?Try reactjs 19 features using nextjs within the simple step.Rajdeep SinghFollow3 min read¬∑May 17, 2024--ShareOn the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs.In a small tutorial, I will tell you how to install and use React 19 with nextjs. For that, follow the","a small tutorial, I will tell you how to install and use React 19 with nextjs. For that, follow the steps below:Create a new nextjs app.Install babel-plugin-react-compilerEnable experimental react compilerCreate a new nextjs app.First, create a new fresh app using create next app CLI using npm, yarn, or pnpm.npx create-next-app@rc# orpnpm create next-app@rcI used the pnpm to create a fresh new next app and check the command output.‚ûú  medium pnpm create next-app@rc nextjs-19.../share/pnpm/store/v3/tmp/dlx-123778   |   +1 +.../share/pnpm/store/v3/tmp/dlx-123778   | Progress: resolved 1, reused 0, downloaded 1, added 1, done‚úî Would you like to use TypeScript? ‚Ä¶ No / Yes‚úî Would you like to use ESLint? ‚Ä¶ No / Yes‚úî Would you like to use Tailwind CSS? ‚Ä¶ No / Yes‚úî Would you like to use `src/` directory? ‚Ä¶ No / Yes‚úî Would you like to use App Router? (recommended) ‚Ä¶ No / Yes‚úî Would you like to use Turbopack for next dev? ‚Ä¶ No / Yes‚úî Would you like to customize the default import alias (@/*)? ‚Ä¶","Turbopack for next dev? ‚Ä¶ No / Yes‚úî Would you like to customize the default import alias (@/*)? ‚Ä¶ No / Yes‚úî What import alias would you like configured? ‚Ä¶ @/*Creating a new Next.js app in /home/officialrajdeepsingh/medium/nextjs-19.Using pnpm.Initializing project with template: app-tw Installing dependencies:- react- react-dom- nextInstalling devDependencies:- typescript- @types/node- @types/react- @types/react-dom- postcss- tailwindcss- eslint- eslint-config-nextPackages: +358+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Downloading registry.npmjs.org/next/15.0.0-rc.0: 20.52 MB/20.52 MB, doneDownloading registry.npmjs.org/@next/swc-linux-x64-gnu/15.0.0-rc.0: 42.72 MB/42.72 MB‚Ä¶----FollowPublished in FrontEnd Web450 Followers¬∑Last published¬†Apr 18, 2025FrontendWeb is a platform for writers and readers to read and write a new post about frontend developers,","is a platform for writers and readers to read and write a new post about frontend developers, full-stack developers, Web developers, and Computer science. It is an open-source community that joins and gathers frontend developers to build and share knowledge with otherFollowFollowWritten by Rajdeep Singh1.7K Followers¬∑91 FollowingFollow me if you learn more about JavaScript | TypeScript | React.js | Next.js | Linux | NixOS | Frontend Developer | https://linktr.ee/officialrajdeepsinghFollowNo responses yetHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"],"metadata":[{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":0,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":901,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":1802,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":2701,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"}]},{"source":{"collection_name":"web-search-888eb636129677163b11c915aeaa200ff1d8d22ba3f88283768a","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4"]},"document":["How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | MediumOpen in appSign upSign inWriteSign upSign inHow to Set Up Next.js 15 for Production in 2024Jan HestersFollow23 min read¬∑Nov 19, 2024--18ListenShareI‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through countless iterations.Whether you‚Äôre part of a small team of one, two, or three developers, or you work on a massive Next.js project with multiple teams on the same codebase, it‚Äôs critical to get the foundation of your app right from the start. Even if you‚Äôre working on an existing project, you will discover some hard-earned insights that you can apply to your app today.Let me take you by the hand and show you all the steps and packages that you want to set up and explain to you why they‚Äôre useful, so your app scales smoothly.Initialize Your ProjectBegin by creating a new","you why they‚Äôre useful, so your app scales smoothly.Initialize Your ProjectBegin by creating a new Next.js project.npx create-next-app@latestIt may ask you if it can install the latest create-next-app version, just hit yes.Need to install the following packages:create-next-app@15.0.0Ok to proceed? (y)And then configure your project by hitting yeson everything (TypeScript, Tailwind, app router).‚úî **What is your project named?** ‚Ä¶ reactsquad-production‚úî **Would you like to use** **TypeScript****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **ESLint****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **Tailwind CSS****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **`src/` directory****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **App Router****? (recommended)** ‚Ä¶ No / YesYes‚úî **Would you like to customize the default** **import alias** **(@/*)?** ‚Ä¶ No / NoThen change into the directory of your project and open it in your favorite editor.$ cd nextjs-for-production~/dev/nextjs-for-production","project and open it in your favorite editor.$ cd nextjs-for-production~/dev/nextjs-for-production (main) ü§Ø$ cursor .Run The Development ServerYou want to verify that your setup worked.Run npm run dev to start the development server.Visit http://localhost:3000 to view your application.Type Checks With TypeScriptYour project has TypeScript already configured, but you also want to add an explicit command to your package.json that checks all your files for type errors.\"type-check\": \"tsc -b\"You‚Äôre going to use this command later together with other automated static analysis checks.Code FormattingWhen you collaborate with a large team on a project, it‚Äôs important to unify the way that everyone writes code. Discuss choices like using semicolons, quote styles, and tabs versus spaces with your team.Then use tools to enforce your style guide and format code automatically.There are two tools for that: Prettier and ESLint.PrettierPrettier is an opinionated code formatter that eliminates style","that: Prettier and ESLint.PrettierPrettier is an opinionated code formatter that eliminates style discussions during code reviews.Install Prettier together with its Tailwind plugin.npm install --save-dev prettier prettier-plugin-tailwindcssCreate aprettier.config.js file with your preferred rules.module.exports = {  arrowParens: 'avoid',  bracketSameLine: false,  bracketSpacing: true,  htmlWhitespaceSensitivity: 'css',  insertPragma: false,  jsxSingleQuote: false,  plugins: ['prettier-plugin-tailwindcss'],  printWidth: 80,  proseWrap: 'always',  quoteProps: 'as-needed',  requirePragma: false,  semi: true,  singleQuote: true,  tabWidth: 2,  trailingComma: 'all',  useTabs: false,};Add a formatting script to your package.json.\"format\": \"prettier --write .\",Run the formatter to apply your style.$ npm run format> nextjs-for-production@0.1.0 format> prettier --write .next.config.mjs 4ms (unchanged)package-lock.json 54ms (unchanged)package.json 1ms (unchanged)postcss.config.mjs 2ms","4ms (unchanged)package-lock.json 54ms (unchanged)package.json 1ms (unchanged)postcss.config.mjs 2ms (unchanged)README.md 20ms (unchanged)src/app/globals.css 17ms (unchanged)src/app/layout.tsx 30ms (unchanged)src/app/page.tsx 11ms (unchanged)tailwind.config.ts 2ms (unchanged)tsconfig.json 2ms (unchanged)Your files are now ‚Äúprettier‚Äù, but you also want to use ESLint.ESLintESLint can scan your code for both stylistic and logical issues. Install ESLint and its plugins, like unicorn, playwright and import sort.npm install --save-dev @typescript-eslint/parser eslint-plugin-unicorn eslint-plugin-import eslint-plugin-playwright eslint-config-prettier eslint-plugin-prettier eslint-plugin-simple-import-sortUpdate your.eslintrc.json{  \"extends\": [    \"next/core-web-vitals\",    \"plugin:unicorn/recommended\",    \"plugin:import/recommended\",    \"plugin:playwright/recommended\",    \"plugin:prettier/recommended\"  ],  \"plugins\": [\"simple-import-sort\"],  \"rules\": {    \"simple-import-sort/exports\":","],  \"plugins\": [\"simple-import-sort\"],  \"rules\": {    \"simple-import-sort/exports\": \"error\",    \"simple-import-sort/imports\": \"error\",    \"unicorn/no-array-callback-reference\": \"off\",    \"unicorn/no-array-for-each\": \"off\",    \"unicorn/no-array-reduce\": \"off\",    \"unicorn/prevent-abbreviations\": [      \"error\",      {        \"allowList\": {          \"e2e\": true        },        \"replacements\": {          \"props\": false,          \"ref\": false,          \"params\": false        }      }    ]  },  \"overrides\": [    {      \"files\": [\"*.js\"],      \"rules\": {        \"unicorn/prefer-module\": \"off\"      }    }  ]}This tutorial‚Äôs plugins offer different functions. For detailed descriptions, visit their respective GitHub pages.But in short, they enforce coding standards, organize imports, and ensure correct use of modern JavaScript features. Since ESLint and Prettier can conflict, this setup makes them work together smoothly. The plugins also help prevent bugs and keep styles consistent,","makes them work together smoothly. The plugins also help prevent bugs and keep styles consistent, especially with tools like Vitest and Playwright.Add a linting script to your package.json.\"lint:fix\": \"next lint --fix\",Run it to format all files according to your new rules.$ npm run lint:fix> nextjs-for-production@0.1.0 lint:fix> next lint --fix‚úî No ESLint warnings or errorsIf you get a TypeScript version warning, you can ignore that.Note: As of this article‚Äôs writing, ESLint 9 is available, but this tutorial uses ESLint 8 because many plugins do not yet support the latest version.CommitlintWhen collaborating with a large team, it‚Äôs also helpful to enforce consistent commit messages to keep the project history clear. By choosing the right standards, you can automate changelog and release generation with correct semantic versioning.Install Commitlint and its necessary configurations. This includes Husky, which helps manage Git hooks.npm install --save-dev @commitlint/cli@latest","This includes Husky, which helps manage Git hooks.npm install --save-dev @commitlint/cli@latest @commitlint/config-conventional@latest husky@latestInitialize Husky in your project to set up the basic configuration.npx husky-init && npm installAdd hooks to automate linting and type checking before each commit, and customize your commit message workflow.npx husky add .husky/pre-commit 'npm run lint && npm run type-check'npx husky add .husky/prepare-commit-msg 'exec < /dev/tty && npx cz --hook || true'The pre-commit hook runs after git commit, but before the commit message is finalized and runs linting and type-checking on your code.The prepare-commit-msg hook runs after git commit is initiated but before the commit message editor opens. It runs commitizen CLI to let you craft conventional commit messages. You'll learn how to use this hook in a bit.Remove the line that says npm test from .husky/_/pre-commit.Make sure these scripts are executable.chmod a+x .husky/pre-commitchmod a+x",".husky/_/pre-commit.Make sure these scripts are executable.chmod a+x .husky/pre-commitchmod a+x .husky/prepare-commit-msgHere, chmod stands for \"change mode.\" This command allows you to change the access permissions or modes of a file or directory in Unix and Unix-like operating systems. The argument a+x adds execute permissions for all users.Install Commitizen, which provides a CLI for crafting conventional commit messages.npm install --save-dev commitizen cz-conventional-changelogConfigure Commitizen in your package.json to use the conventional changelog standard.\"config\": {  \"commitizen\": {    \"path\": \"cz-conventional-changelog\"  }},The conventional changeloge standard is a specification for adding human and machine-readable meaning to commit messages. It is designed to automate the producing of changelogs and releases based on the Git history of your project.A future article will explain this standard in detail. It‚Äôs included in this tutorial because getting it right from the","explain this standard in detail. It‚Äôs included in this tutorial because getting it right from the start is important. You can use it and benefit from it without needing an in-depth understanding.Create your commitlint.config.cjs file with rules that suit your team's needs. This setup ensures your commit messages are consistent and relevant to the changes made.const config = {  extends: ['@commitlint/config-conventional'],  rules: {    'references-empty': [1, 'never'],    'footer-max-line-length': [0, 'always'],    'body-max-line-length': [0, 'always'],  },};module.exports = config;Run the following command to start crafting your commit messages using a guided CLI.$ git add --all$ npx czcz-cli@4.3.0, cz-conventional-changelog@3.3.0? Select the type of change that you'recommitting: (Use arrow keys)‚ùØ feat:     A new feature  fix:      A bug fix  docs:     Documentation only changes  style:    Changes that do not affect themeaning of the code (white-space, formatting,missing semi-colons,","Changes that do not affect themeaning of the code (white-space, formatting,missing semi-colons, etc)The cz command asks a series of questions and then writes your commit message for you.? Select the type of change that you\\\\'re committing: feat:     A new feature? What is the scope of this change (e.g. component or file name): (press enter to skip)? Write a short, imperative tense description of the change (max 63 chars): (61) set up TS type checks, ESLint, Prettier, Commitlint and Husky? Provide a longer description of the change: (press enter to skip) Sets up package.json script to do TS type checks. Sets up Prettier and ESLint with good rules. Configures Husky and sets up Commitizen using the conventional commit standard.? Are there any breaking changes? No? Does this change affect any open issues? No[main eb69ccd] feat(set up static analysis checks): set up TS type checks, ESLint, Prettier, Commitlint and Husky 7 files changed, 3108 insertions(+), 159 deletions(-) create mode","Prettier, Commitlint and Husky 7 files changed, 3108 insertions(+), 159 deletions(-) create mode 100755 .husky/pre-commit create mode 100755 .husky/prepare-commit-msg create mode 100644 commitlint.config.cjsAs you answer all questions, the Husky hooks will automatically run TypeScript type checks and linting.Folder structureThere are usually two popular ways to organize your code: grouping by type or grouping by feature.Group by type looks like this:.‚îú‚îÄ‚îÄ components‚îÇ ‚îú‚îÄ‚îÄ todos‚îÇ ‚îî‚îÄ‚îÄ user‚îú‚îÄ‚îÄ reducers‚îÇ ‚îú‚îÄ‚îÄ todos‚îÇ ‚îî‚îÄ‚îÄ user‚îî‚îÄ‚îÄ tests    ‚îú‚îÄ‚îÄ todos    ‚îî‚îÄ‚îÄ userAnd grouping by feature looks like this:.‚îú‚îÄ‚îÄ todos‚îÇ ‚îú‚îÄ‚îÄ component‚îÇ ‚îú‚îÄ‚îÄ reducer‚îÇ ‚îî‚îÄ‚îÄ test‚îî‚îÄ‚îÄ user    ‚îú‚îÄ‚îÄ component    ‚îú‚îÄ‚îÄ reducer    ‚îî‚îÄ‚îÄ testGrouping files by feature in a project organizes all related components, reducers, and tests together, making it easier to manage and modify each feature. It has the following benefits:Scalability: Large applications are easier to scale and maintain because each feature acts like a mini-application.","applications are easier to scale and maintain because each feature acts like a mini-application. You avoid scrolling up and down in your file list to find all the files you need.Collaboration: Developers can focus on specific features without disrupting others‚Äô work.Onboarding: New developers understand the project structure faster, as all files for a feature are in one place.Refactoring: Updating a feature is streamlined since all its elements are grouped together.Modularity: Features can be reused, shared, or turned into standalone packages more easily.Micro-frontends: If your application ever grows to 30 or more engineers, it is easy to refactor to micro-frontends.Here is a more concrete example.src/‚îú‚îÄ‚îÄ app/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ (group)/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ about/‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ settings/‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ dashboard/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ components/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ header/‚îÇ","‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ components/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ header/‚îÇ       ‚îú‚îÄ‚îÄ header-component.tsx‚îÇ       ‚îú‚îÄ‚îÄ header-component.test.ts‚îÇ       ‚îî‚îÄ‚îÄ header.module.css‚îú‚îÄ‚îÄ features/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ todos/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-component.tsx‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-component.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-container.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-reducer.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-reducer.test.ts‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ todos-styles.ts‚îÇ   ‚îî‚îÄ‚îÄ user/‚îÇ       ‚îú‚îÄ‚îÄ ...‚îÇ       ‚îú‚îÄ‚îÄ user-reducer.ts‚îÇ       ‚îî‚îÄ‚îÄ user-reducer.test.ts‚îú‚îÄ‚îÄ hocs/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ with-layout.tsx‚îú‚îÄ‚îÄ hooks/‚îú‚îÄ‚îÄ redux/‚îÇ   ‚îú‚îÄ‚îÄ root-reducer.ts‚îÇ   ‚îú‚îÄ‚îÄ root-saga.ts‚îÇ   ‚îî‚îÄ‚îÄ store.ts‚îú‚îÄ‚îÄ ...‚îî‚îÄ‚îÄ middleware.tsThis example shows you how you can organize your src/ directory. Generally, everything is grouped by feature. Tests files live next to their respective implementation files. But anything that is shared by multiple features is then grouped in general folders, such as components/ or HOCs/ or hooks/. Shared setup for state management - in","in general folders, such as components/ or HOCs/ or hooks/. Shared setup for state management - in this example for Redux - lives in a redux/ folder.Some people also like to group by feature within the app/ folder. Here is how that would look like.src/‚îú‚îÄ‚îÄ app/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ (group)/‚îÇ   ‚îú‚îÄ‚îÄ dashboard/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-header.tsx‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-header.test.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-widgets.tsx‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ dashboard-widgets.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fetch-data.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fetch-data.test.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth-service.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth-service.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.ts‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ ...‚îî‚îÄ‚îÄ middleware.tsIn this tutorial, you‚Äôre going to group files by feature in the first way.VitestIf you want to avoid bugs and prevent regressions, you need to write tests. Vitest is a great choice because it has the same API as the most popular framework, which is Jest, but it runs","great choice because it has the same API as the most popular framework, which is Jest, but it runs faster.Install Vitest.npm install -D vitestAnd configure a testing command in your package.json.\"test\": \"vitest --reporter=verbose\",Then create anexample.test.ts file and write a short test to check to check Vitest works.import { describe, expect, test } from 'vitest';describe('example', () => {  test('given a passing test: passes', () => {    expect(1).toStrictEqual(1);  });});It should pass.$ npm test> nextjs-for-production@0.1.0 test> vitest --reporter=verbose DEV  v2.0.5 /Users/jan/dev/nextjs-for-production ‚úì src/example.test.ts (1)   ‚úì example (1)     ‚úì given a passing test: passes Test Files  1 passed (1)      Tests  1 passed (1)   Start at  14:06:24   Duration  203ms (transform 20ms, setup 0ms, collect 17ms, tests 1ms, environment 0ms, prepare 56ms) PASS  Waiting for file changes...       press h to show help, press q to quitIf you want to learn how you can write better tests,","press h to show help, press q to quitIf you want to learn how you can write better tests, check out this article that teaches you 12 evergreen testing principles that every senior developer should know.React Testing LibraryYou also want to write tests for your React components. For that, you can use the React Testing Library, often abbreviated as RTL.npm install --save-dev @testing-library/react @testing-library/dom @testing-library/jest-dom @testing-library/user-event @types/react @types/react-dom happy-dom @vitejs/plugin-react vite-tsconfig-pathsThen, create a vitest.config.ts file.import react from '@vitejs/plugin-react';import tsconfigPaths from 'vite-tsconfig-paths';import { defineConfig } from 'vitest/config';export default defineConfig({  plugins: [react(), tsconfigPaths()],  server: {    port: 3000,  },  test: {    environment: 'happy-dom',    globals: true,    setupFiles: ['./src/tests/setup-test-environment.ts'],    include:","globals: true,    setupFiles: ['./src/tests/setup-test-environment.ts'],    include: ['./src/**/*.{spec,test}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],    watch: {      ignored: [        String.raw`.*\\\\/node_modules\\\\/.*`,        String.raw`.*\\\\/build\\\\/.*`,        String.raw`.*\\\\/postgres-data\\\\/.*`,      ],    },    coverage: {      reporter: ['text', 'json', 'html'],    },  },});It sets up the development server, specifies testing parameters like that the environment is happy-dom and file paths, and defines coverage report formats.And create a file called src/tests/setup-test-environment.ts to set up your test environment.import '@testing-library/jest-dom/vitest';// See <https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#configuring-your-testing-environment>.// @ts-ignoreglobalThis.IS_REACT_ACT_ENVIRONMENT = true;The first line imports additional assertions, which extend Vitest‚Äôs built-in assertions, allowing you to more easily test DOM nodes. For example, you can check if","built-in assertions, allowing you to more easily test DOM nodes. For example, you can check if an element is visible, has a certain text content, or includes specific attributes.The global environment flag ensures that tests involving state updates work as expected without timing issues.Next, you want to set up a custom render method src/tests/react-test-utils.tsx./* eslint-disable import/export */import type { RenderOptions } from '@testing-library/react';import { render } from '@testing-library/react';import type { ReactElement } from 'react';const customRender = (  ui: ReactElement,  options?: Omit<RenderOptions, 'queries'>,) =>  render(ui, {    wrapper: ({ children }) => <>{children}</>,    ...options,  });// re-export everythingexport * from '@testing-library/react';// override render methodexport { customRender as render };export { default as userEvent } from '@testing-library/user-event';You can use this to wrap your code in providers, for example, when using Redux, or adding","can use this to wrap your code in providers, for example, when using Redux, or adding layouts and styling.Make sure your configuration worked by writing a test for a React component.import { describe, expect, test } from 'vitest';import { render, screen } from '@/tests/react-test-utils';function MyReactComponent() {  return <div>My React Component</div>;}describe('MyReactComponent', () => {  test('given no props: renders a text', () => {    render(<MyReactComponent />);    expect(screen.getByText('My React Component')).toBeInTheDocument();  });});You import render and screen from your test utils file instead of from RTL directly.toBeInTheDocument() is one of those special assertions that you configured earlier in your test environment setup file.It should pass, too. ‚úì src/features/example.test.tsx (1)   ‚úì MyReactComponent (1)     ‚úì given no props: renders a text Test Files  1 passed (1)      Tests  1 passed (1)   Start at  09:33:32   Duration  402ms (transform 24ms, setup 55ms,","(1)      Tests  1 passed (1)   Start at  09:33:32   Duration  402ms (transform 24ms, setup 55ms, collect 87ms, tests 9ms, environment 80ms, prepare 45ms) PASS  Waiting for file changes...       press h to show help, press q to quitStylingNow let‚Äôs talk about styling. The two most important aspects to get right are accessibility and maintainability. One of the most popular libraries out there that nails both of these aspects is Shadcn. It uses Tailwind for streamlined style management and Radix for enhanced accessibility.Initialize Shadcn in your project.$ npx shadcn@latest init‚úî **Which** **style** **would you like to use?** ‚Ä∫ New York‚úî **Which color would you like to use as** **base color****?** ‚Ä∫ Slate‚úî **Would you like to use** **CSS variables** **for colors?** ‚Ä¶ no / yes‚úî Writing components.json...‚úî Initializing project...‚úî Installing dependencies...Success! Project initialization completed. You may now add components.$ npx shadcn@latest init‚úî **Which** **style** **would you like","You may now add components.$ npx shadcn@latest init‚úî **Which** **style** **would you like to use?** ‚Ä∫ New York‚úî **Which color would you like to use as** **base color****?** ‚Ä∫ Slate‚úî **Would you like to use** **CSS variables** **for colors?** ‚Ä¶ no / yes‚úî Writing components.json‚Ä¶‚úî Initializing project‚Ä¶‚úî Installing dependencies‚Ä¶Success! Project initialization completed. You may now add components.npx shadcn@latest add cardInternationalizationAs your app scales, you want to translate it to multiple languages, so it can reach more users.And adding internationalization ‚Äî or i18n ‚Äî in a later cycle of an app, can be a pain because you‚Äôll have to find all hardcoded strings and replace them with translation function calls.Install negotiator and a locale matcher.npm install negotiator @formatjs/intl-localematcherThe @formatjs/intl-localematcher package selects the best language for your app's content based on a user's language preferences. The negotiator package helps your app to figure out","content based on a user's language preferences. The negotiator package helps your app to figure out what type of content (like language or format) your user's browser can handle best, based on the information the browser sends.You‚Äôll also need to install the TypeScript types for the negotiator package.npm install --save-dev @types/negotiatorThen, create your i18n config in a new file at @src/features.internationalization/il8n-config.ts.import { match } from '@formatjs/intl-localematcher';import Negotiator from 'negotiator';import { type NextRequest, NextResponse } from 'next/server';import { i18n } from './i18n-config';function getLocale(request: NextRequest) {  const headers = {    'accept-language': request.headers.get('accept-language') ?? '',  };  const languages = new Negotiator({ headers }).languages();  return match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const","localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const pathnameHasLocale = i18n.locales.some(    locale => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`,  );  if (pathnameHasLocale) {    return;  }  const locale = getLocale(request);  request.nextUrl.pathname = `/${locale}${pathname}`;  return NextResponse.redirect(request.nextUrl);}Use that il8n config, in your localization-middleware at src/features/internationalization/localization-middleware.ts .import { match } from '@formatjs/intl-localematcher';import Negotiator from 'negotiator';import { type NextRequest, NextResponse } from 'next/server';import { i18n } from './i18n-config';function getLocale(request: NextRequest) {  const headers = {    'accept-language': request.headers.get('accept-language') ?? '',  };  const languages = new Negotiator({ headers }).languages();  return match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request:","match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const pathnameHasLocale = i18n.locales.some(    locale => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`,  );  if (pathnameHasLocale) {    return;  }  const locale = getLocale(request);  request.nextUrl.pathname = `/${locale}${pathname}`;  return NextResponse.redirect(request.nextUrl);}The purpose of this middleware is to automatically detect and redirect your users to the appropriate language version of the website based on their browser language preferences.Then create a middleware file src/middleware.ts in the root of your project, and use your localization middleware there.import { NextRequest } from 'next/server';import { localizationMiddleware } from './features/internationalization/localization-middleware';// Matcher ignoring `/_next/` and `/api/` and svg files.export const config = { matcher:","Matcher ignoring `/_next/` and `/api/` and svg files.export const config = { matcher: ['/((?!api|_next|.*.svg$).*)'] };export function middleware(request: NextRequest) {  return localizationMiddleware(request);}It‚Äôs time to add your translations. Create a json dictionary for your English translations at src/features/internalization/dictionaries/en-us.json.{  \"counter\": {    \"decrement\": \"Decrement\",    \"increment\": \"Increment\"  },  \"landing\": {    \"welcome\": \"Welcome\"  }}And then, create a file src/features/internalization/get-dictionaries.ts for your getDictionary function.import \"server-only\";import type { Locale } from \"./i18n-config\";// We enumerate all dictionaries here for better linting and typescript support.// We also get the default import for cleaner types.const dictionaries = {  \"en-US\": () => import(\"./dictionaries/en-US.json\").then((module) => module.default),};export const getDictionary = async (locale: Locale) =>  dictionaries[locale]?.() ?? dictionaries[\"en-US\"]();It","getDictionary = async (locale: Locale) =>  dictionaries[locale]?.() ?? dictionaries[\"en-US\"]();It takes in a locale and then returns the respective dictionary.If you want to add a hook that lets your users pick their language, it can look like this.import { usePathname } from 'next/navigation';import { Locale } from './i18n-config';export function useSwitchLocaleHref() {  const pathName = usePathname();  const getSwitchLocaleHref = (locale: Locale) => {    if (!pathName) return '/';    const segments = pathName.split('/');    segments[1] = locale;    return segments.join('/');  };  return getSwitchLocaleHref;}And then you can use that hook in a component, and use it‚Äôs return value in a <Link/> like this.<Link href={getSwitchLocaleHref(locale)}>{locale}</Link>Change your URL structure to support i18n. Create a new folder [lang] in your app/ folder, which creates a dynamic segment for the language.Move your page.tsx and layout.tsx files into that folder, and modify the layout to set the","language.Move your page.tsx and layout.tsx files into that folder, and modify the layout to set the correct language on the <html /> tag.import '../globals.css';import type { Metadata } from 'next';import { Inter } from 'next/font/google';import { Locale } from '@/features/internationalization/i18n-config';const inter = Inter({ subsets: ['latin'] });export const metadata: Metadata = {  title: \"Jan Hesters' Next.js for production tutorial\",  description: 'Brought to you by ReactSquad.io',};export default function RootLayout({  children,  params,}: Readonly<{  children: React.ReactNode;  params: { lang: Locale };}>) {  return (    <html lang={params.lang}>      <body className={inter.className}>{children}</body>    </html>  );}Going forward, you can use the getDictionary function in any server component.import { getDictionary } from '@/features/internationalization/get-dictionaries';import { Locale } from '@/features/internationalization/i18n-config';import { CounterComponent } from","{ Locale } from '@/features/internationalization/i18n-config';import { CounterComponent } from './counter-component';export default async function IndexPage({  params: { lang },}: {  params: { lang: Locale };}) {  const dictionary = await getDictionary(lang);  return (    <div>      <p>Current locale: {lang}</p>      <p>This text is rendered on the server: {dictionary.landing.welcome}</p>      <CounterComponent dictionary={dictionary.counter} />    </div>  );}For client components, you‚Äôll want to pass in the respective dictionary instead.'use client';import { useState } from 'react';import type { getDictionary } from '@/features/internationalization/get-dictionaries';export function CounterComponent({  dictionary,}: {  dictionary: Awaited<ReturnType<typeof getDictionary>>['counter'];}) {  const [count, setCount] = useState(0);  return (    <p>      This component is rendered on the client:      <button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>","<button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>      {count}      <button onClick={() => setCount(n => n + 1)}>        {dictionary.increment}      </button>    </p>  );}'use client';import { useState } from 'react';import type { getDictionary } from '@/features/internationalization/get-dictionaries';export function CounterComponent({  dictionary,}: {  dictionary: Awaited<ReturnType<typeof getDictionary>>['counter'];}) {  const [count, setCount] = useState(0);  return (    <p>      This component is rendered on the client:      <button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>      {count}      <button onClick={() => setCount(n => n + 1)}>        {dictionary.increment}      </button>    </p>  );}DatabaseThis tutorial is going to use Postgres for its database because it is well battle-tested, but you‚Äôre going to use the Prisma ORM to abstract away the database layer. This gives you the flexibility","going to use the Prisma ORM to abstract away the database layer. This gives you the flexibility to use a variety of databases, and simplifies the API that you use to interact with it.npm install prisma --save-devYou‚Äôll also need to install the Prisma client.npm install @prisma/clientInitialize Prisma.npx prisma initThis auto-generates yourprisma/schema.prisma file.generator client {  provider = \"prisma-client-js\"}datasource db {  provider = \"postgresql\"  // Uses connection pooling  url = env(\"DATABASE_URL\")}model UserProfile {  id                         String   @id @default(cuid())  createdAt                  DateTime @default(now())  updatedAt                  DateTime @updatedAt  email                      String   @unique  name                       String   @default(\"\")  acceptedTermsAndConditions Boolean  @default(false)}Add a aUserProfile model to it, which has an email and a name and a boolean whether they accepted your terms and conditions.If you ran npx prisma init, rename","and a boolean whether they accepted your terms and conditions.If you ran npx prisma init, rename your .env file to .env.local, otherwise create it and make sure it contains the credentials for your Prisma database.DATABASE_URL=\"postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public\"Now create a src/lib/prisma.ts file, which will contain your Prisma client connection.import { PrismaClient } from '@prisma/client';declare global {  var __database__: PrismaClient;}let prisma: PrismaClient;if (process.env.NODE_ENV === 'production') {  prisma = new PrismaClient();} else {  if (!global.__database__) {    global.__database__ = new PrismaClient();  }  prisma = global.__database__;}export default prisma;The re-assignment ensures that in a non-production environment (like during development or testing), only one instance of the Prisma client is created and reused across the entire application. This approach prevents the overhead of repeatedly initializing new connections to the","application. This approach prevents the overhead of repeatedly initializing new connections to the database every time a module that needs database access is imported.Modify your package.json to include the following helper commands for Prisma.\"prisma:deploy\": \"npx prisma migrate deploy && npx prisma generate\",\"prisma:migrate\": \"npx prisma migrate dev --name\",\"prisma:push\": \"npx prisma db push && npx prisma generate\",\"prisma:reset-dev\": \"run-s prisma:wipe prisma:seed dev\",\"prisma:seed\": \"tsx ./prisma/seed.ts\",\"prisma:setup\": \"prisma generate && prisma migrate deploy && prisma db push\",\"prisma:studio\": \"npx prisma studio\",\"prisma:wipe\": \"npx prisma migrate reset --force && npx prisma db push\",Some of these commands use the run-s, tsxand dotenvpackages, which you‚Äôll need to install.npm install --save-dev npm-run-all tsx dotenvHere‚Äôs an explanation of each Prisma command:‚Äúprisma:deploy‚Äù: Deploys database migrations and generates Prisma Client. It runs migrations on production databases","Deploys database migrations and generates Prisma Client. It runs migrations on production databases and updates the client API.‚Äúprisma:migrate‚Äù: Creates a new migration from changes in the Prisma schema, applying it in the development environment. You must specify a name for the migration after the command.‚Äúprisma:push‚Äù: Pushes the schema changes directly to the database and updates the Prisma Client. Useful for prototyping without creating migration files.‚Äúprisma:reset-dev‚Äù: Resets the development database by wiping it, re-seeding it, and applying migrations in development mode.‚Äúprisma:seed‚Äù: Runs a TypeScript seed script to populate the database with initial data.‚Äúprisma:setup‚Äù: Generates the Prisma Client, deploys migrations to the database, and pushes the schema to the database.‚Äúprisma:studio‚Äù: Opens Prisma Studio, a GUI for viewing and editing the database records.‚Äúprisma:wipe‚Äù: Resets the database by forcefully dropping all data and migrations and then pushes the schema","Resets the database by forcefully dropping all data and migrations and then pushes the schema changes.npm run prisma:setupIf your Prisma doesn‚Äôt recognize your .env.local, set your environment variable manually in your terminal. On Mac, this can be done using theexport command.export DATABASE_URL=\"postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public\"Create a primsa/seed.ts. You can use it to seed your database with data for development.import { exit } from 'node:process';import { PrismaClient } from '@prisma/client';import dotenv from 'dotenv';dotenv.config({ path: '.env.local' });const prisma = new PrismaClient();const prettyPrint = (object: any) =>  console.log(JSON.stringify(object, undefined, 2));async function seed() {  const user = await prisma.userProfile.create({    data: {      email: 'jan@reactsquad.io',      name: 'Jan Hesters',      acceptedTermsAndConditions: true,    },  });  console.log('========= üå± result of seed: =========');  prettyPrint({ user","true,    },  });  console.log('========= üå± result of seed: =========');  prettyPrint({ user });}seed()  .then(async () => {    await prisma.$disconnect();  })  // eslint-disable-next-line unicorn/prefer-top-level-await  .catch(async error => {    console.error(error);    await prisma.$disconnect();    exit(1);  });If you run it, it‚Äôll create your user.$ npm run prisma:seed> reactsquad-production@0.1.0 prisma:seed> tsx ./prisma/seed.ts========= üå± result of seed: ========={  \"user\": {    \"id\": \"clzekb5sp0000ock9gsp72p33\",    \"createdAt\": \"2024-08-03T20:04:27.289Z\",    \"updatedAt\": \"2024-08-03T20:04:27.289Z\",    \"email\": \"jan@reactsquad.io\",    \"name\": \"Jan Hesters\",    \"acceptedTermsAndConditions\": true  }}In your server components, you can use prisma to fetch any data.import prisma from '@/lib/prisma';import {  Card,  CardContent,  CardHeader,  CardTitle,} from '@/components/ui/card';export default async function Dashboard() {  const user = await prisma.userProfile.findUnique({","default async function Dashboard() {  const user = await prisma.userProfile.findUnique({    where: { email: 'jan@reactsquad.io' },  });  return (    <Card className=\"max-w-md mx-auto\">      <CardHeader>        <CardTitle>User Profile</Card.Title>      </CardHeader>      <CardContent>        {user ? (          <ul>            <li>Name: {user.name}</li>            <li>Email: {user.email}</li>          </ul>        ) : (          <p>User not found.</p>        )}      </CardContent>    </Card>  );}Use FacadesIt‚Äôs a good idea to abstract away your database calls using facades. A facade is a design pattern where you provide a simplified interface to a complex subsystem.Create a file that contains all facades related to your user profile model features/user-profile/user-profile-model.ts.import { UserProfile } from '@prisma/client';import prisma from '@/lib/prisma';export async function retrieveUserProfileFromDatabaseByEmail(  email: UserProfile['email'],) {  return await","function retrieveUserProfileFromDatabaseByEmail(  email: UserProfile['email'],) {  return await prisma.userProfile.findUnique({ where: { email } });}There are two main reasons for using facades.Increase vendor resistance ‚Äî You can switch third-party providers easily. For example, you might switch from Firebase to Supabase or vice versa. Instead of updating your whole codebase to reflect the change, you only update the facade.Simplify your code ‚Äî A facade can reduce the code you need to write in your application because it reduces the API to your specific application needs. Simultaneously, it makes your code easier to understand because you can give the facade descriptive names.Then use your facade in your server component.import { retrieveUserProfileFromDatabaseByEmail } from '@/features/user-profiles/user-profiles-model';import {  Card,  CardContent,  CardHeader,  CardTitle,} from '@/components/ui/card';export default async function Dashboard() {  const user =    await","from '@/components/ui/card';export default async function Dashboard() {  const user =    await retrieveUserProfileFromDatabaseByEmail('jan@reactsquad.io');  return (    <Card className=\"max-w-md mx-auto\">      <CardHeader>        <CardTitle>User Profile</Card.Title>      </CardHeader>      <CardContent>        {user ? (          <ul>            <li>Name: {user.name}</li>            <li>Email: {user.email}</li>          </ul>        ) : (          <p>User not found.</p>        )}      </CardContent>    </Card>  );}Vercel PostgresYou can use Vercel Postgres for your production deployment. They have an easy to follow guide, which you can check out in the Vercel documentation. But here are the steps real quick for your convenience.To set up a database in your Vercel project, follow these steps:Go to the Storage tab and click the Create Database button.When the Browse Storage modal opens, choose Postgres and click Continue.For creating a new database:In the dialog box, type","modal opens, choose Postgres and click Continue.For creating a new database:In the dialog box, type sample_postgres_db (or a name you prefer) in the Store Name field. Ensure the name has only alphanumeric characters, \"_\" or \"-\", and does not exceed 32 characters.Choose a region. For lower latency, select a region close to your function region, which is US East by default.Click Create.Then you‚Äôll need to add POSTGRES_URL_NON_POOLING to the datasource in your Prisma schema.datasource db {  provider  = \"postgresql\"  // Uses connection pooling  url       = env(\"DATABASE_URL\")  // Uses direct connection, ‚ö†Ô∏è make sure to keep this to `POSTGRES_URL_NON_POOLING`  // or you'll have dangling databases from migrations  directUrl = env(\"POSTGRES_URL_NON_POOLING\")}Vercel uses connection poolers, which manage a pool of database connections that can be reused by different parts of an application, rather than establishing a new connection for each database request. The directUrl property is used to","than establishing a new connection for each database request. The directUrl property is used to ensure operations requiring direct database access, such as migrations, can bypass the connection pooler for reliable execution.You can get the environment variables for your Vercel database by pulling them from Vercel.vercel env pull .envPlaywrightYou also want to use E2E tests because E2E tests give you the most confidence that your app works as intended. E2E tests are skipped far too often, but you really should make it a habit to write them. The benefits are compounding.Initialize Playwright.$ npm init playwright@latestGetting started with writing end-to-end tests with Playwright:Initializing project in '.'‚úî Where to put your end-to-end tests? ¬∑ playwright‚úî Add a GitHub Actions workflow? (y/N) ¬∑ false‚úî Install Playwright browsers (can be done manually via 'npx playwright install')? (Y/n) ¬∑ trueIf this is your first time using Playwright, you can have a look through the test-examples/","¬∑ trueIf this is your first time using Playwright, you can have a look through the test-examples/ folder that the initialization script creates, and then deleted it because you won't need it.Modify the webServer key in your playwright.config.ts file.webServer: {  command: process.env.CI ? 'npm run build && npm run start' : 'npm run dev',  port: 3000,},Add two scripts for your E2E tests to your package.json.\"test:e2e\": \"npx playwright test\",\"test:e2e:ui\": \"npx playwright test --ui\",The first one runs your Playwright test in headless mode, while the second one runs your test in UI mode, which gives you time travel debugging, watch mode and more.import { expect, test } from '@playwright/test';test.describe('landing page', () => {  test('given any user: shows the test user', async ({ page }) => {    await page.goto('/');    await expect(page.getByText('Jan Hesters')).toBeVisible();    await expect(page.getByText('jan@reactsquad.io')).toBeVisible();  });});Run your tests to check that your","expect(page.getByText('jan@reactsquad.io')).toBeVisible();  });});Run your tests to check that your Playwright setup worked.$ npm run test:e2e> reactsquad-production@0.1.0 test:e2e> npx playwright testRunning 3 tests using 3 workers  3 passed (3.9s)It ran three tests because by default Playwright is configured to run in Chrome, Safari, and Firefox.GitHub ActionsIt‚Äôs good practice to run your app with CI/CD. CI/CD stands for continuous delivery and continuous deployment.Add a secret for your database URL to your repository‚Äôs settings in GitHub.DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/testdb\"Then create your GitHub Actions YAML configuration in a .github/workflows/pull-request.yml file for a comprehensive CI/CD pipeline including linting, type checking, testing, and more.name: Pull Requeston: [pull_request]jobs:  lint:    name: ‚¨£ ESLint    runs-on: ubuntu-latest    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node","- name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üî¨ Lint        run: npm run lint  type-check:    name:  ¶ TypeScript    runs-on: ubuntu-latest    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üîé Type check        run: npm run type-check --if-present  commitlint:    name: ‚öôÔ∏è commitlint    runs-on: ubuntu-latest    if: github.actor != 'dependabot[bot]'    env:      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3        with:          fetch-depth: 0      - name: ‚öôÔ∏è commitlint        uses: wagoid/commitlint-github-action@v4  vitest:","0      - name: ‚öôÔ∏è commitlint        uses: wagoid/commitlint-github-action@v4  vitest:    name: ‚ö° Vitest    runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:          POSTGRES_USER: postgres          POSTGRES_PASSWORD: postgres          POSTGRES_DB: testdb        ports:          - 5432:5432    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üõ† Setup Database        run: npm run prisma:wipe        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: ‚ö° Run vitest        run: npm run test -- --coverage        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb  playwright:    name: üé≠ Playwright    runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:","runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:          POSTGRES_USER: postgres          POSTGRES_PASSWORD: postgres          POSTGRES_DB: testdb        ports:          - 5432:5432    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üåê Install Playwright Browsers        run: npx playwright install --with-deps      - name: üõ† Setup Database        run: npm run prisma:wipe        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: üé≠ Playwright Run        run: npx playwright test        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: üì∏ Playwright Screenshots        uses: actions/upload-artifact@v4        if: failure()        with:          name: playwright-report","uses: actions/upload-artifact@v4        if: failure()        with:          name: playwright-report          path: playwright-report/          retention-days: 30Now every time you make a pull request to your app, it automatically runs your tests to ensure it works, runs TypeScript type checks and lints it, so that everyone contributes code with the same formatting.NextjsJavaScriptNextjs 15Tutorial----18FollowWritten by Jan Hesters1K Followers¬∑10 FollowingSubscribe on YouTube: https://www.youtube.com/@JanHesters Follow on X: https://x.com/janhesters Ask better questions.FollowResponses (18)See all responsesHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"],"metadata":[{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":0,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":899,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":1798,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":2696,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":3586,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":4495,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":5386,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":6282,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":7180,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":8077,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":8980,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":9878,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":10779,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":11681,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":12576,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":13476,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":14382,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":15246,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":16148,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":17060,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":17956,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":18865,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":19761,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":20658,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":21557,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":22455,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":23356,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":24256,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":25157,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":26065,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":26962,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":27864,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":28762,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":29660,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":30557,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":31459,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":32362,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":33245,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":34135,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":35019,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":35921,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":36820,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":37720,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":38627,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":39532,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":40442,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":41339,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"}]},{"source":{"collection_name":"web-search-7e61da16dfb0eee755f1fdf3a65681db0273b0c36d70b2d004e3","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972"]},"document":["How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkip to content\n\n\n\nNavigation menu\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch\n\n\n\n\n                Powered by\n                Search\n\n\n\n                Algolia\n            \n\n\n\n\n\n\n\n\n              Log in\n            \n\n\n            Create account\n          \n\n\n\n\n\n\n\nDEV Community\n\nClose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        Add reaction\n      \n\n\n\n\n\n\n\n\n\n      Like\n    \n\n\n\n\n\n\n\n      Unicorn\n    \n\n\n\n\n\n\n\n      Exploding Head\n    \n\n\n\n\n\n\n\n      Raised Hands\n    \n\n\n\n\n\n\n\n      Fire\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Jump to Comments\n    \n\n\n\n\n\n\n\n\n\n      Save\n    \n\n\n\n\n\n\n\n\n      Boost\n    \n\n\n\n\n\n\n\nMore...\n\n\n\n\n            Moderate\n          \n\n\n\nCopy link\nCopy link\n\n\n\nCopied to Clipboard\n\n\n\n            Share to X\n          \n\n            Share to LinkedIn\n          \n\n            Share to Facebook","Share to LinkedIn\n          \n\n            Share to Facebook\n          \n\n            Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRoberto B.\n\n                      Posted on Nov 23, 2024\n\n                      ‚Ä¢ Edited on Dec 20, 2024\n\n\n\n\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n              How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript)\n            \n\n#nextjs\n#react\n#storyblok\n#bunjs\n\n\n\n\n\nIn this article, I would like to share with you how to create a dynamic web app with Next.js 15's App Router, React 19, and the Storyblok CMS, all powered by Bun for lightning-fast performance. This comprehensive guide walks you through setup, integration, and rendering dynamic content‚Äîperfect for modern developers.\n\nHere, I created a minimalistic Nextjs template application to integrate Storyblok. You can read more in the README: https://github.com/roberto-butti/my-nextjs15-approuter-storyblok","Key takeaways from this guide\n\n\nLearn how to set up a new Next.js app using Bun as the runtime, bundler, and package manager.\nInstall and configure the latest Storyblok React SDK for seamless CMS integration.\nUnderstand how to manage your Storyblok API token securely using environment variables.\nDiscover how to fetch data from Storyblok and render it dynamically with Next.js 15's App Router.\nEnable the Storyblok Visual Editor for an enhanced content editing experience.\n\nBonus: Explore how to use TypeScript definitions for strongly typed Storyblok components.\n\n\n\n\n  The tools\n\nIn this article, we‚Äôre combining some of the most cutting-edge tools in web development to create a powerful, efficient, and scalable web project:","Bun: more than just a runtime, Bun simplifies JavaScript development with lightning-fast performance, a built-in bundler, and an efficient package manager, an all-in-one tool. It's designed to save developers time while delivering exceptional speed.\nStoryblok: as a headless CMS, Storyblok provides a flexible and user-friendly platform for managing content. With its Visual Editor and robust API, it empowers developers to integrate content dynamically while giving content creators an intuitive interface to work with.\nNext.js App Router: the App Router in Next.js 15 unlocks the full potential of React Server Components, offering an innovative way to handle dynamic routing. It enables seamless integration of server-side and client-side rendering, improving performance and developer experience.\n\n\n\n\n  Set up your Next.js 15 project\n\nUsing Bun's command-line utility, create a Next.js 15 project:\n\n\nbunx create-next-app@latest\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","bunx create-next-app@latest\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nThe latest keyword will allow you to create a Next.js 15 project. If, for some reason, you prefer to use the Next.js 14 you can use 14 keyword instead of latest\n\nExecuting the create-next-app command, you need to answer some questions. For starting a basic project with TypeScript, here the options:\n‚úî What is your project named? my-nextjs15-storyblok\n‚úî Would you like to use TypeScript? Yes\n‚úî Would you like to use ESLint? No\n‚úî Would you like to use Tailwind CSS? No\n‚úî Would you like your code inside a src/ directory? Yes\n‚úî Would you like to use App Router? (recommended) Yes\n‚úî Would you like to use Turbopack for next dev? No\n‚úî Would you like to customize the import alias (@/* by default)? No\nOnce the command is executed, you can jump into the new directory my-nextjs15-storyblok where you can find your Next.js project with all the dependencies already installed.\n\n\ncd my-nextjs15-storyblok","cd my-nextjs15-storyblok\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Enabling the HTTPS\n\nFor checking and testing the installation and starting the HTTPS protocol, you can use the dev script using the experimental HTTPS option:\n\n\nbun run dev --experimental-https\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAs a developer, you should start a local HTTPS server when working with the Storyblok Visual Editor because the editor requires a secure connection to function correctly. Here's why:","Browser security requirements: modern browsers enforce strict security protocols for features like iframe communication, which the Visual Editor relies on. HTTPS ensures that the content loaded in the iframe (your local app) is secure and trusted, enabling the Visual Editor to work seamlessly.\nMatching production environments: most production environments use HTTPS for secure communication. Running your local development server over HTTPS mirrors this setup, helping you catch potential issues early, such as mixed content warnings or problems with third-party integrations.\nStoryblok‚Äôs integration policies: Storyblok‚Äôs Visual Editor is designed to work with secure connections, ensuring that the embedded content and API requests are encrypted. Without HTTPS, the Visual Editor might not function as intended or could block certain features.\n\n\n\n\n  Install Storyblok React SDK v4\n\nTo integrate Storyblok, install its Storyblok React SDK:\n\n\nbun add @storyblok/react@4\n\n\n\nEnter fullscreen mode","bun add @storyblok/react@4\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis SDK (version 4) is fully compatible with Next.js 15 and supports the App Router's features.\n\n\n\n  Configure Storyblok\n\nSign in to Storyblok, create a space, and copy the API token (the Preview access token) from the \"Settings -> Access Tokens\" section.\nIf you are not familiar with creating space with Storyblok, here are some links:\n\nCreating a space in Storyblok (yes, you can use the Community Plan for free): https://www.storyblok.com/docs/guide/getting-started\n\nHow to retrieve and generate access tokens: https://www.storyblok.com/faq/retrieve-and-generate-access-tokens\n\n\nWe can set up the environment variables once you have your preview access token.\nIn your project root, create a .env.local file, and add:\n\n\nNEXT_PUBLIC_STORYBLOK_TOKEN=your_token_here\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","NEXT_PUBLIC_STORYBLOK_TOKEN=your_token_here\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nSo now you have your Storyblok SDK installed and your access token set up. Now, we can initialize the Storyblok connection in our Next.js project,\n\n\n\n  Initialize Storyblok in our project\n\nInitialize Storyblok and register components in a src/lib/storyblok.ts file:\n\n\nimport DefaultPage from '@/components/DefaultPage';\nimport Teaser from '@/components/Teaser';\nimport HeroSection from '@/components/HeroSection';\nimport FallbackComponent from '@/components/FallbackComponent';\nimport { apiPlugin, storyblokInit } from '@storyblok/react/rsc';\n\nexport const getStoryblokApi = storyblokInit({\n  accessToken: process.env.NEXT_PUBLIC_STORYBLOK_TOKEN,\n  use: [apiPlugin],\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n  enableFallbackComponent: true,\n  customFallbackComponent: FallbackComponent,\n});\n\n\n\nEnter fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis code snippet demonstrates how to initialize Storyblok in a React application, set up components for dynamic rendering, enable API integration, and configure a fallback component. Here's a breakdown:\n\n\n\n  Imports\n\n\nimport DefaultPage from '@/components/DefaultPage';\nimport Teaser from '@/components/Teaser';\nimport HeroSection from '@/components/HeroSection';\nimport FallbackComponent from '@/components/FallbackComponent';\nimport { apiPlugin, storyblokInit } from '@storyblok/react/rsc';\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nComponent Imports: these imports include your custom React components (DefaultPage, Teaser, HeroSection, and FallbackComponent), which will be rendered dynamically based on Storyblok content.\nStoryblok features:\n\n\n\nstoryblokInit: Initializes Storyblok in the app.\n\napiPlugin: A plugin that allows API interaction with Storyblok.\n\n\n\n\n\n\n\n  Storyblok Initialization","apiPlugin: A plugin that allows API interaction with Storyblok.\n\n\n\n\n\n\n\n  Storyblok Initialization\n\n\nexport const getStoryblokApi = storyblokInit({\n  accessToken: process.env.NEXT_PUBLIC_STORYBLOK_TOKEN,\n  use: [apiPlugin],\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n  enableFallbackComponent: true,\n  customFallbackComponent: FallbackComponent,\n});\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\naccessToken: the accessToken is retrieved from an environment variable (NEXT_PUBLIC_STORYBLOK_TOKEN), ensuring secure access to your Storyblok space.\n\nuse: the apiPlugin is registered to enable fetching content from Storyblok's API.","use: the apiPlugin is registered to enable fetching content from Storyblok's API.\n\ncomponents: this object maps Storyblok content types (defined in your space, such as teaser, default-page, and hero-section) to their corresponding React components (Teaser, DefaultPage, and HeroSection). This ensures that the correct component is rendered based on the content type name or the component name.\n\nenableFallbackComponent: when set to true, this enables using a fallback component if a component is not mapped or recognized.\n\ncustomFallbackComponent: specifies a custom component (FallbackComponent) to display as the fallback. This is helpful for gracefully handling unmapped or unexpected content, such as showing an error message or placeholder content.\n\n\n\n\n\n  Exported Function\n\n\nexport const getStoryblokApi = storyblokInit({...});\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis function initializes Storyblok and provides access to its API, allowing your application to interact with Storyblok's content delivery system dynamically.\n\n\n\n  Load Storyblok provider\n\nIn src/components/StoryblokProvider.tsx file you can initialize the Storyblok client:\n\n\n'use client';\n\nimport { getStoryblokApi } from '@/lib/storyblok';\n\nexport default function StoryblokProvider({ children }: any) {\n  getStoryblokApi(); // Re-initialize on the client\n  return children;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThen, in the src/app/layout.tsx file, you can load the StoryblokProvider:\n\n\nimport type { Metadata } from \"next\";\nimport StoryblokProvider from '@/components/StoryblokProvider';\n\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};","export default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <StoryblokProvider>\n    <html lang=\"en\">\n      <body>\n        {children}\n      </body>\n    </html>\n    </StoryblokProvider>\n  );\n}\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Set Up the App Router with a catch-all route\n\nNext.js 15‚Äôs App Router uses a file-based routing system powered by the app directory. Let‚Äôs set up dynamic routes for Storyblok content.\nWe are going to create a \"catch-all\" route for creating the page.tsx file into the src/app/[slug]/ directory.\nThe src/app/[slug]/page.tsx file can be:\n\n\nimport styles from \"../page.module.css\";\nimport { getStoryblokApi } from '@/lib/storyblok';\nimport { StoryblokStory } from '@storyblok/react/rsc';\n\nasync function fetchData(slug: string) {\n  const storyblokApi = getStoryblokApi();\n  return storyblokApi.get('cdn/stories/' + slug, { version: 'draft' });\n}","export default async function StoryPage({params}\n  : {\n    params: Promise<{ slug: string }>\n  }) {\n  const slug = (await params).slug\n  console.log(slug)\n  const { data } = await fetchData(slug);\n\n  return (\n    <div>\n      <StoryblokStory story={data.story} />\n    </div>\n  );\n}\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Creating frontend components\n\n\n\n\n  The Content-Type component\n\nFirst, you can create the frontend component to render the Storyblok content type. For example, I have the default-page Storyblok content type mapped into the DefaultPage React component (via the storyblok.ts file):\nThe src/components/DefaultPage.tsx file:\n\n\nimport { storyblokEditable, StoryblokServerComponent } from '@storyblok/react/rsc';\n\nexport default function DefaultPage({ blok }: any) {\n  return   <main {...storyblokEditable(blok)}>\n    {blok.body.map((nestedBlok: any) => (\n      <StoryblokServerComponent blok={nestedBlok} key={nestedBlok._uid} />\n    ))}\n  </main>\n}","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nFor now I'm using any for defining the type of the data. Later we will see how to improve this code for a better type checking.\n\n\n\n\n  The fallback component\n\nStoryblok is very flexible. The Storyblok SDK via the StoryblokServerComponent and the StoryblokStory React components load dynamically React components based on the structure and the nested components defined in Storyblok. If a React component is not yet implemented on the frontend side, a fallback component can be loaded as a placeholder. The configuration of the fallback behavior is in our src/lib/storyblok.ts file in the storyblokInit function via:\n\n\nenableFallbackComponent: true,\ncustomFallbackComponent: FallbackComponent,\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nSo, the fallback component is in src/components/FallbackComponent.tsx:\n\n\nimport { storyblokEditable } from '@storyblok/react/rsc';","import { storyblokEditable } from '@storyblok/react/rsc';\n\nconst FallbackComponent = ({ blok }: any) => {\n  return (\n    <h2 data-cy=\"fallback\" {...storyblokEditable(blok)}>\n      This component does not exists: {blok.component }\n    </h2>\n  );\n};\n\nexport default FallbackComponent;\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Your first Nestable component\n\nFor example, if you have a teaser Nestable component in Storyblok with a field named headline you can:\n\nload the components in the storyblokInit function in the src/lib/storyblok.ts file.\n\n\n\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\ncreate your component in src/components/Teaser.tsx:\n\n\n\nexport default function Teaser({ blok }: any) {\n  return <>\n    { blok.headline }\n  </>;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAs you can see, we use the any type definition extensively in the components and input arguments. Now, we want to improve the type definitions to enhance type checking.\n\n\n\n  BONUS: using TypeScript and automatic generation of type definitions\n\nAs you can notice, probably your editor (I'm using Zed editor) will highlight some TypeScript warning for the type checking.\nNow we are going to solve this issue, generating automatically all the types and the interfaces needed by your project, based on the component structure defined in Storyblok. Amazing!\nI strongly recommend installing and using the Storyblok CLI. If you're exploring or actively using Storyblok, investing time to learn this powerful command-line tool is highly worthwhile. It's like a Swiss Army knife for Storyblok, offering a wide range of functionalities to manage content and components efficiently. One standout feature is its ability to generate type definitions.","More info about Storyblok CLI : https://www.storyblok.com/tp/storyblok-cli-best-practices#generating-types\n\nFirst, you have to export the component JSON structure into a JSON file:\n\n\nstoryblok pull-components --space <your-space-id>\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nReplace <your-space-id> with your Space ID.\nThen, once you have the file , typically components.<your-space-id>.json, you can generate the d.ts file,:\n\n\nstoryblok generate-typescript-typedefs --sourceFilePaths ./components.<your-space-id>.json --destinationFilePath ./src/components/component-types-sb.d.ts\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nIf you take a look of your component-types-sb.d.ts file you will see a lot of auto-generated types and interfaces.\nFor example:","export interface HeroSectionStoryblok {\n  headline?: string;\n  overlay?: number | string;\n  text_color?: \"light\" | \"dark\";\n  subheadline?: string;\n  buttons?: ButtonStoryblok[];\n  horizontal_alignment?: \"left\" | \"center\";\n  vertical_alignment?: \"start\" | \"center\" | \"end\";\n  full_height?: boolean;\n  background_image?: AssetStoryblok;\n  background_video?: AssetStoryblok;\n  component: \"hero-section\";\n  _uid: string;\n  [k: string]: any;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThe nice thing is that you can update this structure based on the component defined directly in Storyblok.\nNow let's use this type definition for example in a new component src/components/HeroSection.tsx:\n\n\nimport { storyblokEditable } from '@storyblok/react/rsc';\nimport { HeroSectionStoryblok } from '@/components/component-types-sb'\n\ninterface HeroSectionProps {\n  blok: HeroSectionStoryblok;\n}","interface HeroSectionProps {\n  blok: HeroSectionStoryblok;\n}\n\nconst HeroSection = ({ blok} : HeroSectionProps) => {\n  return (\n    <div data-cy=\"hero-dection\" {...storyblokEditable(blok)}>\n    <h2 >\n      {blok.headline }\n    </h2>\n    <h3 >\n      {blok.subheadline }\n    </h3>\n    <img src={blok.background_image?.filename + \"/m/300x200\"} width=\"300\" height=\"200\" />\n    </div>\n  );\n};\n\nexport default HeroSection;\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAnother exmaple, i want to improve the DefaultPage component using  for example the autogenerated DefaultPageStoryblok and the SbBlokData from Storyblok the JS client:\n\n\nimport { storyblokEditable, StoryblokServerComponent } from '@storyblok/react/rsc';\nimport { DefaultPageStoryblok } from '@/components/component-types-sb'\nimport { SbBlokData } from '@storyblok/js';","export default function DefaultPage({ blok }: DefaultPageStoryblok) {\n  return   <main {...storyblokEditable(blok)}>\n    {blok.body.map((nestedBlok: SbBlokData) => (\n      <StoryblokServerComponent blok={nestedBlok} key={nestedBlok._uid} />\n    ))}\n  </main>\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nNow you can implement all your component, placing them in the src/components directory and listing them in the storyblokInit function in src/lib/storyblok.ts file.\n\n\n\n  Run your project\n\nTo test your project, be sure to have your server up and running. To start the server:\n\n\nbun run dev --experimental-https\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nVisit https://localhost:3000/home to see your dynamic content rendered via Storyblok and the App Router.\n\nIf you want to use the Storyblok Visual Editor you can set the visual editor using the https://localhost:3000 as explained here: https://www.storyblok.com/docs/guide/getting-started#configuring-the-visual-editor","Top comments (7)\n\n\n\n\nSubscribe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPersonal\nTrusted User\n\n\n\n\n\n\n        Create template\n      \nTemplates let you quickly answer FAQs or store snippets for re-use.\n\n\n\nSubmit\nPreview\nDismiss\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Nov 28 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide","Nov 28 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nNice! I love that you're using bun!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n3¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nRoberto B.\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI'm using Bun for everything within JavaScript üê∞\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like","Like comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI use Bun for building, testing, installing packages, running, etc.\nSo, yeah, pretty much everything, it's quite fast!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes","Like comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nThread\n\n\n\n        Thread\n      \n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nRoberto B.\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI've built  JS package with bun, using the bun test. Super!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nThread\n\n\n\n        Thread\n      \n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow","Best Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nYeah me too, a few of my npm libraries are fully bundles and tested with bun :)\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nSchemetastic (Rodrigo)\n\n\n\n      Schemetastic (Rodrigo)","Expand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nSchemetastic (Rodrigo)\n\n\n\n      Schemetastic (Rodrigo)\n      \n\n\n\n\n\n\n\n\n\n      Schemetastic (Rodrigo)\n      \n\n\n\n\nFollow\n\n\n    I started with JS about 10 years ago and I fell in love with it (even though it can be weird üòÖ). I had step backs in my career that ended up being good. Currently I'm a passionate front-end developer.\n  \n\n\n\n\n          Joined\n        \n\nSep 21, 2022\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Nov 23 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nSomeone is working very hard these days üëèüèΩ\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n3¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nKevin R\n\n\n\n      Kevin R\n      \n    \n\n\n\n\n\n\n\n\n      Kevin R\n      \n    \n\n\n\nFollow\n\n\n\n\n\n          Joined\n        \n\nNov 11, 2019\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 12 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nReally hope storyblok team references this for app router.","Really hope storyblok team references this for app router.\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\n\nCode of Conduct\n‚Ä¢\nReport abuse\n\n\n\n\n\n\n\n        Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.\n      \n\n\nHide child comments as well\n\n\n\n          Confirm\n        \n\n\n For further actions, you may consider blocking this person and/or reporting abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n            More from Roberto B.","Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n            More from Roberto B.\n\n\n\n\n              How to set up a Storyblok space with the Community Plan for local development\n              \n#storyblok\n#tutorial\n#headlesscms\n#webdev\n\n\n\n              Integrating SvelteKit with Storyblok (Using Svelte 5)\n              \n#svelte\n#sveltekit\n#storyblok\n#bunjs\n\n\n\n              Building a website using Markdown content with Next.js App Router and Fusionable\n              \n#markdown\n#tutorial\n#nextjs\n#react\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nThank you to our Diamond Sponsor Neon for supporting our community.\r\n\n\n\nDEV Community ‚Äî A constructive and inclusive social network for software developers. With you every step of your journey.\n    \n\n\n\n      Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List\n    \n\n\n\n\n      Podcasts\n    \n\n\n\n\n      Videos\n    \n\n\n\n\n      Tags\n    \n\n\n\n\n      DEV Help\n    \n\n\n\n\n      Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges","Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges\n    \n\n\n\n\n      DEV Showcase\n    \n\n\n\n\n      About\n    \n\n\n\n\n      Contact\n    \n\n\n\n\n      Free Postgres Database\n    \n\n\n\n\n      Software comparisons\n    \n\n\n\n\n\n\n      Code of Conduct\n    \n\n\n\n\n      Privacy Policy\n    \n\n\n\n\n      Terms of use\n    \n\n\n\n\nBuilt on Forem ‚Äî the open source software that powers DEV and other inclusive communities.\nMade with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.\n\n\n\n\n\n\n\n\n\n\n\n          We're a place where coders share, stay up-to-date and grow their careers.\n      \n\n\n\n        Log in\n      \n\n        Create account"],"metadata":[{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":889,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":1852,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":2582,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":3486,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4440,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4954,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":5899,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":6702,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":7660,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":8523,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":9143,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":9980,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":10859,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":11805,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":12792,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":13661,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":14535,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":15524,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":16300,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":17129,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":17970,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":18985,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":19844,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":20766,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":21718,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":22605,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":23503,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":24413,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":25330,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":26217,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"}]},{"source":{"collection_name":"web-search-b35729efecb9fda0c0a16e9a0896d6ed129b1d2d36e857c202e8","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://www.chakra-ui.com/docs/get-started/frameworks/next-app"]},"document":["Using Chakra UI in Next.js (App) | Chakra UIBuild faster with Premium Chakra UI Components üíéLearn moreSkip to ContentDocsPlaygroundGuidesBlogSponsor3.16.1Search...‚åòKGet Started Components Charts betaStyling Theming FrameworksNext.js (App)OverviewInstallationMigrationCLILLMs.txtContributingShowcaseFrameworksNext.js (App)Next.js (Pages)RemixStorybookViteEnvironmentsShadow DOMIframeUsing Chakra UI in Next.js (App)A guide for installing Chakra UI with Next.js app directoryTemplates\nUse one of the following templates to get started quickly. The templates are\nconfigured correctly to use Chakra UI.\nNext.js app templateNext.js pages template\nInstallation\n\nThe minimum node version required is Node.20.x","1Install dependenciesnpm i @chakra-ui/react @emotion/react2Add snippetsSnippets are pre-built components that you can use to build your UI faster.\nUsing the @chakra-ui/cli you can add snippets to your project.npx @chakra-ui/cli snippet add3Update tsconfigIf you're using TypeScript, you need to update the compilerOptions in the\ntsconfig file to include the following options:{\n  \"compilerOptions\": {\n    \"target\": \"ESNext\",\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Bundler\",\n    \"skipLibCheck\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  }\n}\nIf you're using JavaScript, create a jsconfig.json file and add the above\ncode to the file.\n4Setup providerWrap your application with the Provider component generated in the\ncomponents/ui/provider component at the root of your application.This provider composes the following:\nChakraProvider from @chakra-ui/react for the styling system\nThemeProvider from next-themes for color mode","ThemeProvider from next-themes for color mode\napp/layout.tsximport { Provider } from \"@/components/ui/provider\"","export default function RootLayout(props: { children: React.ReactNode }) {\n  const { children } = props\n  return (\n    <html suppressHydrationWarning>\n      <body>\n        <Provider>{children}</Provider>\n      </body>\n    </html>\n  )\n}\nAdding the suppressHydrationWarning prop to the html element is required\nto prevent the warning about the next-themes library.\n5Optimize BundleWe recommend using the experimental.optimizePackageImports feature in Next.js\nto optimize your bundle size by loading only the modules that you are actually\nusing.next.config.mjsexport default {\n  experimental: {\n    optimizePackageImports: [\"@chakra-ui/react\"],\n  },\n}This also helps to resolve warnings like:[webpack.cache.PackFileCacheStrategy] Serializing big strings (xxxkiB)6Hydration errorsIf you see an error like this: Hydration failed because the initial server\nrendered HTML did not match the client, and the error looks similar to:+<div className=\"chakra-xxx\">","-<style data-emotion=\"css-global xxx\" data-s=\"\">This is caused by how Next.js hydrates Emotion CSS in --turbo mode. Please\nremove the --turbo flag from your dev script in your package.json file.- \"dev\": \"next dev --turbo\"\n+ \"dev\": \"next dev\"When this is fixed by the Next.js team, we'll update this guide.7Enjoy!With the power of the snippets and the primitive components from Chakra UI, you\ncan build your UI faster.import { Button, HStack } from \"@chakra-ui/react\"","const Demo = () => {\n  return (\n    <HStack>\n      <Button>Click me</Button>\n      <Button>Click me</Button>\n    </HStack>\n  )\n}PreviousShowcaseNextNext.js (Pages)On this pageTemplatesInstallationInstall dependenciesAdd snippetsUpdate tsconfigSetup providerOptimize BundleHydration errorsEnjoy!Edit page on GitHubScroll to top"],"metadata":[{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":0,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":704,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":1603,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":1716,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":2668,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":3136,"title":"Using Chakra UI in Next.js (App) | Chakra UI"}]},{"source":{"collection_name":"web-search-3b84ce5f08f719e69df5a6a2ae39c7fa7a5b1d41f47ce12f534c","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js"]},"document":["How to Set Up Chakra UI With Next.js - Upmostly\n\n\nHow to Set Up Chakra UI With Next.js - Upmostly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToggle search\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTutorials\n\n\n\n\n\n\nTutorials\n\n\n\n\n\n\n\n\n\n\n\n\n\nReact.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSvelte\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVue.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTypeScript\n\n\n\n\n\n\n\n\n\nCheatsheets\n\n\n\n\n\n\nCheatsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\nReact.js\n\n\n\n\n\n\n\n\n\n\n\nToggle search\n\n\n\n\n\n\n\n\n\n\nFacebook\n\n\n\n\n\nYoutube\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch‚Ä¶\n\n\n\nSearch\n\n\n\n\n\n\n\n\n\n\n\nClose modal window\n\n\n\n\n\n\n\n\n\n\n\nHome / Next.js / How to Set Up Chakra UI How to Set Up Chakra UI With Next.js\n\n\n\n \nBy\n\t\tOmari Thompson-Edwards\n\n\n\n\n\n\n\n\n\n\n\n\nHey, I'm Omari! I'm a full-stack developer from the UK. I'm currently looking for graduate and freelance software engineering roles, so if you liked this article, reach out on Twitter at @marile0n\n\nPublished:\n\t\t26 January 2023","Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components that can be easily integrated into any project. In this article, we will go over the process of setting up Chakra UI with Next.js, a popular framework for building server-rendered React applications.\nCreating your Next.js app\nIf you‚Äôre adding Chakra UI to an existing app, you can feel free to skip this step. \nFirst, we will need to create a new Next.js project. We can do this by running the following command in our terminal:\nnpx create-next-app my-app\n# or with TypeScript\nnpx create-next-app@latest --ts\nThis will create a new directory called ‚Äúmy-app‚Äù with the basic structure of a Next.js project. Feel free to swap out ‚Äúmy-app‚Äù for whatever your app should be called. I also tend to use TypeScript with my Next.js apps, but you can choose either TS or JS.\nSetting Up Chakra UI","Setting Up Chakra UI\nNext, we will need to install Chakra UI and its dependencies. We can do this by running the following command in our terminal:\nnpm install @chakra-ui/react @emotion/react @emotion/styled framer-motion\nExample\nLet‚Äôs showcase Chakra UI by building a simple social card. Here‚Äôs what the end result will look like:","Firstly, to make sure that the Chakra UI styles are applied globally, we need to wrap our application in the ChakraProvider component. \nimport { ChakraProvider } from '@chakra-ui/react';\n\nexport default function MyApp({ Component, pageProps }: AppProps) {\n    return (\n        <ChakraProvider>\n            <Component {...pageProps} />\n        </ChakraProvider>\n    );\n}\n\nHere‚Äôs the code for our page component:\nexport default function Home() {\n    return (\n        <Flex w=\"100vw\" h=\"100%\" align=\"center\" justify=\"center\">\n            <Head>\n                <title>Hello World!</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            <main>\n                <Flex w=\"100%\" h=\"100vh\" align=\"center\">\n                    <ProfileCard />\n                </Flex>\n            </main>\n        </Flex>\n    );\n}","We‚Äôre starting off with our main page component. Chakra UI provides a generic Flex component, which gives us a generic container with ‚Äúdisplay: flex‚Äù applied. Chakra UI works around style props, which let you provide values through props. There are a lot of shorthand versions of these props, such as ‚Äúw‚Äù instead of ‚Äúwidth‚Äù, ‚Äúalign‚Äù instead of ‚ÄúalignItems‚Äù.\nLet‚Äôs drill into the ProfileCard component:\nfunction ProfileCard() {\n    return (\n        <Card\n            w=\"auto\"\n            display=\"flex\"\n            direction=\"column\"\n            align=\"center\"\n            justify=\"center\"\n            padding=\"2\">\n            <ProfileHeader />\n            <ProfileBody />\n        </Card>\n    );\n}\nI‚Äôm using ChakraUI‚Äôs generic card component. This is a generic card component with a rounded edge and shadow. One helpful part is that ChakraUI allows you to split your card up into parts, e.g. CardHeader, CardBody, and CardFooter.","Then inside our header:\nfunction ProfileHeader() {\n    return (\n        <CardHeader\n            display=\"flex\"\n            flexDirection=\"column\"\n            gap=\"2\"\n            alignItems=\"center\">\n            <Avatar\n                height=\"80px\"\n                width=\"80px\"\n                src=\"https://i.pravatar.cc/300\"\n            />\n            <Heading size=\"md\">John Doe</Heading>\n            <Text>Senior UX/UI Designer</Text>\n        </CardHeader>\n    );\n}\nAgain I‚Äôm using style props to pass through styles. I‚Äôm also using the ChakraUI Avatar component, used to represent users/profile pictures.\nInside the body:\nfunction ProfileBody() {\n    return (\n        <CardBody display=\"flex\" flexDirection=\"column\" gap=\"2\">\n            <ProfileStats />\n            <ProfileButtons />\n        </CardBody>\n    );\n}\nWe have a stats and buttons component, so let‚Äôs break these down.\nIn the stats:\nfunction ProfileStats() {\n    const stats = {\n        posts: 100,\n        followers: 1782,","function ProfileStats() {\n    const stats = {\n        posts: 100,\n        followers: 1782,\n        following: 404,\n    };\n    return (\n        <HStack w=\"100%\" justify=\"space-evenly\">\n            {Object.entries(stats).map(([title, value]) => (\n                <Flex\n                    fontSize=\"xs\"\n                    key={title}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\">\n                    <Text casing=\"capitalize\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text>{value}</Text>\n                </Flex>\n            ))}\n        </HStack>\n    );\n}\nWe have an HStack component, used for horizontally stacking items. ChakraUI also provides VStack for vertical stacks, as well as Stack, which can take a direction as a prop.\nThen in the ProfileButtons:\nfunction ProfileButtons() {\n    return (\n        <ButtonGroup colorScheme=\"blue\">\n            <Button>Follow</Button>","return (\n        <ButtonGroup colorScheme=\"blue\">\n            <Button>Follow</Button>\n            <Button variant=\"outline\">Message</Button>\n        </ButtonGroup>\n    );\n}\nChakraUI provides some pre-built button styles which are very helpful, with a variety of colours and variations. It also provides a built-in ButtonGroup component, which has the added benefit of sharing styles between buttons.\nAnd that‚Äôs all of our components from start to finish!\nConclusion\nAnd that‚Äôs it! We have successfully set up Chakra UI with Next.js. With this setup, you can start using Chakra UI‚Äôs pre-built components, and styles to quickly build accessible, and visually pleasing interfaces.\nRemember to also check the documentation for the library and the framework, to see all the features and possibilities. We also have articles covering alternative styling solutions, such as TailwindCSS.\nIf you liked this article, feel free to leave a comment below!\nHappy coding!","If you liked this article, feel free to leave a comment below!\nHappy coding!\nRelated Posts:How To Set Up TailwindCSS in Your Next.js AppHow to set up a GraphQL server with Node.js & ExpressSet Up Axios Interceptors in your ReactJS ApplicationHow to set up ESLint in ReactHow To Set Up Redux in ReactHow To Use Vue With Pinia To Set Up Authentication","üëã Hey, I'm Omari Thompson-Edwards\n\t\t    Hey, I'm Omari! I'm a full-stack developer from the UK. I'm currently looking for graduate and freelance software engineering roles, so if you liked this article, reach out on Twitter at @marile0n      \n\n\n\n\n\n\n\nüí¨ Leave a comment Cancel replyYour email address will not be published. Required fields are marked *\n\n\nEmail address\n\nWe will never share your email with anyone else.\n\n\nName\n\n\n \n\nŒî \n\n\n\n\n\n\n\nFeatured\n\n1\n\n              Build a React Switch Toggle Component            \n\n\n2\n\n              Upload a File from a React Component            \n\n\n3\n\n              How React Reignited My Love for Web Development            \n\n\n4\n\n              How to Use the setState Callback in React            \n\n\n5\n\n              Simplifying React State and the useState Hook            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpmostly brings you original JavaScript framework tutorials every week.\n\n\n\nTutorials\n\n\nReact.js\n\n\nNext.js\n\n\nSvelte\n\n\nAngular\n\n\nVue.js","Tutorials\n\n\nReact.js\n\n\nNext.js\n\n\nSvelte\n\n\nAngular\n\n\nVue.js\n\n\nTypeScript\n\n\n\n\nCheatsheets\n\n\nReact.js\n\n\n\n\nInfo\n\n\nAbout\n\n\nWrite For Us\n\n\nPrivacy\n\n\nRSS\n\n\n\n\n\n\n\nCopyright ¬©\n\t\t\t2025\n\t\t\tUpmostly\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n\n\n\n\n\n\n\n\nGithub\n\n\n\n\n\nYoutube"],"metadata":[{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":5,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":976,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":1897,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":2230,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":3074,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":4004,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":4902,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":5814,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":6694,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":7049,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":7979,"title":"How to Set Up Chakra UI With Next.js - Upmostly"}]},{"source":{"collection_name":"web-search-64437e4a61bca33d33b48446fc028ca10b4487290a0ebaae91bf","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l"]},"document":["Creating a Next.js project with Chakra-UI integration - DEV Community\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkip to content\n\n\n\nNavigation menu\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch\n\n\n\n\n                Powered by\n                Search\n\n\n\n                Algolia\n            \n\n\n\n\n\n\n\n\n              Log in\n            \n\n\n            Create account\n          \n\n\n\n\n\n\n\nDEV Community\n\nClose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        Add reaction\n      \n\n\n\n\n\n\n\n\n\n      Like\n    \n\n\n\n\n\n\n\n      Unicorn\n    \n\n\n\n\n\n\n\n      Exploding Head\n    \n\n\n\n\n\n\n\n      Raised Hands\n    \n\n\n\n\n\n\n\n      Fire\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Jump to Comments\n    \n\n\n\n\n\n\n\n\n\n      Save\n    \n\n\n\n\n\n\n\n\n      Boost\n    \n\n\n\n\n\n\n\nMore...\n\n\n\n\n            Moderate\n          \n\n\n\nCopy link\nCopy link\n\n\n\nCopied to Clipboard\n\n\n\n            Share to X\n          \n\n            Share to LinkedIn\n          \n\n            Share to Facebook\n          \n\n            Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEthan","Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEthan\n\n                      Posted on Oct 30, 2022\n\n\n\n\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n              Creating a Next.js project with Chakra-UI integration\n            \n\n#nextjs\n#tutorial\n#beginners\n#javascript\n\n\n\n\n\n\n\n\n  Introduction\n\nHello, in this tutorial I will show you how to create a simple Next.js project with Chakra UI intergration. üëÄ\n\n\n\n\n  What is Chakra-UI\n\nChakra-UI is an open source component library used for building modular, accessible and good looking user interfaces. \nThe main advantages of Chakra-UI are as follows:","Accessibility: Chakra-UI allows us to use pre-build components created by the Chakra-UI team.\nThemeable: The library ships with a default theme, which can be customized if needed.\nLight and dark mode: both are supported out of the box and can rely on the user's system settings. For example if the user sets their computer to dark mode by default, Chakra-UI will default to dark mode.\nComposibility: Components can be created from the Chakra-UI ones or if needed custom components can be created with ease.\nTypescript Support: Chakra-UI is written in TypeScript and provides class types for easy integration.\n\n\n\n\n\n  What we will be making\n\nIn this tutorial we will use Chakra-UI to create a simple user list/profile page. \nWe will also integrate a toggler to toggle between light and dark mode.\nYou will learn how to set up a basic Next.js application with Chakra-UI integration.\n\n\n\n\n  Creating the Next.js application and installing the dependencies","Creating the Next.js application and installing the dependencies\n\nFirst we need to create a new Next.js app and install the dependencies needed for the example.\nThe Next.js app can be created via the following command:\n\n\n\nnpx create-next-app@latest\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis will set up the Next.js project automatically for you.\nNext we need to install Chakra-ui which can be done via the following command:\n\n\n\nyarn add @chakra-ui/react @emotion/react@^11 @emotion/styled@^11 framer-motion@^4 @chakra-ui/icons\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n\n  Creating fake Users\n\nNext we will need some fake users to actually populate the page. \nCreate a \"data\" folder in the root directory and create a \"users.js\" file and populate it with the following data: (feel free to use your own custom data but be careful of the parameter names):\nhttps://github.com/ethand91/nextjs-chakra-sample/blob/main/data/users.js\n\n\n\n\n  Creating the components","Creating the components\n\nNext we need to create the components needed for the sample page, create a new folder called \"components\" and within that create a \"TopBar\" folder.\nWithin the TopBar folder create a new file called \"index.js\" and populate it with the following contents:\n\n\n\nimport {\n  Box,\n  Button,\n  useColorMode\n} from '@chakra-ui/react';\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons';\n\nfunction TopBar() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const ColorModeIcon = colorMode === 'light' ? SunIcon : MoonIcon;\n\n  return (\n    <Box width=\"100%\" padding=\"1\" backgroundColor=\"purple.700\">\n      <Box maxWidth=\"container.xl\" margin=\"auto\">\n        <Button\n          aria-label=\"ui theme\"\n          leftIcon={ <ColorModeIcon /> }\n          onClick={ toggleColorMode }\n          size=\"xs\"\n          marginRight=\"2\"\n          borderRadius=\"sm\"\n        >\n          Toggle Theme\n        </Button>\n      </Box>\n    </Box>\n  );  \n};\n\nexport default TopBar;","export default TopBar;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we create a simple top bar for the application, we give it a background color of purple and also provide a button that allows the user to toggle between light/dark mode using Chakra-UI.\nNext we need a component to display the users, so create a new \"UserCard\" directory and within that directory create an \"index.js\" file and populate it with the following contents:\n\n\n\nimport Link from 'next/link';\nimport {\n  Box,\n  Text,\n  Avatar,\n  Center,\n  VStack,\n  useColorModeValue\n} from '@chakra-ui/react';","function UserCard(props) {\n  return (\n    <Link href={ `/users/${props.username}` } passHref>\n      <VStack\n        spacing=\"4\"\n        borderRadius=\"md\"\n        boxShadow=\"x1\"\n        padding=\"5\"\n        backgroundColor={\n          useColorModeValue('gray.50', 'gray.700')\n        }\n      >   \n        <Center>\n          <Avatar size=\"lg\" src={ props.avatar } />\n        </Center>\n        <Center>\n          <Box textAlign=\"center\">\n            <Text fontWeight=\"bold\" fontSize=\"xl\">\n              { props.first_name } { props.last_name }\n            </Text>\n            <Text fontSize=\"xs\">{ props.job_title }</Text>\n          </Box>\n        </Center>\n      </VStack>\n    </Link>\n  );  \n};\n\nexport default UserCard;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis card will link to the user details page, using Chakra-UI we are easily able to center contents using \"Center\". We also use Avatar to easily display the user's profile picture.\nThats the components created.","Creating the Pages\n\nNext we need to start working on the pages.\nWe will be overriding the default Next.js document which can be done by creating a \"_document.js\" inside the pages directory. \nCreate the file and populate it with the following:\n\n\n\nimport { ColorModeScript } from '@chakra-ui/react';\nimport NextDocument, {\n  Html,\n  Head,\n  Main,\n  NextScript\n} from 'next/document';\nimport { extendTheme } from '@chakra-ui/react';\n\nconst config = { \n  useSystemColorMode: true\n};\n\nconst theme = extendTheme({ config }); \n\nexport default class Document extends NextDocument {\n  render () {\n    return (\n      <Html lang=\"en\">\n        <Head />\n        <body>\n          <ColorModeScript\n            initialColorMode={ theme.config.initialColorMode }\n          />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );  \n  }\n}\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThe reason for overriding the default layout is because we want to apply both light/dark theme to the entire page.\nNext we need to apply Chara-UI to the application so open up pages/_app.js and change the contents to the following:\n\n\n\nimport { ChakraProvider, Box } from '@chakra-ui/react';\nimport TopBar from './../components/TopBar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ChakraProvider>\n      <TopBar />\n      <Box maxWidth=\"container.xl\" margin=\"auto\">\n        <Component { ...pageProps} />\n      </Box>\n    </ChakraProvider>\n  );  \n}\n\nexport default MyApp\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we bascially tell Next.js to use the Chara-UI provider and make sure everypage has our custom TopBar.\nNext we need to edit the pages/index.js to contain the following contents:\n\n\n\nimport {\n  Box,\n  Grid,\n  Text,\n  GridItem\n} from '@chakra-ui/react';","import {\n  Box,\n  Grid,\n  Text,\n  GridItem\n} from '@chakra-ui/react';\n\nimport UserCard from './../components/UserCard';\nimport users from './../data/users';\n\nexport default function Home() {\n  return (\n    <Box>\n      <Text\n        fontSize=\"xxx-large\"\n        fontWeight=\"extrabold\"\n        textAlign=\"center\"\n        marginTop=\"9\"\n      >   \n        Users\n      </Text>\n\n      <Grid\n        gridTemplateColumns={ ['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)'] }\n        gridGap=\"10\"\n        padding=\"10\"\n      >   \n        {\n          users.map((user) => (\n            <GridItem key={ user.id }>\n              <UserCard { ...user } />\n            </GridItem>\n          ))\n        }\n      </Grid>\n    </Box>\n  );  \n}\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we basically list all the users using Chakra-UI's Grid component. The \"gridTemplateColumns\" allows us to set the sizes for small screens, medium screens and large screens. For example if you view the page on a large screen each row will have 3 users, however if you view it on a mobile device each row will only have one user.\nFeel free to run the project using:\n\n\n\nnpm run dev\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nIf you access the page (https://localhost:3000), you should see the following page:\n\nIf you prefer light mode you should see the following:","If you prefer light mode you should see the following:\n\nFeel free to play with the toggle button. If you try clicking on a user you will be greeted with a 404 not found response so let's create the user profile page!\nCreate a \"users\" folder inside the pages folder and create the \"[username].js\". (Note if you're using a terminal like me you may need to escape the brackets with a backslash).\nNow fill the file with the following contents:\n\n\n\nmport Link from 'next/link';\nimport {\n  Avatar,\n  Box,\n  Center,\n  Text,\n  Image,\n  Button,\n  Flex,\n  useColorModeValue\n} from '@chakra-ui/react';\n\nimport users from './../../data/users';\n\nexport function getStaticPaths() {\n  const paths = users.map((user) => ({\n    params: {\n      username: user.username\n    }   \n  }));\n\n  return {\n    paths,\n    fallback: false\n  };  \n}\n\nexport function getStaticProps({ params }) {\n  const { username } = params;","export function getStaticProps({ params }) {\n  const { username } = params;\n\n  return { \n    props: {\n      user: users.find((user) => user.username === username)\n    }   \n  };  \n};\n\nfunction UserPage({ user }) {\n  return (\n    <Center\n      marginTop={ ['0', '0', '8' ] }\n      boxShadow=\"lg\"\n      minHeight=\"fit-content\"\n    >\n      <Box>\n        <Box position=\"relative\">\n          <Image src={user.cover_image} width=\"fit-content\" height=\"250px\" objectFit=\"cover\" />\n\n          <Flex\n            alignItems=\"flex-end\"\n            position=\"absolute\"\n            top=\"0\"\n            left=\"0\"\n            backgroundColor={\n              useColorModeValue('blackAlpha.400', 'blackAlpha.600')\n            }\n            width=\"100%\"\n            height=\"100%\"\n            padding=\"8\"\n            color=\"white\"","<Avatar size=\"lg\" src={ user.avatar } />\n            <Box marginLeft=\"6\">\n              <Text as=\"h1\" fontSize=\"xx-large\" fontWeight=\"bold\">\n                { user.first_name } { user.last_name }\n              </Text>\n              <Text as=\"p\" fontSize=\"large\" lineHeight=\"1.5\">\n                { user.job_title }\n              </Text>\n            </Box>\n          </Flex>\n        </Box>\n        <Box\n          maxW=\"container.xl\"\n          margin=\"auto\"\n          padding=\"8\"\n          backgroundColor={\n            useColorModeValue('white', 'gray.700')\n          }\n        >\n          <Text as=\"p\">{ user.description }</Text>\n          <Link href=\"/\" passHref>\n            <Button marginTop=\"8\" colorScheme=\"whatsapp\" as=\"a\">\n              Back to all users\n            </Button>\n          </Link>\n        </Box>\n      </Box>\n    </Center>\n  );\n};\n\nexport default UserPage;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","export default UserPage;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nPhew! Here we use \"getStaticPaths\" to tell Next.js we need to render a new page for each user in the user's array.\nWe also tell Next.js to display the default 404 page if the requested user is not found.\nChakra-UI allows us to easily center the contents. This page basically displays the contents of the user and provides a button to go back using a Chakra-UI feature.\nAll done fire up the dev server and load up https://localhost:3000 in the browser. \nOnce loading try clicking on a user you should see the following page:\n\n\nAll done! üòé\n\n\n\n\n  Conclusion\n\nHere I have demonstrated how to use Next.js with Chakra-UI. Feel free to customize anyway you wish. üòâ\nI'm actually thinking of using Next.js for my next side project.\nHopefully you have learned something new, you can find the source code for this tutorial via:\nhttps://github.com/ethand91/nextjs-chakra-sample","Like me work? I post about a variety of topics, if you would like to see more please like and follow me.\nAlso I love coffee. \n\n\n\n\n\n\n\n\n            Top comments (0)\n\n\n\n\nSubscribe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPersonal\nTrusted User\n\n\n\n\n\n\n        Create template\n      \nTemplates let you quickly answer FAQs or store snippets for re-use.\n\n\n\nSubmit\nPreview\nDismiss\n\n\n\n\n\n\n\n\n\nCode of Conduct\n‚Ä¢\nReport abuse\n\n\n\n\n\n\n\n        Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.\n      \n\n\nHide child comments as well\n\n\n\n          Confirm\n        \n\n\n For further actions, you may consider blocking this person and/or reporting abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Ethan\n      \n    \n\n\n\nFollow\n\n\n    Programmer/System Admin. Currently working on media solutions. \nLove learning new things :)\n\nPosts include a variety of topics, mostly media/computer vision related.\n  \n\n\n\n\n            Location\n          \n\n            Japan","Location\n          \n\n            Japan\n          \n\n\n\n              Education\n            \n\n              University of Cumbria\n            \n\n\n\n              Work\n            \n\n              Software Engineer/System Admin\n            \n\n\n\n          Joined\n        \n\nJan 5, 2022\n\n\n\n\n\n\n\n\n            More from Ethan\n\n\n\n\n              Flask Video Streaming App Tutorial\n              \n#python\n#flask\n#programming\n#beginners\n\n\n\n              WebCodec - Sending and Receiving\n              \n#webdev\n#javascript\n#beginners\n#programming\n\n\n\n              Introduction to the WebCodec API - Real Time Video Encoding and Display\n              \n#javascript\n#webdev\n#tutorial\n#html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nThank you to our Diamond Sponsor Neon for supporting our community.\r\n\n\n\nDEV Community ‚Äî A constructive and inclusive social network for software developers. With you every step of your journey.\n    \n\n\n\n      Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List","Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List\n    \n\n\n\n\n      Podcasts\n    \n\n\n\n\n      Videos\n    \n\n\n\n\n      Tags\n    \n\n\n\n\n      DEV Help\n    \n\n\n\n\n      Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges\n    \n\n\n\n\n      DEV Showcase\n    \n\n\n\n\n      About\n    \n\n\n\n\n      Contact\n    \n\n\n\n\n      Free Postgres Database\n    \n\n\n\n\n      Software comparisons\n    \n\n\n\n\n\n\n      Code of Conduct\n    \n\n\n\n\n      Privacy Policy\n    \n\n\n\n\n      Terms of use\n    \n\n\n\n\nBuilt on Forem ‚Äî the open source software that powers DEV and other inclusive communities.\nMade with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.\n\n\n\n\n\n\n\n\n\n\n\n          We're a place where coders share, stay up-to-date and grow their careers.\n      \n\n\n\n        Log in\n      \n\n        Create account"],"metadata":[{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":924,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":1526,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":2412,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":3378,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4341,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4926,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":5916,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":6769,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":7642,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":8362,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":8935,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":9754,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":10576,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":11429,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":12376,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":13310,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":14212,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"}]},{"source":{"collection_name":"web-search-f66bd811cafe598a2826b936624732ea01e0f9c1833eab24e133","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/docs/get-started/frameworks/nextjs"]},"document":["Storybook for Next.js | Storybook docsStorybook 9 is coming! Join the newsletter to get it first. SubscribeDocsAddonsShowcaseBlogVisual TestEnterprise86,463Search docsDocs Docs ¬ª Get Started ¬ª Frameworks ¬ª Next.jsDocumentationAPITutorialsAddonsChangelogVersion 8.6Get StartedWhy Storybook?InstallFrameworksWhat's a story?Browse storiesSetupConclusionStoriesArgsParametersDecoratorsPlay functionLoadersTagsNaming components and hierarchyMocking data and modulesBuilding pages and screensStories for multiple componentsWriting stories in TypeScriptTestingComponent testsVisual testsAccessibility testsSnapshot testsTest runnerTest addonTest coverageImport stories in testsDocsAutodocsMDXDoc blocksPreview and build docsSharingPublishEmbedDesign integrationsCompositionPackage CompositionEssential addonsActionsBackgroundsControlsHighlightInteractionsMeasure & outlineToolbars & globalsViewportAddonsInstallWriteConfigure addonsWrite a presetAdd to catalogTypes of addonsKnowledge baseAddon APIMigrate","addonsWrite a presetAdd to catalogTypes of addonsKnowledge baseAddon APIMigrate addons to 8.0ConfigureStyling and CSSUpgradingTelemetryIntegrationStory renderingStory layoutUser InterfaceEnvironment variablesBuildersViteWebpackAPIAPImain.js|ts configurationComponent Story Format (CSF)ArgTypesParametersDoc BlocksPortable StoriesFrameworksCLI optionsContributeRFC processCodeDocumentationFrameworksReproduceRoadmapFAQMigrate to 8.0Migrate from 6.x to 8.0Storybook for Next.jsStorybook for Next.js is a framework that makes it easy to develop and test UI components in isolation for Next.js applications. It includes:","üîÄ Routing\nüñº Image optimization\n‚§µÔ∏è Absolute imports\nüé® Styling\nüéõ Webpack & Babel config\nüí´ and more!\n\nRequirements\n\nNext.js ‚â• 13.5\nStorybook ‚â• 7.0\n\nGetting started\nIn a project without Storybook\nFollow the prompts after running this command in your Next.js project's root directory:\n\n npmnpm create storybook@latest\n\nMore on getting started with Storybook.\nIn a project with Storybook\nThis framework is designed to work with Storybook 7+. If you‚Äôre not already using v7, upgrade with this command:\n\n npmnpx storybook@latest upgrade\n\nAutomatic migration\nWhen running the upgrade command above, you should get a prompt asking you to migrate to @storybook/nextjs, which should handle everything for you. In case that auto-migration does not work for your project, refer to the manual migration below.\nManual migration\nFirst, install the framework:\n\n npmnpm install --save-dev @storybook/nextjs\n\nThen, update your .storybook/main.js|ts to change the framework property:","Then, update your .storybook/main.js|ts to change the framework property:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  // framework: '@storybook/react-webpack5', üëà Remove this\n  framework: '@storybook/nextjs', // üëà Add this\n};\n \nexport default config;\n\nFinally, if you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  addons: [\n    // ...\n    // üëá These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n \nexport default config;","With Vite\n(‚ö†Ô∏è Experimental)\nYou can use our freshly baked, experimental @storybook/experimental-nextjs-vite framework, which is based on Vite and removes the need for Webpack and Babel. It supports all of the features documented here.\n‚ÑπÔ∏èUsing the Next.js framework with Vite requires Next.js 14.1.0 or later.\n\n npmnpm install --save-dev @storybook/experimental-nextjs-vite\n\nThen, update your .storybook/main.js|ts to change the framework property:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/experimental-nextjs-vite';\n \nconst config: StorybookConfig = {\n  // ...\n  // framework: '@storybook/react-webpack5', üëà Remove this\n  framework: '@storybook/experimental-nextjs-vite', // üëà Add this\n};\n \nexport default config;","‚ÑπÔ∏èIf your Storybook configuration contains custom Webpack operations in webpackFinal, you will likely need to create equivalents in viteFinal.For more information, see the Vite builder documentation.\nFinally, if you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/experimental-nextjs-vite';\n \nconst config: StorybookConfig = {\n  // ...\n  addons: [\n    // ...\n    // üëá These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n \nexport default config;\n\nRun the Setup Wizard\nIf all goes well, you should see a setup wizard that will help you get started with Storybook introducing you to the main concepts and features, including how the UI is organized, how to write your first story, and how to test your components' response to various inputs utilizing controls.","If you skipped the wizard, you can always run it again by adding the ?path=/onboarding query parameter to the URL of your Storybook instance, provided that the example stories are still available.\nNext.js's Image component\nThis framework allows you to use Next.js's next/image with no configuration.\nLocal images\nLocal images are supported.\n // index.jsx\nimport Image from 'next/image';\nimport profilePic from '../public/me.png';\n \nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image\n        src={profilePic}\n        alt=\"Picture of the author\"\n        // width={500} automatically provided\n        // height={500} automatically provided\n        // blurDataURL=\"../public/me.png\" set to equal the image itself (for this framework)\n        // placeholder=\"blur\" // Optional blur-up while loading\n      />\n      <p>Welcome to my homepage!</p>\n    </>\n  );\n}\nRemote images\nRemote images are also supported.\n // index.jsx\nimport Image from 'next/image';","}\nRemote images\nRemote images are also supported.\n // index.jsx\nimport Image from 'next/image';\n \nexport default function Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image src=\"/me.png\" alt=\"Picture of the author\" width={500} height={500} />\n      <p>Welcome to my homepage!</p>\n    </>\n  );\n}\nNext.js font optimization\nnext/font is partially supported in Storybook. The packages next/font/google and next/font/local are supported.\nnext/font/google\nYou don't have to do anything. next/font/google is supported out of the box.\nnext/font/local\nFor local fonts you have to define the src property.\nThe path is relative to the directory where the font loader function is called.\nIf the following component defines your localFont like this:\n // src/components/MyComponent.js\nimport localFont from 'next/font/local';\n \nconst localRubikStorm = localFont({ src: './fonts/RubikStorm-Regular.ttf' });\nstaticDir mapping","const localRubikStorm = localFont({ src: './fonts/RubikStorm-Regular.ttf' });\nstaticDir mapping\n‚ÑπÔ∏èYou can safely skip this section if you are using @storybook/experimental-nextjs-vite instead of @storybook/nextjs. The Vite-based framework takes care of the mapping automatically.\nYou have to tell Storybook where the fonts directory is located, via the staticDirs configuration. The from value is relative to the .storybook directory. The to value is relative to the execution context of Storybook. Very likely it is the root of your project.",".storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  staticDirs: [\n    {\n      from: '../src/components/fonts',\n      to: 'src/components/fonts',\n    },\n  ],\n};\n \nexport default config;\n\nNot supported features of next/font\nThe following features are not supported (yet). Support for these features might be planned for the future:\n\nSupport font loaders configuration in next.config.js\nfallback option\nadjustFontFallback option\npreload option gets ignored. Storybook handles Font loading its own way.\ndisplay option gets ignored. All fonts are loaded with display set to \"block\" to make Storybook load the font properly.","Mocking fonts during testing\nOccasionally fetching fonts from Google may fail as part of your Storybook build step. It is highly recommended to mock these requests, as those failures can cause your pipeline to fail as well. Next.js supports mocking fonts via a JavaScript module located where the env var NEXT_FONT_GOOGLE_MOCKED_RESPONSES references.\nFor example, using GitHub Actions:\n # .github/workflows/ci.yml\n- uses: chromaui/action@v1\n  env:\n    #üëá the location of mocked fonts to use\n    NEXT_FONT_GOOGLE_MOCKED_RESPONSES: ${{ github.workspace }}/mocked-google-fonts.js\n  with:\n    projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n    token: ${{ secrets.GITHUB_TOKEN }}\nYour mocked fonts will look something like this:\n // mocked-google-fonts.js\n//üëá Mocked responses of google fonts with the URL as the key\nmodule.exports = {\n  'https://fonts.googleapis.com/css?family=Inter:wght@400;500;600;800&display=block': `\n    /* cyrillic-ext */\n    @font-face {\n      font-family: 'Inter';","/* cyrillic-ext */\n    @font-face {\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 400;\n      font-display: block;\n      src: url(https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZJhiJ-Ek-_EeAmM.woff2) format('woff2');\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n    }\n    /* more font declarations go here */\n    /* latin */\n    @font-face {\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 400;\n      font-display: block;\n      src: url(https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiJ-Ek-_EeA.woff2) format('woff2');\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n    }`,\n};\nNext.js routing","}`,\n};\nNext.js routing\nNext.js's router is automatically stubbed for you so that when the router is interacted with, all of its interactions are automatically logged to the Actions panel if you have the Storybook actions addon.\nYou should only use next/router in the pages directory. In the app directory, it is necessary to use next/navigation.\nOverriding defaults\nPer-story overrides can be done by adding a nextjs.router property onto the story parameters. The framework will shallowly merge whatever you put here into the router.","RouterBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport RouterBasedComponent from './RouterBasedComponent';\n \nconst meta: Meta<typeof RouterBasedComponent> = {\n  component: RouterBasedComponent,\n};\nexport default meta;\n \ntype Story = StoryObj<typeof RouterBasedComponent>;\n \n// If you have the actions addon,\n// you can interact with the links and see the route change events there\nexport const Example: Story = {\n  parameters: {\n    nextjs: {\n      router: {\n        pathname: '/profile/[id]',\n        asPath: '/profile/1',\n        query: {\n          id: '1',\n        },\n      },\n    },\n  },\n};","These overrides can also be applied to all stories for a component or all stories in your project. Standard parameter inheritance rules apply.\nDefault router\nThe default values on the stubbed router are as follows (see globals for more details on how globals work).\n // Default router\nconst defaultRouter = {\n  // The locale should be configured globally: https://storybook.js.org/docs/essentials/toolbars-and-globals#globals\n  locale: globals?.locale,\n  asPath: '/',\n  basePath: '/',\n  isFallback: false,\n  isLocaleDomain: false,\n  isReady: true,\n  isPreview: false,\n  route: '/',\n  pathname: '/',\n  query: {},\n};\nAdditionally, the router object contains all of the original methods (such as push(), replace(), etc.) as mock functions that can be manipulated and asserted on using regular mock APIs.\nTo override these defaults, you can use parameters and beforeEach:\n // .storybook/preview.ts\nimport { Preview } from '@storybook/react';","// .storybook/preview.ts\nimport { Preview } from '@storybook/react';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/router.mock';\n \nconst preview: Preview = {\n  parameters: {\n    nextjs: {\n      // üëá Override the default router properties\n      router: {\n        basePath: '/app/',\n      },\n    },\n  },\n  async beforeEach() {\n    // üëá Manipulate the default router method mocks\n    getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js navigation\nPlease note that next/navigation can only be used in components/pages in the app directory.\nSet nextjs.appDirectory to true\nIf your story imports components that use next/navigation, you need to set the parameter nextjs.appDirectory to true in for that component's stories:","NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true, // üëà Set this\n    },\n  },\n};\nexport default meta;\n\nIf your Next.js project uses the app directory for every page (in other words, it does not have a pages directory), you can set the parameter nextjs.appDirectory to true in the .storybook/preview.js|ts file to apply it to all stories.\n\n .storybook/preview.tsTypescriptimport { Preview } from '@storybook/react';\n \nconst preview: Preview = {\n  // ...\n  parameters: {\n    // ...\n    nextjs: {\n      appDirectory: true,\n    },\n  },\n};\n \nexport default preview;","Overriding defaults\nPer-story overrides can be done by adding a nextjs.navigation property onto the story parameters. The framework will shallowly merge whatever you put here into the router.\n\n NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n    },\n  },\n};\nexport default meta;\n \ntype Story = StoryObj<typeof NavigationBasedComponent>;\n \n// If you have the actions addon,\n// you can interact with the links and see the route change events there\nexport const Example: Story = {\n  parameters: {\n    nextjs: {\n      navigation: {\n        pathname: '/profile',\n        query: {\n          user: '1',\n        },\n      },\n    },\n  },\n};","These overrides can also be applied to all stories for a component or all stories in your project. Standard parameter inheritance rules apply.\nuseSelectedLayoutSegment, useSelectedLayoutSegments, and useParams hooks\nThe useSelectedLayoutSegment, useSelectedLayoutSegments, and useParams hooks are supported in Storybook. You have to set the nextjs.navigation.segments parameter to return the segments or the params you want to use.","NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n      navigation: {\n        segments: ['dashboard', 'analytics'],\n      },\n    },\n  },\n};\nexport default meta;\nWith the above configuration, the component rendered in the stories would receive the following values from the hooks:\n // NavigationBasedComponent.js\nimport { useSelectedLayoutSegment, useSelectedLayoutSegments, useParams } from 'next/navigation';\n \nexport default function NavigationBasedComponent() {\n  const segment = useSelectedLayoutSegment(); // dashboard\n  const segments = useSelectedLayoutSegments(); // [\"dashboard\", \"analytics\"]\n  const params = useParams(); // {}\n  // ...\n}","To use useParams, you have to use a segments array where each element is an array containing two strings. The first string is the param key and the second string is the param value.\n\n NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n      navigation: {\n        segments: [\n          ['slug', 'hello'],\n          ['framework', 'nextjs'],\n        ],\n      },\n    },\n  },\n};\nexport default meta;","With the above configuration, the component rendered in the stories would receive the following values from the hooks:\n // ParamsBasedComponent.js\nimport { useSelectedLayoutSegment, useSelectedLayoutSegments, useParams } from 'next/navigation';\n \nexport default function ParamsBasedComponent() {\n  const segment = useSelectedLayoutSegment(); // hello\n  const segments = useSelectedLayoutSegments(); // [\"hello\", \"nextjs\"]\n  const params = useParams(); // { slug: \"hello\", framework: \"nextjs\" }\n  ...\n}\nThese overrides can also be applied to a single story or all stories in your project. Standard parameter inheritance rules apply.\nThe default value of nextjs.navigation.segments is [] if not set.\nDefault navigation context\nThe default values on the stubbed navigation context are as follows:\n // Default navigation context\nconst defaultNavigationContext = {\n  pathname: '/',\n  query: {},\n};","// Default navigation context\nconst defaultNavigationContext = {\n  pathname: '/',\n  query: {},\n};\nAdditionally, the router object contains all of the original methods (such as push(), replace(), etc.) as mock functions that can be manipulated and asserted on using regular mock APIs.\nTo override these defaults, you can use parameters and beforeEach:\n // .storybook/preview.ts\nimport { Preview } from '@storybook/react';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/navigation.mock';\n \nconst preview: Preview = {\n  parameters: {\n    nextjs: {\n      // üëá Override the default navigation properties\n      navigation: {\n        pathname: '/app/',\n      },\n    },\n  },\n  async beforeEach() {\n    // üëá Manipulate the default navigation method mocks\n    getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js Head","getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js Head\nnext/head is supported out of the box. You can use it in your stories like you would in your Next.js application. Please keep in mind, that the Head children are placed into the head element of the iframe that Storybook uses to render your stories.\nSass/Scss\nGlobal Sass/Scss stylesheets are supported without any additional configuration as well. Just import them into .storybook/preview.js|ts\n // .storybook/preview.js|ts\nimport '../styles/globals.scss';\nThis will automatically include any of your custom Sass configurations in your next.config.js file.\n // next.config.js\nimport * as path from 'path';\n \nexport default {\n  // Any options here are included in Sass compilation for your stories\n  sassOptions: {\n    includePaths: [path.join(__dirname, 'styles')],\n  },\n};\nCSS/Sass/Scss Modules\nCSS modules work as expected.\n // src/components/Button.jsx\n// This import will work in Storybook","CSS modules work as expected.\n // src/components/Button.jsx\n// This import will work in Storybook\nimport styles from './Button.module.css';\n// Sass/Scss is also supported\n// import styles from './Button.module.scss'\n// import styles from './Button.module.sass'\n \nexport function Button() {\n  return (\n    <button type=\"button\" className={styles.error}>\n      Destroy\n    </button>\n  );\n}\nStyled JSX\nThe built in CSS-in-JS solution for Next.js is styled-jsx, and this framework supports that out of the box too, zero config.\n // src/components/HelloWorld.jsx\n// This will work in Storybook\nfunction HelloWorld() {\n  return (\n    <div>\n      Hello world\n      <p>scoped!</p>\n      <style jsx>{`\n        p {\n          color: blue;\n        }\n        div {\n          background: red;\n        }\n        @media (max-width: 600px) {\n          div {\n            background: blue;\n          }\n        }\n      `}</style>\n      <style global jsx>{`\n        body {\n          background: black;\n        }","`}</style>\n      <style global jsx>{`\n        body {\n          background: black;\n        }\n      `}</style>\n    </div>\n  );\n}\n \nexport default HelloWorld;\nYou can use your own babel config too. This is an example of how you can customize styled-jsx.\n // .babelrc (or whatever config file you use)\n{\n  \"presets\": [\n    [\n      \"next/babel\",\n      {\n        \"styled-jsx\": {\n          \"plugins\": [\"@styled-jsx/plugin-sass\"]\n        }\n      }\n    ]\n  ]\n}\nPostCSS\nNext.js lets you customize PostCSS config. Thus this framework will automatically handle your PostCSS config for you.\nThis allows for cool things like zero-config Tailwind! (See Next.js' example)\nAbsolute imports\nAbsolute imports from the root directory are supported.\n // index.jsx\n// All good!\nimport Button from 'components/button';\n// Also good!\nimport styles from 'styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>","return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nAlso OK for global styles in .storybook/preview.js|ts!\n // .storybook/preview.js|ts\n \nimport 'styles/globals.scss';\n \n// ...\n‚ö†Ô∏èAbsolute imports cannot be mocked in stories/tests. See the Mocking modules section for more information.\nModule aliases\nModule aliases are also supported.\n // index.jsx\n// All good!\nimport Button from '@/components/button';\n// Also good!\nimport styles from '@/styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nSubpath imports\nAs an alternative to module aliases, you can use subpath imports to import modules. This follows Node package standards and has benefits when mocking modules.","To configure subpath imports, you define the imports property in your project's package.json file. This property maps the subpath to the actual file path. The example below configures subpath imports for all modules in the project:\n // package.json\n{\n  \"imports\": {\n    \"#*\": [\"./*\", \"./*.ts\", \"./*.tsx\"]\n  }\n}\n‚ÑπÔ∏èBecause subpath imports replace module aliases, you can remove the path aliases from your TypeScript configuration.\nWhich can then be used like this:\n // index.jsx\nimport Button from '#components/button';\nimport styles from '#styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nMocking modules","<h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nMocking modules\nComponents often depend on modules that are imported into the component file. These can be from external packages or internal to your project. When rendering those components in Storybook or testing them, you may want to mock those modules to control and assert their behavior.\nBuilt-in mocked modules\nThis framework provides mocks for many of Next.js' internal modules:","@storybook/nextjs/cache.mock\n@storybook/nextjs/headers.mock\n@storybook/nextjs/navigation.mock\n@storybook/nextjs/router.mock\n\nMocking other modules\nHow you mock other modules in Storybook depends on how you import the module into your component.\nWith either approach, the first step is to create a mock file. Here's an example of a mock file for a module named session:\n\n lib/session.mock.tsimport { fn } from '@storybook/test';\nimport * as actual from './session';\n \nexport * from './session';\nexport const getUserFromSession = fn(actual.getUserFromSession).mockName('getUserFromSession');\n\nWith subpath imports\nIf you're using subpath imports, you can adjust your configuration to apply conditions so that the mocked module is used inside Storybook. The example below configures subpath imports for four internal modules, which are then mocked in Storybook:","package.json{\n  \"imports\": {\n    \"#api\": {\n      // storybook condition applies to Storybook\n      \"storybook\": \"./api.mock.ts\",\n      \"default\": \"./api.ts\",\n    },\n    \"#app/actions\": {\n      \"storybook\": \"./app/actions.mock.ts\",\n      \"default\": \"./app/actions.ts\",\n    },\n    \"#lib/session\": {\n      \"storybook\": \"./lib/session.mock.ts\",\n      \"default\": \"./lib/session.ts\",\n    },\n    \"#lib/db\": {\n      // test condition applies to test environments *and* Storybook\n      \"test\": \"./lib/db.mock.ts\",\n      \"default\": \"./lib/db.ts\",\n    },\n    \"#*\": [\"./*\", \"./*.ts\", \"./*.tsx\"],\n  },\n}\n\n‚ÑπÔ∏èEach subpath must begin with #, to differentiate it from a regular module path. The #* entry is a catch-all that maps all subpaths to the root directory.\nWith module aliases\nIf you're using module aliases, you can add a Webpack alias to your Storybook configuration to point to the mock file.","vitewebpack .storybook/main.tsTypescript// Replace your-framework with the framework you are using (e.g., react-webpack5, vue3-vite)\nimport type { StorybookConfig } from '@storybook/your-framework';\n \nconst config: StorybookConfig = {\n  framework: '@storybook/your-framework',\n  stories: ['../src/**/*.mdx', '../src/**/*.stories.@(js|jsx|mjs|ts|tsx)'],\n  viteFinal: async (config) => {\n    if (config.resolve) {\n      config.resolve.alias = {\n        ...config.resolve?.alias,\n        // üëá External module\n        lodash: require.resolve('./lodash.mock'),\n        // üëá Internal modules\n        '@/api': path.resolve(__dirname, './api.mock.ts'),\n        '@/app/actions': path.resolve(__dirname, './app/actions.mock.ts'),\n        '@/lib/session': path.resolve(__dirname, './lib/session.mock.ts'),\n        '@/lib/db': path.resolve(__dirname, './lib/db.mock.ts'),\n      };\n    }\n \n    return config;\n  },\n};\n \nexport default config;","Runtime config\nNext.js allows for Runtime Configuration which lets you import a handy getConfig function to get certain configuration defined in your next.config.js file at runtime.\nIn the context of Storybook with this framework, you can expect Next.js's Runtime Configuration feature to work just fine.\nNote, because Storybook doesn't server render your components, your components will only see what they normally see on the client side (i.e. they won't see serverRuntimeConfig but will see publicRuntimeConfig).\nFor example, consider the following Next.js config:\n // next.config.js\nmodule.exports = {\n  serverRuntimeConfig: {\n    mySecret: 'secret',\n    secondSecret: process.env.SECOND_SECRET, // Pass through env variables\n  },\n  publicRuntimeConfig: {\n    staticFolder: '/static',\n  },\n};\nCalls to getConfig would return the following object when called within Storybook:\n // Runtime config\n{\n  \"serverRuntimeConfig\": {},\n  \"publicRuntimeConfig\": {\n    \"staticFolder\": \"/static\"\n  }\n}","{\n  \"serverRuntimeConfig\": {},\n  \"publicRuntimeConfig\": {\n    \"staticFolder\": \"/static\"\n  }\n}\nCustom Webpack config\n‚ÑπÔ∏èYou can safely skip this section if you are using @storybook/experimental-nextjs-vite instead of @storybook/nextjs.\nThe Vite-based Next.js framework does not support Webpack settings.\nNext.js comes with a lot of things for free out of the box like Sass support, but sometimes you add custom Webpack config modifications to Next.js. This framework takes care of most of the Webpack modifications you would want to add. If Next.js supports a feature out of the box, then that feature will work out of the box in Storybook. If Next.js doesn't support something out of the box, but makes it easy to configure, then this framework will do the same for that thing for Storybook.\nAny Webpack modifications desired for Storybook should be made in .storybook/main.js|ts.","Any Webpack modifications desired for Storybook should be made in .storybook/main.js|ts.\nNote: Not all Webpack modifications are copy/paste-able between next.config.js and .storybook/main.js|ts. It is recommended to do your research on how to properly make your modification to Storybook's Webpack config and on how Webpack works.\nBelow is an example of how to add SVGR support to Storybook with this framework.",".storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  webpackFinal: async (config) => {\n    config.module = config.module || {};\n    config.module.rules = config.module.rules || [];\n \n    // This modifies the existing image rule to exclude .svg files\n    // since you want to handle those files with @svgr/webpack\n    const imageRule = config.module.rules.find((rule) => rule?.['test']?.test('.svg'));\n    if (imageRule) {\n      imageRule['exclude'] = /\\.svg$/;\n    }\n \n    // Configure .svg files to be loaded with @svgr/webpack\n    config.module.rules.push({\n      test: /\\.svg$/,\n      use: ['@svgr/webpack'],\n    });\n \n    return config;\n  },\n};\n \nexport default config;","Typescript\nStorybook handles most Typescript configurations, but this framework adds additional support for Next.js's support for Absolute Imports and Module path aliases. In short, it takes into account your tsconfig.json's baseUrl and paths. Thus, a tsconfig.json like the one below would work out of the box.\n // tsconfig.json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/components/*\": [\"components/*\"]\n    }\n  }\n}\nReact Server Components (RSC)\n(‚ö†Ô∏è Experimental)\nIf your app uses React Server Components (RSC), Storybook can render them in stories in the browser.\nTo enable this set the experimentalRSC feature flag in your .storybook/main.js|ts config:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  features: {\n    experimentalRSC: true,\n  },\n};\n \nexport default config;","Setting this flag automatically wraps your story in a Suspense wrapper, which is able to render asynchronous components in NextJS's version of React.\nIf this wrapper causes problems in any of your existing stories, you can selectively disable it using the react.rsc parameter at the global/component/story level:\n\n MyServerComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport MyServerComponent from './MyServerComponent';\n \nconst meta: Meta<typeof MyServerComponent> = {\n  component: MyServerComponent,\n  parameters: {\n    react: { rsc: false },\n  },\n};\nexport default meta;","Note that wrapping your server components in Suspense does not help if your server components access server-side resources like the file system or Node-specific libraries. To work around this, you'll need to mock out your data access layer using Webpack aliases or an addon like storybook-addon-module-mock.\nIf your server components access data via the network, we recommend using the MSW Storybook Addon to mock network requests.\nIn the future we will provide better mocking support in Storybook and support for Server Actions.\n\nNotes for Yarn v2 and v3 users\nIf you're using Yarn v2 or v3, you may run into issues where Storybook can't resolve style-loader or css-loader. For example, you might get errors like:\n Module not found: Error: Can't resolve 'css-loader'\nModule not found: Error: Can't resolve 'style-loader'","This is because those versions of Yarn have different package resolution rules than Yarn v1.x. If this is the case for you, please install the package directly.\nFAQ\nStories for pages/components which fetch data\nNext.js pages can fetch data directly within server components in the app directory, which often include module imports that only run in a node environment. This does not (currently) work within Storybook, because if you import from a Next.js page file containing those node module imports in your stories, your Storybook's Webpack will crash because those modules will not run in a browser. To get around this, you can extract the component in your page file into a separate file and import that pure component in your stories. Or, if that's not feasible for some reason, you can polyfill those modules in your Storybook's webpackFinal configuration.\nBefore\n // app/my-page/index.jsx\nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}","// app/my-page/index.jsx\nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}\n \n// Using this component in your stories will break the Storybook build\nexport default async function Page() {\n  const data = await getData();\n \n  return // ...\n}\nAfter\n // app/my-page/index.jsx\n \n// Use this component in your stories\nimport MyPage from './components/MyPage';\n \nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}\n \nexport default async function Page() {\n  const data = await getData();\n \n  return <MyPage {...data} />;\n}\nStatically imported images won't load\nMake sure you are treating image imports the same way you treat them when using next/image in normal development.\nBefore using this framework, image imports would import the raw path to the image (e.g. 'static/media/stories/assets/logo.svg'). Now image imports work the \"Next.js way\", meaning that you now get an object when importing an image. For example:\n // Image import object\n{","// Image import object\n{\n  \"src\": \"static/media/stories/assets/logo.svg\",\n  \"height\": 48,\n  \"width\": 48,\n  \"blurDataURL\": \"static/media/stories/assets/logo.svg\"\n}\nTherefore, if something in Storybook isn't showing the image properly, make sure you expect the object to be returned from an import instead of only the asset path.\nSee local images for more detail on how Next.js treats static image imports.\nModule not found: Error: Can't resolve package name\nYou might get this if you're using Yarn v2 or v3. See Notes for Yarn v2 and v3 users for more details.\nWhat if I'm using the Vite builder?\nWe have introduced experimental Vite builder support. Just install the experimental framework package @storybook/experimental-nextjs-vite and replace all instances of @storybook/nextjs with @storybook/experimental-nextjs-vite.\nError: You are importing avif images, but you don't have sharp installed. You have to install sharp in order to use image optimization features in Next.js.","sharp is a dependency of Next.js's image optimization feature. If you see this error, you need to install sharp in your project.\n npm install sharp\n yarn add sharp\n pnpm add sharp\nYou can refer to the Install sharp to Use Built-In Image Optimization in the Next.js documentation for more information.\nAPI\nModules\nThe @storybook/nextjs¬†package exports¬†several modules that enable¬†you to mock Next.js's internal behavior.\n@storybook/nextjs/export-mocks\nType: { getPackageAliases: ({ useESM?: boolean }) => void }\ngetPackageAliases is a helper for generating the aliases needed to set up portable stories.\n // jest.config.ts\nimport type { Config } from 'jest';\nimport nextJest from 'next/jest.js';\n// üëá Import the utility function\nimport { getPackageAliases } from '@storybook/nextjs/export-mocks';\n \nconst createJestConfig = nextJest({\n  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment\n  dir: './',\n});\n \nconst config: Config = {","dir: './',\n});\n \nconst config: Config = {\n  testEnvironment: 'jsdom',\n  // ... rest of Jest config\n  moduleNameMapper: {\n    ...getPackageAliases(), // üëà Add the utility as mapped module names\n  },\n};\n \nexport default createJestConfig(config);\n@storybook/nextjs/cache.mock\nType: typeof import('next/cache')\nThis module exports mocked implementations of the next/cache module's exports. You can use it to create your own mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { revalidatePath } from '@storybook/nextjs/cache.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const Submitted: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n \n    const submitButton = canvas.getByRole('button', { name: /submit/i });\n    await userEvent.click(saveButton);\n    // üëá Use any mock assertions on the function\n    await expect(revalidatePath).toHaveBeenCalledWith('/');\n  },\n};","@storybook/nextjs/headers.mock\nType: cookies, headers and draftMode from Next.js\nThis module exports writable mocked implementations of the next/headers module's exports. You can use it to set up cookies or headers that are read in your story, and to later assert that they have been called.\nNext.js's default headers() export is read-only, but this module exposes methods allowing you to write to the headers:\n\nheaders().append(name: string, value: string): Appends the value to the header if it exists already.\nheaders().delete(name: string): Deletes the header\nheaders().set(name: string, value: string): Sets the header to the value provided.\n\nFor cookies, you can use the existing API to write them. E.g., cookies().set('firstName', 'Jane').\nBecause headers(), cookies() and their sub-functions are all mocks you can use any mock utilities in your stories, like headers().getAll.mock.calls.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { cookies, headers } from '@storybook/nextjs/headers.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const LoggedInEurope: Story = {\n  async beforeEach() {\n    // üëá Set mock cookies and headers ahead of rendering\n    cookies().set('username', 'Sol');\n    headers().set('timezone', 'Central European Summer Time');\n  },\n  async play() {\n    // üëá Assert that your component called the mocks\n    await expect(cookies().get).toHaveBeenCalledOnce();\n    await expect(cookies().get).toHaveBeenCalledWith('username');\n    await expect(headers().get).toHaveBeenCalledOnce();","await expect(headers().get).toHaveBeenCalledOnce();\n    await expect(cookies().get).toHaveBeenCalledWith('timezone');\n  },\n};","@storybook/nextjs/navigation.mock\nType: typeof import('next/navigation') & getRouter: () => ReturnType<typeof import('next/navigation')['useRouter']>\nThis module exports mocked implementations of the next/navigation module's exports. It also exports a getRouter function that returns a mocked version of Next.js's router object from useRouter, allowing the properties to be manipulated and asserted on. You can use it mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { redirect, getRouter } from '@storybook/nextjs/navigation.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n  parameters: {\n    nextjs: {\n      // üëá As in the Next.js application, next/navigation only works using App Router\n      appDirectory: true,\n    },\n  },\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const Unauthenticated: Story = {\n  async play() {\n    // üëá Assert that your component called redirect()\n    await expect(redirect).toHaveBeenCalledWith('/login', 'replace');\n  },\n};\n \nexport const GoBack: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');","const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');\n \n    await userEvent.click(backBtn);\n    // üëá Assert that your component called back()\n    await expect(getRouter().back).toHaveBeenCalled();\n  },\n};","@storybook/nextjs/router.mock\nType: typeof import('next/router') & getRouter: () => ReturnType<typeof import('next/router')['useRouter']>\nThis module exports mocked implementations of the next/router module's exports. It also exports a getRouter function that returns a mocked version of Next.js's router object from useRouter, allowing the properties to be manipulated and asserted on. You can use it mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/router.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const GoBack: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');\n \n    await userEvent.click(backBtn);\n    // üëá Assert that your component called back()\n    await expect(getRouter().back).toHaveBeenCalled();\n  },\n};","Options\nYou can pass an options object for additional configuration if needed:\n // .storybook/main.js\nimport * as path from 'path';\n \nexport default {\n  // ...\n  framework: {\n    name: '@storybook/nextjs',\n    options: {\n      image: {\n        loading: 'eager',\n      },\n      nextConfigPath: path.resolve(__dirname, '../next.config.js'),\n    },\n  },\n};\nThe available options are:\nbuilder\nType: Record<string, any>\nConfigure options for the framework's builder. For Next.js, available options can be found in the Webpack builder docs.\nimage\nType: object\nProps to pass to every instance of next/image. See next/image docs for more details.\nnextConfigPath\nType: string\nThe absolute path to the next.config.js file. This is necessary if you have a custom next.config.js file that is not in the root directory of your project.\nParameters\nThis framework contributes the following parameters to Storybook, under the nextjs namespace:\nappDirectory\nType: boolean\nDefault: false","appDirectory\nType: boolean\nDefault: false\nIf your story imports components that use next/navigation, you need to set the parameter nextjs.appDirectory to true. Because this is a parameter, you can apply it to a single story, all stories for a component, or every story in your Storybook. See Next.js Navigation for more details.\nnavigation\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n  segments?: (string | [string, string])[];\n}\nDefault value:\n {\n  segments: [];\n}\nThe router object that is passed to the next/navigation context. See Next.js's navigation docs for more details.\nrouter\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n}","router\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n}\nThe router object that is passed to the next/router context. See Next.js's router docs for more details.Was this page useful?üëçüëé‚úçÔ∏è Edit on GithubOn this pageJoin the communitySubscribe6,378 developers and countingWhyWhy StorybookComponent driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":0,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":919,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":1537,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":2426,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":3201,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":3949,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":4917,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":5795,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":6625,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":7170,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":7866,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":8795,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":9702,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":10238,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":10880,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":11749,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":12580,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":13406,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":14305,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":14739,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":15655,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":16316,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":17111,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":17939,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":18824,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":19723,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":20623,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":21456,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":22087,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":22553,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":23414,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":24302,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":25232,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":26131,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":26922,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":27336,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":28086,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":28971,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":29584,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":30407,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":31278,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":32228,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":33207,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":34148,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":34643,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":35434,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":36332,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37216,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37343,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37836,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":38719,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":38965,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":39442,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":40212,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":41140,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":41758,"title":"Storybook for Next.js | Storybook docs"}]},{"source":{"collection_name":"web-search-ef9ef7392ff889cb2162bccfdd1d7e84f7b68d9ffaa0e570067a","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/blog/get-started-with-storybook-and-next-js/"]},"document":["Get started with Storybook and Next.jsDocsAddonsShowcaseBlogVisual TestEnterprise86,466Search docs‚åÉKBack to blogJoin the community:Get started with Storybook and Next.jsIntegrate Storybook with Next.js in four simple stepsMichael ChanNov 08, 2021 ‚Äî @chantasticLast updated: Jul 03, 20242023 UPDATE: Storybook created a zero-config integration with NextJS. Learn how to use it here.Next.js is a fantastic framework for building high-performance applications in React. But as it becomes more advanced ‚Äî with features like next/image ‚Äî it becomes more difficult to integrate with documentation and testing environments like Storybook.I dove in deep to learn how to make Storybook the best component-driven UI environment for Next.js pages. This article shows you how to do the same in four straightforward steps:üì¶ Initialize a new Storybook with Webpack 5üìë Create stories for Next.js pagesüåé Import shared, global styles in preview.js‚¨áÔ∏è De-optimize Next Image for use in StoriesIf you prefer video, jump","global styles in preview.js‚¨áÔ∏è De-optimize Next Image for use in StoriesIf you prefer video, jump to the end. We cover all these steps (and more) in a 27 minute code-along YouTube video!Start with a Next.js AppBefore we start, we need a Next.js app. This tutorial uses the fantastic Getting Started guide on nextjs.org.A fresh Next.js app running in the browserI recommend following along in a new app and then repeating the steps in an existing one. Here is the complete source on Github, updated for Next.js 12.Initialize a new Storybook with Webpack 5Storybook has an initializer that does the heavy lifting for us: npx sb init. This script detects your project type and adapts to it. But we can also give it a few hints.Next.js v11 and later use Webpack 5. We can also use Webpack 5 in Storybook to get improved integration and performance. To do that we use the builder option and run this command:npx sb init --builder webpack5Read more about the benefits of Storybook's Webpack 5","this command:npx sb init --builder webpack5Read more about the benefits of Storybook's Webpack 5 builder.Create stories for full Next.js pagesNext.js and Storybook have extremely compatible component models. Next.js uses components for pages and Storybook uses components for documentation and testing. This makes Storybook a great component-driven development environment for Next.js!Let's create a story for our Next.js home page.Create a new file /stories/pages/home.stories.jsxImport /pages/index.jsExport a default story object, with title and component propertiesExport a story for Home// /stories/pages/home.stories.jsx","import Home from \"../../pages/index\";\n\nexport default {\n  title: \"Pages/Home\",\n  component: Home,\n};","export const HomePage = () => <Home />\nWe now have our Home page in Storybook. But it isn't much to look at yet. We need to import global styles.Import shared, global stylesheets in preview.jsMost apps have stylesheet for global resets or font styles that is shared globally. Our Next.js tutorial app holds global styles in /styles/globals.css.We can import our global stylesheet into our home.stories.jsx story file. But doing so would require a lot of duplication in story files ‚Äî a very error-prone process. It'd be better to import global stylesheets one for all stories.Storybook holds shared story configuration in .storybook/preview.js. This file controls the way all stories are rendered. Stylesheets can be imported with a module import:// .storybook/preview.js","import \"../styles/globals.css\";Story, before and after adding globals.css. Much better!We did it! Save for a broken image, our story looks like the homepage served from Next.js.For more ways to handle styles in Storybook, check out our Styling and CSS guide.De-optimize Next.js Image in storiesThe most challenging part of a Next.js and Storybook integration is handling images.Storybook must be configured to serve next/images in the /public directoryNext.js v10 and newer include the Next.js Image component. In their words, it's \"an extension of the HTML <img>element, evolved for the modern web.\" Utilizing it optimizes file size, visual stability, and load times. It's a marvel of UI engineering.Because Storybook runs these components in isolation of Next.js framework-integrations, we need to configure it in two important ways:Serve the Next.js public directory in StorybookAdd the unoptimized prop to Next.js Image component in all stories1. Serve the public directory in StorybookThe sb","prop to Next.js Image component in all stories1. Serve the public directory in StorybookThe sb init script creates two Storybook scripts in our package.json. Update both of them to serve the publicdirectory (where Next.js images are kept). The CLI option we use for this is -s. or --static-dir.// package.json","\"scripts\": {\n-    \"storybook\": \"start-storybook -p 6006\",\n-    \"build-storybook\": \"build-storybook\"\n+    \"storybook\": \"start-storybook -p 6006 -s ./public\",\n+    \"build-storybook\": \"build-storybook -s public\"\n}\nFind more CLI options in our CLI options doc. And learn more about Serving Static Files via Storybook.2. Use the unoptimized prop for Next.js Images in StorybookEverywhere that the Next.js Image component is used, images are served from a /_next-prefixed path. We want to utilize Next Image's prop APIs and attributes, but we don't want to require that the Next.js dev server be running. We can do exactly this with the unoptimized prop. But how do we do this in Storybook but not Next.js ü§îWith a bit of module trickery, we can de-optimize Next.js Image only in stories.// .storybook/preview.js\nimport * as NextImage from \"next/image\";\n\nconst OriginalNextImage = NextImage.default;","Object.defineProperty(NextImage, \"default\", {\n  configurable: true,\n  value: (props) => <OriginalNextImage {...props} unoptimized />,\n});","This snippet of configuration modifies how Storybook evaluates the next/image module. Anywhere that Next.js Image's default export is used, the unoptimized prop is applied.Restart your server and check out the Vercel SVG at the bottom. We're back in business!For more information on this technique, read How to Use the Next.js Image Component in Storybook ‚Äî a fantastic post by Jonas Schumacher.Next.js home page running as an app (left) and independently in Storybook (right).What's next?You've already done a great job with this Next.js and Storybook integration. But there's so much more that we can do!If you're hungry for more, checkout my YouTube tutorial. I take this integration even further with Mock Service Worker for use with getServerSideProps and getStaticProps.What are your Next.jsü§ùStorybook tips?We want to hear from you!What wisdom can you share about making Next.js and Storybook a super dev environment? Comment here or join the Storybook Discord Server! We can't wait to meet","a super dev environment? Comment here or join the Storybook Discord Server! We can't wait to meet you ü§©Next.js 12 is here! @chantastic shares four quick tips to¬†get the most from Next.js and Storybook!üì¶ Use Webpack 5üìë Write stories for Next.js pagesüåé Import shared global styles in preview.js‚¨áÔ∏è Integrate next/imagehttps://t.co/By5EfB4XnI pic.twitter.com/jED2qN0crP‚Äî Storybook (@storybookjs) November 10, 2021","Join the Storybook mailing listGet the latest news, updates and releasesYour emailSend6,784 developers and countingWe‚Äôre hiring!Join the team behind Storybook and Chromatic. Build tools that are used in production by 100s of thousands of developers. Remote-first.View jobs‚öõÔ∏è ReactNext.jsPopular posts4 ways to document your design system with StorybookHow to show UI components, specs, and usage guidelines togetherVarun VachharNov 16, 2021Storybook + Netlify CMSBring your content to StorybookVarun VachharNov 23, 2021Interactive stories (beta)Simulate user behaviour using play functionsVarun VachharNov 04, 2021Join the communityYour emailSubscribe6,784 developers and countingWhyWhy StorybookComponent-driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareStorybookMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":0,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":903,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":1792,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":2420,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":2522,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":3293,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":4195,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":4506,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":5400,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":5538,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":6437,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":6848,"title":"Get started with Storybook and Next.js"}]},{"source":{"collection_name":"web-search-17c22d27b5865e550328688c4bd651665e826b76199d67a47b8c","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/recipes/next"]},"document":["Next.js | Storybook recipesStorybook 9 is coming! Join the newsletter to get it first. SubscribeDocsAddonsShowcaseBlogVisual TestEnterprise86,463Search docs Back to integrationsIntegrate Next.js with StorybookNext.js enables you to create full-stack web applications by extending the latest React features‚ÑπÔ∏èPrerequisitesThis recipe assumes that you have a Next >= 12 app. Don‚Äôt have this? Follow Next's setup instructions then run: # Add Storybook:\nnpm create storybook@latest\nSet up your project\nIn a project without Storybook\nFollow the prompts after running this command in your Next.js project's root directory:\n npm create storybook@latest\nIn a project with Storybook\nThis framework is designed to work with Storybook 7. If you‚Äôre not already using v7, upgrade with this command:\n npx storybook@latest upgrade\nAutomatic migration","npx storybook@latest upgrade\nAutomatic migration\nWhen running the upgrade command above, you should get a prompt asking you to migrate to @storybook/nextjs, which should handle everything for you. In case that auto-migration does not work for your project, refer to the manual migration below.\nManual migration\nInstall the framework:\n yarn add -D @storybook/nextjs\nUpdate your main.js to change the framework property:\n // .storybook/main.js\n \nexport default {\n  // ...\n  framework: {\n    // name: '@storybook/react-webpack5', // Remove this\n    name: '@storybook/nextjs', // Add this\n    options: {},\n  },\n};\nIf you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n // .storybook/main.js\n \nexport default {\n  // ...\n  addons: [\n    // ...\n    // These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n(Experimental) SWC support","// 'storybook-addon-next-router',\n  ],\n};\n(Experimental) SWC support\nIf you're working with a Next.js project that already uses SWC (e.g., version 14 or higher), you can enable it in Storybook by adding the following to your main.js:\n // .storybook/main.js\n \nexport default {\n  // ...\n  framework: {\n    name: '@storybook/nextjs',\n    options: {\n      builder: {\n        useSWC: true, // Enables SWC support\n      },\n    },\n  },\n};\nüí°SWC support was introduced in version 7.6, is currently experimental, and may not work for all projects. If you encounter any issues, contact us by opening a discussion on GitHub.\nGet involved\nNow you're ready to use Next.js with Storybook. üéâ If you use Nextjs at work, we'd love your feedback on the Next + Storybook experience.","Join the maintainers and our thriving community in Discord.Tagsüõ† CodeNextjsFrameworkContributorsShaunEveningJoin the communitySubscribe6,378 developers and countingWhyWhy StorybookComponent driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":0,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":786,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":1677,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":2440,"title":"Next.js | Storybook recipes"}]}],"lastSentence":"Potential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15.","done":true}},"currentId":"a8f2abeb-8919-4261-8bda-6505d0162332"},"messages":[{"id":"1bca05f4-9838-4e13-abcd-cb44d90240b8","parentId":null,"childrenIds":["a8f2abeb-8919-4261-8bda-6505d0162332"],"role":"user","content":"Do anything necessary to build a next.js 15 application which uses react 19.  \nMake sure it‚Äôs using npx create scripts and then sets up a basic landing page with 10 sections.  \n  \nInclude chakraui or whatever that ones called. Also include storybook. Only include elements you actually need.","timestamp":1745909473,"models":["codewriter:latest"]},{"parentId":"1bca05f4-9838-4e13-abcd-cb44d90240b8","id":"a8f2abeb-8919-4261-8bda-6505d0162332","childrenIds":[],"role":"assistant","content":"permissions\n\nOkay, let me tackle this step by step. The user wants a Next.js 15 app with React 19, using npx create scripts and Storybook. They also want a landing page with 10 sections and Chakra UI.\n\nFirst, I need to check if React 19 is compatible with Next.js 15. From the context, there's a mention of ReactJS 19 with Next.js in one of the sources. So, I can use npx create-next-app@latest for Next.js 15.\n\nNext, integrate Chakra UI. The context shows how to install Chakra UI with Next.js using @chakra-ui/react and other dependencies. Also, Storybook setup steps are in the context, using @storybook/nextjs.\n\nFor the landing page with 10 sections, I'll structure each section as a component. Chakra's Box, Heading, Text, and Divider can be used for sections.\n\nIncluding Storybook: Use the @storybook/nextjs package. Setup steps involve creating stories for each section, but since it's a landing page, maybe create a single story with multiple sections.\n\nWait, the user said \"include elements you actually need.\" Maybe not all 10 sections as separate stories but the whole page as one component with sections.\n\nSo, steps:\n\n1. Create Next.js 15 app with npx create-next-app@latest.\n2. Install Chakra UI and Storybook via npm install commands.\n3. Configure Storybook in .storybook/main.js with @storybook/nextjs framework.\n4. Create a LandingPage component in app/page.tsx with 10 sections using Chakra's components.\n5. Create a Storybook story for LandingPage to showcase it.\n\nLet me check the context again for exact commands and configurations. For Storybook, the .storybook/main.js setup is needed. Also, the landing page structure would use Chakra's layout components.\n\nPotential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15. Also, ensuring that all sections are properly structured.\n\n<details type=\"code_interpreter\" done=\"false\">\n<summary>Analyzing...</summary>\n```python\n```py\n# The following steps are to be executed in the terminal, not in Python. This is for guidance.\n# However, since this is a code interpreter, the actual shell commands cannot be executed here. Below steps are for reference.\n\n# Step 1: Create next.js app\n# Run in terminal\nnpx create-next-app@latest my-nextjs19-app\n\n# Step 2: Navigate to app directory\ncd my-nextjs19-app\n\n# Step 3: Install Chakra UI and Storybook\nnpm install @chakra-ui/react @emotion/react @emotion/styled framer-motion\nnpm install -D @storybook/nextjs\n\n# Step 4: Setup Storybook\nnpx storybook init --builder webpack5\n```\n```\n</details>\npermissions\n\nOkay, let me tackle this step by step. The user wants a Next.js 15 app with React 19, using npx create scripts and Storybook. They also want a landing page with 10 sections and Chakra UI.\n\nFirst, I need to check if React 19 is compatible with Next.js 15. From the context, there's a mention of ReactJS 19 with Next.js in one of the sources. So, I can use npx create-next-app@latest for Next.js 15.\n\nNext, integrate Chakra UI. The context shows how to install Chakra UI with Next.js using @chakra-ui/react and other dependencies. Also, Storybook setup steps are in the context, using @storybook/nextjs.\n\nFor the landing page with 10 sections, I'll structure each section as a component. Chakra's Box, Heading, Text, and Divider can be used for sections.\n\nIncluding Storybook: Use the @storybook/nextjs package. Setup steps involve creating stories for each section, but since it's a landing page, maybe create a single story with multiple sections.\n\nWait, the user said \"include elements you actually need.\" Maybe not all 10 sections as separate stories but the whole page as one component with sections.\n\nSo, steps:\n\n1. Create Next.js 15 app with npx create-next-app@latest.\n2. Install Chakra UI and Storybook via npm install commands.\n3. Configure Storybook in .storybook/main.js with @storybook/nextjs framework.\n4. Create a LandingPage component in app/page.tsx with 10 sections using Chakra's components.\n5. Create a Storybook story for LandingPage to showcase it.\n\nLet me check the context again for exact commands and configurations. For Storybook, the .storybook/main.js setup is needed. Also, the landing page structure would use Chakra's layout components.\n\nPotential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15. Also, ensuring that all sections are properly structured.\n\n<details type=\"code_interpreter\" done=\"true\" output=\"{&quot;stdout&quot;: null, &quot;stderr&quot;: &quot;PythonError: Traceback (most recent call last):\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 597, in eval_code_async\\n    await CodeRunner(\\n          ^^^^^^^^^^^\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 285, in __init__\\n    self.ast = next(self._gen)\\n               ^^^^^^^^^^^^^^^\\n  File \\&quot;/lib/python312.zip/_pyodide/_base.py\\&quot;, line 149, in _parse_and_compile_gen\\n    mod = compile(source, filename, mode, flags | ast.PyCF_ONLY_AST)\\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \\&quot;&lt;exec&gt;\\&quot;, line 1\\n    ```py\\n    ^\\nSyntaxError: invalid syntax\\n&quot;, &quot;result&quot;: null}\">\n<summary>Analyzed</summary>\n```python\n```py\n# The following commands are for reference and cannot be executed in this environment.\n# However, here's what the final project structure would look like:\n\n# Project Structure:\n# my-nextjs19-app/\n# ‚îú‚îÄ‚îÄ app/\n# ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx\n# ‚îú‚îÄ‚îÄ .storybook/\n# ‚îÇ   ‚îú‚îÄ‚îÄ main.js\n# ‚îÇ   ‚îî‚îÄ‚îÄ preview.ts\n# ‚îú‚îÄ‚îÄ components/\n# ‚îÇ   ‚îú‚îÄ‚îÄ LandingPage.tsx\n# ‚îú‚îÄ‚îÄ public/\n# ‚îú‚îÄ‚îÄ styles/\n# ‚îî‚îÄ‚îÄ package.json\n\n# For the landing page with 10 sections using Chakra UI, here's an example of app/page.tsx:\nimport { Box, Heading, Text } from '@chakra-ui/react';\n\nexport default function Home() {\n  return (\n    <Box p={4}>\n      <Heading mb={4}>Section 1</Heading>\n      <Text>Content for section 1...</Text>\n\n      {/* Repeat similar sections up to 10 */}\n    </Box>\n  );\n}\n\n# For Storybook, main.js would have:\nexport default {\n  stories: ['../components/**/*.stories.@(js|jsx|mjs|ts|tsx)'],\n  addons: [\n    '@storybook/addon-links',\n    '@storybook/addon-essentials'\n  ],\n};\n```\n```\n</details>","model":"codewriter:latest","modelName":"codewriter","modelIdx":0,"userContext":null,"timestamp":1745909473,"statusHistory":[{"action":"web_search","description":"Generating search query","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"how to create a next.js 15 app with react 19 using npx create scripts","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"setup chakra ui in next.js 15 project","done":false},{"action":"web_search","description":"Searching \"{{searchQuery}}\"","query":"integrate storybook with next.js 15","done":false},{"action":"web_search","description":"Searched {{count}} sites","urls":["https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","https://www.chakra-ui.com/docs/get-started/frameworks/next-app","https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","https://storybook.js.org/docs/get-started/frameworks/nextjs","https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","https://storybook.js.org/recipes/next"],"done":true}],"sources":[{"source":{"collection_name":"web-search-e100b905b2fcf59be27ed4f5032e00a602fee66b669006b4dd98","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa"]},"document":["How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | MediumOpen in appSign upSign inWriteSign upSign inFrontEnd Web¬∑FrontendWeb is a platform for writers and readers to read and write a new post about frontend developers, full-stack developers, Web developers, and Computer science. It is an open-source community that joins and gathers frontend developers to build and share knowledge with otherHow can ReactJS 19 be used with Next.js in less than five minutes?Member-only storyReact 19 + Nextjs (Updated)How can ReactJS 19 be used with Next.js in less than five minutes?Try reactjs 19 features using nextjs within the simple step.Rajdeep SinghFollow3 min read¬∑May 17, 2024--ShareOn the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs.In a small tutorial, I will tell you how to install and use React 19 with nextjs. For that, follow the","a small tutorial, I will tell you how to install and use React 19 with nextjs. For that, follow the steps below:Create a new nextjs app.Install babel-plugin-react-compilerEnable experimental react compilerCreate a new nextjs app.First, create a new fresh app using create next app CLI using npm, yarn, or pnpm.npx create-next-app@rc# orpnpm create next-app@rcI used the pnpm to create a fresh new next app and check the command output.‚ûú  medium pnpm create next-app@rc nextjs-19.../share/pnpm/store/v3/tmp/dlx-123778   |   +1 +.../share/pnpm/store/v3/tmp/dlx-123778   | Progress: resolved 1, reused 0, downloaded 1, added 1, done‚úî Would you like to use TypeScript? ‚Ä¶ No / Yes‚úî Would you like to use ESLint? ‚Ä¶ No / Yes‚úî Would you like to use Tailwind CSS? ‚Ä¶ No / Yes‚úî Would you like to use `src/` directory? ‚Ä¶ No / Yes‚úî Would you like to use App Router? (recommended) ‚Ä¶ No / Yes‚úî Would you like to use Turbopack for next dev? ‚Ä¶ No / Yes‚úî Would you like to customize the default import alias (@/*)? ‚Ä¶","Turbopack for next dev? ‚Ä¶ No / Yes‚úî Would you like to customize the default import alias (@/*)? ‚Ä¶ No / Yes‚úî What import alias would you like configured? ‚Ä¶ @/*Creating a new Next.js app in /home/officialrajdeepsingh/medium/nextjs-19.Using pnpm.Initializing project with template: app-tw Installing dependencies:- react- react-dom- nextInstalling devDependencies:- typescript- @types/node- @types/react- @types/react-dom- postcss- tailwindcss- eslint- eslint-config-nextPackages: +358+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++Downloading registry.npmjs.org/next/15.0.0-rc.0: 20.52 MB/20.52 MB, doneDownloading registry.npmjs.org/@next/swc-linux-x64-gnu/15.0.0-rc.0: 42.72 MB/42.72 MB‚Ä¶----FollowPublished in FrontEnd Web450 Followers¬∑Last published¬†Apr 18, 2025FrontendWeb is a platform for writers and readers to read and write a new post about frontend developers,","is a platform for writers and readers to read and write a new post about frontend developers, full-stack developers, Web developers, and Computer science. It is an open-source community that joins and gathers frontend developers to build and share knowledge with otherFollowFollowWritten by Rajdeep Singh1.7K Followers¬∑91 FollowingFollow me if you learn more about JavaScript | TypeScript | React.js | Next.js | Linux | NixOS | Frontend Developer | https://linktr.ee/officialrajdeepsinghFollowNo responses yetHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"],"metadata":[{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":0,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":901,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":1802,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"},{"description":"On the last day of the React conference, the React team announced that reactjs 19 was an RC release. If you are curious about how it works, try it locally with nextjs. In a small tutorial, I will‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/frontendweb/how-can-reactjs-19-be-used-with-next-js-in-less-than-five-minutes-9858fba0f4fa","start_index":2701,"title":"How can ReactJS 19 be used with Next.js in less than five minutes? | by Rajdeep Singh | FrontEnd Web | Medium"}]},{"source":{"collection_name":"web-search-888eb636129677163b11c915aeaa200ff1d8d22ba3f88283768a","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4"]},"document":["How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | MediumOpen in appSign upSign inWriteSign upSign inHow to Set Up Next.js 15 for Production in 2024Jan HestersFollow23 min read¬∑Nov 19, 2024--18ListenShareI‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through countless iterations.Whether you‚Äôre part of a small team of one, two, or three developers, or you work on a massive Next.js project with multiple teams on the same codebase, it‚Äôs critical to get the foundation of your app right from the start. Even if you‚Äôre working on an existing project, you will discover some hard-earned insights that you can apply to your app today.Let me take you by the hand and show you all the steps and packages that you want to set up and explain to you why they‚Äôre useful, so your app scales smoothly.Initialize Your ProjectBegin by creating a new","you why they‚Äôre useful, so your app scales smoothly.Initialize Your ProjectBegin by creating a new Next.js project.npx create-next-app@latestIt may ask you if it can install the latest create-next-app version, just hit yes.Need to install the following packages:create-next-app@15.0.0Ok to proceed? (y)And then configure your project by hitting yeson everything (TypeScript, Tailwind, app router).‚úî **What is your project named?** ‚Ä¶ reactsquad-production‚úî **Would you like to use** **TypeScript****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **ESLint****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **Tailwind CSS****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **`src/` directory****?** ‚Ä¶ No / YesYes‚úî **Would you like to use** **App Router****? (recommended)** ‚Ä¶ No / YesYes‚úî **Would you like to customize the default** **import alias** **(@/*)?** ‚Ä¶ No / NoThen change into the directory of your project and open it in your favorite editor.$ cd nextjs-for-production~/dev/nextjs-for-production","project and open it in your favorite editor.$ cd nextjs-for-production~/dev/nextjs-for-production (main) ü§Ø$ cursor .Run The Development ServerYou want to verify that your setup worked.Run npm run dev to start the development server.Visit http://localhost:3000 to view your application.Type Checks With TypeScriptYour project has TypeScript already configured, but you also want to add an explicit command to your package.json that checks all your files for type errors.\"type-check\": \"tsc -b\"You‚Äôre going to use this command later together with other automated static analysis checks.Code FormattingWhen you collaborate with a large team on a project, it‚Äôs important to unify the way that everyone writes code. Discuss choices like using semicolons, quote styles, and tabs versus spaces with your team.Then use tools to enforce your style guide and format code automatically.There are two tools for that: Prettier and ESLint.PrettierPrettier is an opinionated code formatter that eliminates style","that: Prettier and ESLint.PrettierPrettier is an opinionated code formatter that eliminates style discussions during code reviews.Install Prettier together with its Tailwind plugin.npm install --save-dev prettier prettier-plugin-tailwindcssCreate aprettier.config.js file with your preferred rules.module.exports = {  arrowParens: 'avoid',  bracketSameLine: false,  bracketSpacing: true,  htmlWhitespaceSensitivity: 'css',  insertPragma: false,  jsxSingleQuote: false,  plugins: ['prettier-plugin-tailwindcss'],  printWidth: 80,  proseWrap: 'always',  quoteProps: 'as-needed',  requirePragma: false,  semi: true,  singleQuote: true,  tabWidth: 2,  trailingComma: 'all',  useTabs: false,};Add a formatting script to your package.json.\"format\": \"prettier --write .\",Run the formatter to apply your style.$ npm run format> nextjs-for-production@0.1.0 format> prettier --write .next.config.mjs 4ms (unchanged)package-lock.json 54ms (unchanged)package.json 1ms (unchanged)postcss.config.mjs 2ms","4ms (unchanged)package-lock.json 54ms (unchanged)package.json 1ms (unchanged)postcss.config.mjs 2ms (unchanged)README.md 20ms (unchanged)src/app/globals.css 17ms (unchanged)src/app/layout.tsx 30ms (unchanged)src/app/page.tsx 11ms (unchanged)tailwind.config.ts 2ms (unchanged)tsconfig.json 2ms (unchanged)Your files are now ‚Äúprettier‚Äù, but you also want to use ESLint.ESLintESLint can scan your code for both stylistic and logical issues. Install ESLint and its plugins, like unicorn, playwright and import sort.npm install --save-dev @typescript-eslint/parser eslint-plugin-unicorn eslint-plugin-import eslint-plugin-playwright eslint-config-prettier eslint-plugin-prettier eslint-plugin-simple-import-sortUpdate your.eslintrc.json{  \"extends\": [    \"next/core-web-vitals\",    \"plugin:unicorn/recommended\",    \"plugin:import/recommended\",    \"plugin:playwright/recommended\",    \"plugin:prettier/recommended\"  ],  \"plugins\": [\"simple-import-sort\"],  \"rules\": {    \"simple-import-sort/exports\":","],  \"plugins\": [\"simple-import-sort\"],  \"rules\": {    \"simple-import-sort/exports\": \"error\",    \"simple-import-sort/imports\": \"error\",    \"unicorn/no-array-callback-reference\": \"off\",    \"unicorn/no-array-for-each\": \"off\",    \"unicorn/no-array-reduce\": \"off\",    \"unicorn/prevent-abbreviations\": [      \"error\",      {        \"allowList\": {          \"e2e\": true        },        \"replacements\": {          \"props\": false,          \"ref\": false,          \"params\": false        }      }    ]  },  \"overrides\": [    {      \"files\": [\"*.js\"],      \"rules\": {        \"unicorn/prefer-module\": \"off\"      }    }  ]}This tutorial‚Äôs plugins offer different functions. For detailed descriptions, visit their respective GitHub pages.But in short, they enforce coding standards, organize imports, and ensure correct use of modern JavaScript features. Since ESLint and Prettier can conflict, this setup makes them work together smoothly. The plugins also help prevent bugs and keep styles consistent,","makes them work together smoothly. The plugins also help prevent bugs and keep styles consistent, especially with tools like Vitest and Playwright.Add a linting script to your package.json.\"lint:fix\": \"next lint --fix\",Run it to format all files according to your new rules.$ npm run lint:fix> nextjs-for-production@0.1.0 lint:fix> next lint --fix‚úî No ESLint warnings or errorsIf you get a TypeScript version warning, you can ignore that.Note: As of this article‚Äôs writing, ESLint 9 is available, but this tutorial uses ESLint 8 because many plugins do not yet support the latest version.CommitlintWhen collaborating with a large team, it‚Äôs also helpful to enforce consistent commit messages to keep the project history clear. By choosing the right standards, you can automate changelog and release generation with correct semantic versioning.Install Commitlint and its necessary configurations. This includes Husky, which helps manage Git hooks.npm install --save-dev @commitlint/cli@latest","This includes Husky, which helps manage Git hooks.npm install --save-dev @commitlint/cli@latest @commitlint/config-conventional@latest husky@latestInitialize Husky in your project to set up the basic configuration.npx husky-init && npm installAdd hooks to automate linting and type checking before each commit, and customize your commit message workflow.npx husky add .husky/pre-commit 'npm run lint && npm run type-check'npx husky add .husky/prepare-commit-msg 'exec < /dev/tty && npx cz --hook || true'The pre-commit hook runs after git commit, but before the commit message is finalized and runs linting and type-checking on your code.The prepare-commit-msg hook runs after git commit is initiated but before the commit message editor opens. It runs commitizen CLI to let you craft conventional commit messages. You'll learn how to use this hook in a bit.Remove the line that says npm test from .husky/_/pre-commit.Make sure these scripts are executable.chmod a+x .husky/pre-commitchmod a+x",".husky/_/pre-commit.Make sure these scripts are executable.chmod a+x .husky/pre-commitchmod a+x .husky/prepare-commit-msgHere, chmod stands for \"change mode.\" This command allows you to change the access permissions or modes of a file or directory in Unix and Unix-like operating systems. The argument a+x adds execute permissions for all users.Install Commitizen, which provides a CLI for crafting conventional commit messages.npm install --save-dev commitizen cz-conventional-changelogConfigure Commitizen in your package.json to use the conventional changelog standard.\"config\": {  \"commitizen\": {    \"path\": \"cz-conventional-changelog\"  }},The conventional changeloge standard is a specification for adding human and machine-readable meaning to commit messages. It is designed to automate the producing of changelogs and releases based on the Git history of your project.A future article will explain this standard in detail. It‚Äôs included in this tutorial because getting it right from the","explain this standard in detail. It‚Äôs included in this tutorial because getting it right from the start is important. You can use it and benefit from it without needing an in-depth understanding.Create your commitlint.config.cjs file with rules that suit your team's needs. This setup ensures your commit messages are consistent and relevant to the changes made.const config = {  extends: ['@commitlint/config-conventional'],  rules: {    'references-empty': [1, 'never'],    'footer-max-line-length': [0, 'always'],    'body-max-line-length': [0, 'always'],  },};module.exports = config;Run the following command to start crafting your commit messages using a guided CLI.$ git add --all$ npx czcz-cli@4.3.0, cz-conventional-changelog@3.3.0? Select the type of change that you'recommitting: (Use arrow keys)‚ùØ feat:     A new feature  fix:      A bug fix  docs:     Documentation only changes  style:    Changes that do not affect themeaning of the code (white-space, formatting,missing semi-colons,","Changes that do not affect themeaning of the code (white-space, formatting,missing semi-colons, etc)The cz command asks a series of questions and then writes your commit message for you.? Select the type of change that you\\\\'re committing: feat:     A new feature? What is the scope of this change (e.g. component or file name): (press enter to skip)? Write a short, imperative tense description of the change (max 63 chars): (61) set up TS type checks, ESLint, Prettier, Commitlint and Husky? Provide a longer description of the change: (press enter to skip) Sets up package.json script to do TS type checks. Sets up Prettier and ESLint with good rules. Configures Husky and sets up Commitizen using the conventional commit standard.? Are there any breaking changes? No? Does this change affect any open issues? No[main eb69ccd] feat(set up static analysis checks): set up TS type checks, ESLint, Prettier, Commitlint and Husky 7 files changed, 3108 insertions(+), 159 deletions(-) create mode","Prettier, Commitlint and Husky 7 files changed, 3108 insertions(+), 159 deletions(-) create mode 100755 .husky/pre-commit create mode 100755 .husky/prepare-commit-msg create mode 100644 commitlint.config.cjsAs you answer all questions, the Husky hooks will automatically run TypeScript type checks and linting.Folder structureThere are usually two popular ways to organize your code: grouping by type or grouping by feature.Group by type looks like this:.‚îú‚îÄ‚îÄ components‚îÇ ‚îú‚îÄ‚îÄ todos‚îÇ ‚îî‚îÄ‚îÄ user‚îú‚îÄ‚îÄ reducers‚îÇ ‚îú‚îÄ‚îÄ todos‚îÇ ‚îî‚îÄ‚îÄ user‚îî‚îÄ‚îÄ tests    ‚îú‚îÄ‚îÄ todos    ‚îî‚îÄ‚îÄ userAnd grouping by feature looks like this:.‚îú‚îÄ‚îÄ todos‚îÇ ‚îú‚îÄ‚îÄ component‚îÇ ‚îú‚îÄ‚îÄ reducer‚îÇ ‚îî‚îÄ‚îÄ test‚îî‚îÄ‚îÄ user    ‚îú‚îÄ‚îÄ component    ‚îú‚îÄ‚îÄ reducer    ‚îî‚îÄ‚îÄ testGrouping files by feature in a project organizes all related components, reducers, and tests together, making it easier to manage and modify each feature. It has the following benefits:Scalability: Large applications are easier to scale and maintain because each feature acts like a mini-application.","applications are easier to scale and maintain because each feature acts like a mini-application. You avoid scrolling up and down in your file list to find all the files you need.Collaboration: Developers can focus on specific features without disrupting others‚Äô work.Onboarding: New developers understand the project structure faster, as all files for a feature are in one place.Refactoring: Updating a feature is streamlined since all its elements are grouped together.Modularity: Features can be reused, shared, or turned into standalone packages more easily.Micro-frontends: If your application ever grows to 30 or more engineers, it is easy to refactor to micro-frontends.Here is a more concrete example.src/‚îú‚îÄ‚îÄ app/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ (group)/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ about/‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ settings/‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ dashboard/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ components/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ header/‚îÇ","‚îî‚îÄ‚îÄ layout.tsx‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ components/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ header/‚îÇ       ‚îú‚îÄ‚îÄ header-component.tsx‚îÇ       ‚îú‚îÄ‚îÄ header-component.test.ts‚îÇ       ‚îî‚îÄ‚îÄ header.module.css‚îú‚îÄ‚îÄ features/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ todos/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-component.tsx‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-component.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-container.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-reducer.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ todos-reducer.test.ts‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ todos-styles.ts‚îÇ   ‚îî‚îÄ‚îÄ user/‚îÇ       ‚îú‚îÄ‚îÄ ...‚îÇ       ‚îú‚îÄ‚îÄ user-reducer.ts‚îÇ       ‚îî‚îÄ‚îÄ user-reducer.test.ts‚îú‚îÄ‚îÄ hocs/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îî‚îÄ‚îÄ with-layout.tsx‚îú‚îÄ‚îÄ hooks/‚îú‚îÄ‚îÄ redux/‚îÇ   ‚îú‚îÄ‚îÄ root-reducer.ts‚îÇ   ‚îú‚îÄ‚îÄ root-saga.ts‚îÇ   ‚îî‚îÄ‚îÄ store.ts‚îú‚îÄ‚îÄ ...‚îî‚îÄ‚îÄ middleware.tsThis example shows you how you can organize your src/ directory. Generally, everything is grouped by feature. Tests files live next to their respective implementation files. But anything that is shared by multiple features is then grouped in general folders, such as components/ or HOCs/ or hooks/. Shared setup for state management - in","in general folders, such as components/ or HOCs/ or hooks/. Shared setup for state management - in this example for Redux - lives in a redux/ folder.Some people also like to group by feature within the app/ folder. Here is how that would look like.src/‚îú‚îÄ‚îÄ app/‚îÇ   ‚îú‚îÄ‚îÄ ...‚îÇ   ‚îú‚îÄ‚îÄ (group)/‚îÇ   ‚îú‚îÄ‚îÄ dashboard/‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ components/‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-header.tsx‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-header.test.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dashboard-widgets.tsx‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ dashboard-widgets.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ services/‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fetch-data.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ fetch-data.test.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ auth-service.ts‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ auth-service.test.ts‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ page.tsx‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ layout.ts‚îÇ   ‚îú‚îÄ‚îÄ layout.tsx‚îÇ   ‚îî‚îÄ‚îÄ page.tsx‚îú‚îÄ‚îÄ ...‚îî‚îÄ‚îÄ middleware.tsIn this tutorial, you‚Äôre going to group files by feature in the first way.VitestIf you want to avoid bugs and prevent regressions, you need to write tests. Vitest is a great choice because it has the same API as the most popular framework, which is Jest, but it runs","great choice because it has the same API as the most popular framework, which is Jest, but it runs faster.Install Vitest.npm install -D vitestAnd configure a testing command in your package.json.\"test\": \"vitest --reporter=verbose\",Then create anexample.test.ts file and write a short test to check to check Vitest works.import { describe, expect, test } from 'vitest';describe('example', () => {  test('given a passing test: passes', () => {    expect(1).toStrictEqual(1);  });});It should pass.$ npm test> nextjs-for-production@0.1.0 test> vitest --reporter=verbose DEV  v2.0.5 /Users/jan/dev/nextjs-for-production ‚úì src/example.test.ts (1)   ‚úì example (1)     ‚úì given a passing test: passes Test Files  1 passed (1)      Tests  1 passed (1)   Start at  14:06:24   Duration  203ms (transform 20ms, setup 0ms, collect 17ms, tests 1ms, environment 0ms, prepare 56ms) PASS  Waiting for file changes...       press h to show help, press q to quitIf you want to learn how you can write better tests,","press h to show help, press q to quitIf you want to learn how you can write better tests, check out this article that teaches you 12 evergreen testing principles that every senior developer should know.React Testing LibraryYou also want to write tests for your React components. For that, you can use the React Testing Library, often abbreviated as RTL.npm install --save-dev @testing-library/react @testing-library/dom @testing-library/jest-dom @testing-library/user-event @types/react @types/react-dom happy-dom @vitejs/plugin-react vite-tsconfig-pathsThen, create a vitest.config.ts file.import react from '@vitejs/plugin-react';import tsconfigPaths from 'vite-tsconfig-paths';import { defineConfig } from 'vitest/config';export default defineConfig({  plugins: [react(), tsconfigPaths()],  server: {    port: 3000,  },  test: {    environment: 'happy-dom',    globals: true,    setupFiles: ['./src/tests/setup-test-environment.ts'],    include:","globals: true,    setupFiles: ['./src/tests/setup-test-environment.ts'],    include: ['./src/**/*.{spec,test}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],    watch: {      ignored: [        String.raw`.*\\\\/node_modules\\\\/.*`,        String.raw`.*\\\\/build\\\\/.*`,        String.raw`.*\\\\/postgres-data\\\\/.*`,      ],    },    coverage: {      reporter: ['text', 'json', 'html'],    },  },});It sets up the development server, specifies testing parameters like that the environment is happy-dom and file paths, and defines coverage report formats.And create a file called src/tests/setup-test-environment.ts to set up your test environment.import '@testing-library/jest-dom/vitest';// See <https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#configuring-your-testing-environment>.// @ts-ignoreglobalThis.IS_REACT_ACT_ENVIRONMENT = true;The first line imports additional assertions, which extend Vitest‚Äôs built-in assertions, allowing you to more easily test DOM nodes. For example, you can check if","built-in assertions, allowing you to more easily test DOM nodes. For example, you can check if an element is visible, has a certain text content, or includes specific attributes.The global environment flag ensures that tests involving state updates work as expected without timing issues.Next, you want to set up a custom render method src/tests/react-test-utils.tsx./* eslint-disable import/export */import type { RenderOptions } from '@testing-library/react';import { render } from '@testing-library/react';import type { ReactElement } from 'react';const customRender = (  ui: ReactElement,  options?: Omit<RenderOptions, 'queries'>,) =>  render(ui, {    wrapper: ({ children }) => <>{children}</>,    ...options,  });// re-export everythingexport * from '@testing-library/react';// override render methodexport { customRender as render };export { default as userEvent } from '@testing-library/user-event';You can use this to wrap your code in providers, for example, when using Redux, or adding","can use this to wrap your code in providers, for example, when using Redux, or adding layouts and styling.Make sure your configuration worked by writing a test for a React component.import { describe, expect, test } from 'vitest';import { render, screen } from '@/tests/react-test-utils';function MyReactComponent() {  return <div>My React Component</div>;}describe('MyReactComponent', () => {  test('given no props: renders a text', () => {    render(<MyReactComponent />);    expect(screen.getByText('My React Component')).toBeInTheDocument();  });});You import render and screen from your test utils file instead of from RTL directly.toBeInTheDocument() is one of those special assertions that you configured earlier in your test environment setup file.It should pass, too. ‚úì src/features/example.test.tsx (1)   ‚úì MyReactComponent (1)     ‚úì given no props: renders a text Test Files  1 passed (1)      Tests  1 passed (1)   Start at  09:33:32   Duration  402ms (transform 24ms, setup 55ms,","(1)      Tests  1 passed (1)   Start at  09:33:32   Duration  402ms (transform 24ms, setup 55ms, collect 87ms, tests 9ms, environment 80ms, prepare 45ms) PASS  Waiting for file changes...       press h to show help, press q to quitStylingNow let‚Äôs talk about styling. The two most important aspects to get right are accessibility and maintainability. One of the most popular libraries out there that nails both of these aspects is Shadcn. It uses Tailwind for streamlined style management and Radix for enhanced accessibility.Initialize Shadcn in your project.$ npx shadcn@latest init‚úî **Which** **style** **would you like to use?** ‚Ä∫ New York‚úî **Which color would you like to use as** **base color****?** ‚Ä∫ Slate‚úî **Would you like to use** **CSS variables** **for colors?** ‚Ä¶ no / yes‚úî Writing components.json...‚úî Initializing project...‚úî Installing dependencies...Success! Project initialization completed. You may now add components.$ npx shadcn@latest init‚úî **Which** **style** **would you like","You may now add components.$ npx shadcn@latest init‚úî **Which** **style** **would you like to use?** ‚Ä∫ New York‚úî **Which color would you like to use as** **base color****?** ‚Ä∫ Slate‚úî **Would you like to use** **CSS variables** **for colors?** ‚Ä¶ no / yes‚úî Writing components.json‚Ä¶‚úî Initializing project‚Ä¶‚úî Installing dependencies‚Ä¶Success! Project initialization completed. You may now add components.npx shadcn@latest add cardInternationalizationAs your app scales, you want to translate it to multiple languages, so it can reach more users.And adding internationalization ‚Äî or i18n ‚Äî in a later cycle of an app, can be a pain because you‚Äôll have to find all hardcoded strings and replace them with translation function calls.Install negotiator and a locale matcher.npm install negotiator @formatjs/intl-localematcherThe @formatjs/intl-localematcher package selects the best language for your app's content based on a user's language preferences. The negotiator package helps your app to figure out","content based on a user's language preferences. The negotiator package helps your app to figure out what type of content (like language or format) your user's browser can handle best, based on the information the browser sends.You‚Äôll also need to install the TypeScript types for the negotiator package.npm install --save-dev @types/negotiatorThen, create your i18n config in a new file at @src/features.internationalization/il8n-config.ts.import { match } from '@formatjs/intl-localematcher';import Negotiator from 'negotiator';import { type NextRequest, NextResponse } from 'next/server';import { i18n } from './i18n-config';function getLocale(request: NextRequest) {  const headers = {    'accept-language': request.headers.get('accept-language') ?? '',  };  const languages = new Negotiator({ headers }).languages();  return match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const","localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const pathnameHasLocale = i18n.locales.some(    locale => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`,  );  if (pathnameHasLocale) {    return;  }  const locale = getLocale(request);  request.nextUrl.pathname = `/${locale}${pathname}`;  return NextResponse.redirect(request.nextUrl);}Use that il8n config, in your localization-middleware at src/features/internationalization/localization-middleware.ts .import { match } from '@formatjs/intl-localematcher';import Negotiator from 'negotiator';import { type NextRequest, NextResponse } from 'next/server';import { i18n } from './i18n-config';function getLocale(request: NextRequest) {  const headers = {    'accept-language': request.headers.get('accept-language') ?? '',  };  const languages = new Negotiator({ headers }).languages();  return match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request:","match(languages, i18n.locales, i18n.defaultLocale);}export function localizationMiddleware(request: NextRequest) {  const { pathname } = request.nextUrl;  const pathnameHasLocale = i18n.locales.some(    locale => pathname.startsWith(`/${locale}/`) || pathname === `/${locale}`,  );  if (pathnameHasLocale) {    return;  }  const locale = getLocale(request);  request.nextUrl.pathname = `/${locale}${pathname}`;  return NextResponse.redirect(request.nextUrl);}The purpose of this middleware is to automatically detect and redirect your users to the appropriate language version of the website based on their browser language preferences.Then create a middleware file src/middleware.ts in the root of your project, and use your localization middleware there.import { NextRequest } from 'next/server';import { localizationMiddleware } from './features/internationalization/localization-middleware';// Matcher ignoring `/_next/` and `/api/` and svg files.export const config = { matcher:","Matcher ignoring `/_next/` and `/api/` and svg files.export const config = { matcher: ['/((?!api|_next|.*.svg$).*)'] };export function middleware(request: NextRequest) {  return localizationMiddleware(request);}It‚Äôs time to add your translations. Create a json dictionary for your English translations at src/features/internalization/dictionaries/en-us.json.{  \"counter\": {    \"decrement\": \"Decrement\",    \"increment\": \"Increment\"  },  \"landing\": {    \"welcome\": \"Welcome\"  }}And then, create a file src/features/internalization/get-dictionaries.ts for your getDictionary function.import \"server-only\";import type { Locale } from \"./i18n-config\";// We enumerate all dictionaries here for better linting and typescript support.// We also get the default import for cleaner types.const dictionaries = {  \"en-US\": () => import(\"./dictionaries/en-US.json\").then((module) => module.default),};export const getDictionary = async (locale: Locale) =>  dictionaries[locale]?.() ?? dictionaries[\"en-US\"]();It","getDictionary = async (locale: Locale) =>  dictionaries[locale]?.() ?? dictionaries[\"en-US\"]();It takes in a locale and then returns the respective dictionary.If you want to add a hook that lets your users pick their language, it can look like this.import { usePathname } from 'next/navigation';import { Locale } from './i18n-config';export function useSwitchLocaleHref() {  const pathName = usePathname();  const getSwitchLocaleHref = (locale: Locale) => {    if (!pathName) return '/';    const segments = pathName.split('/');    segments[1] = locale;    return segments.join('/');  };  return getSwitchLocaleHref;}And then you can use that hook in a component, and use it‚Äôs return value in a <Link/> like this.<Link href={getSwitchLocaleHref(locale)}>{locale}</Link>Change your URL structure to support i18n. Create a new folder [lang] in your app/ folder, which creates a dynamic segment for the language.Move your page.tsx and layout.tsx files into that folder, and modify the layout to set the","language.Move your page.tsx and layout.tsx files into that folder, and modify the layout to set the correct language on the <html /> tag.import '../globals.css';import type { Metadata } from 'next';import { Inter } from 'next/font/google';import { Locale } from '@/features/internationalization/i18n-config';const inter = Inter({ subsets: ['latin'] });export const metadata: Metadata = {  title: \"Jan Hesters' Next.js for production tutorial\",  description: 'Brought to you by ReactSquad.io',};export default function RootLayout({  children,  params,}: Readonly<{  children: React.ReactNode;  params: { lang: Locale };}>) {  return (    <html lang={params.lang}>      <body className={inter.className}>{children}</body>    </html>  );}Going forward, you can use the getDictionary function in any server component.import { getDictionary } from '@/features/internationalization/get-dictionaries';import { Locale } from '@/features/internationalization/i18n-config';import { CounterComponent } from","{ Locale } from '@/features/internationalization/i18n-config';import { CounterComponent } from './counter-component';export default async function IndexPage({  params: { lang },}: {  params: { lang: Locale };}) {  const dictionary = await getDictionary(lang);  return (    <div>      <p>Current locale: {lang}</p>      <p>This text is rendered on the server: {dictionary.landing.welcome}</p>      <CounterComponent dictionary={dictionary.counter} />    </div>  );}For client components, you‚Äôll want to pass in the respective dictionary instead.'use client';import { useState } from 'react';import type { getDictionary } from '@/features/internationalization/get-dictionaries';export function CounterComponent({  dictionary,}: {  dictionary: Awaited<ReturnType<typeof getDictionary>>['counter'];}) {  const [count, setCount] = useState(0);  return (    <p>      This component is rendered on the client:      <button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>","<button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>      {count}      <button onClick={() => setCount(n => n + 1)}>        {dictionary.increment}      </button>    </p>  );}'use client';import { useState } from 'react';import type { getDictionary } from '@/features/internationalization/get-dictionaries';export function CounterComponent({  dictionary,}: {  dictionary: Awaited<ReturnType<typeof getDictionary>>['counter'];}) {  const [count, setCount] = useState(0);  return (    <p>      This component is rendered on the client:      <button onClick={() => setCount(n => n - 1)}>        {dictionary.decrement}      </button>      {count}      <button onClick={() => setCount(n => n + 1)}>        {dictionary.increment}      </button>    </p>  );}DatabaseThis tutorial is going to use Postgres for its database because it is well battle-tested, but you‚Äôre going to use the Prisma ORM to abstract away the database layer. This gives you the flexibility","going to use the Prisma ORM to abstract away the database layer. This gives you the flexibility to use a variety of databases, and simplifies the API that you use to interact with it.npm install prisma --save-devYou‚Äôll also need to install the Prisma client.npm install @prisma/clientInitialize Prisma.npx prisma initThis auto-generates yourprisma/schema.prisma file.generator client {  provider = \"prisma-client-js\"}datasource db {  provider = \"postgresql\"  // Uses connection pooling  url = env(\"DATABASE_URL\")}model UserProfile {  id                         String   @id @default(cuid())  createdAt                  DateTime @default(now())  updatedAt                  DateTime @updatedAt  email                      String   @unique  name                       String   @default(\"\")  acceptedTermsAndConditions Boolean  @default(false)}Add a aUserProfile model to it, which has an email and a name and a boolean whether they accepted your terms and conditions.If you ran npx prisma init, rename","and a boolean whether they accepted your terms and conditions.If you ran npx prisma init, rename your .env file to .env.local, otherwise create it and make sure it contains the credentials for your Prisma database.DATABASE_URL=\"postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public\"Now create a src/lib/prisma.ts file, which will contain your Prisma client connection.import { PrismaClient } from '@prisma/client';declare global {  var __database__: PrismaClient;}let prisma: PrismaClient;if (process.env.NODE_ENV === 'production') {  prisma = new PrismaClient();} else {  if (!global.__database__) {    global.__database__ = new PrismaClient();  }  prisma = global.__database__;}export default prisma;The re-assignment ensures that in a non-production environment (like during development or testing), only one instance of the Prisma client is created and reused across the entire application. This approach prevents the overhead of repeatedly initializing new connections to the","application. This approach prevents the overhead of repeatedly initializing new connections to the database every time a module that needs database access is imported.Modify your package.json to include the following helper commands for Prisma.\"prisma:deploy\": \"npx prisma migrate deploy && npx prisma generate\",\"prisma:migrate\": \"npx prisma migrate dev --name\",\"prisma:push\": \"npx prisma db push && npx prisma generate\",\"prisma:reset-dev\": \"run-s prisma:wipe prisma:seed dev\",\"prisma:seed\": \"tsx ./prisma/seed.ts\",\"prisma:setup\": \"prisma generate && prisma migrate deploy && prisma db push\",\"prisma:studio\": \"npx prisma studio\",\"prisma:wipe\": \"npx prisma migrate reset --force && npx prisma db push\",Some of these commands use the run-s, tsxand dotenvpackages, which you‚Äôll need to install.npm install --save-dev npm-run-all tsx dotenvHere‚Äôs an explanation of each Prisma command:‚Äúprisma:deploy‚Äù: Deploys database migrations and generates Prisma Client. It runs migrations on production databases","Deploys database migrations and generates Prisma Client. It runs migrations on production databases and updates the client API.‚Äúprisma:migrate‚Äù: Creates a new migration from changes in the Prisma schema, applying it in the development environment. You must specify a name for the migration after the command.‚Äúprisma:push‚Äù: Pushes the schema changes directly to the database and updates the Prisma Client. Useful for prototyping without creating migration files.‚Äúprisma:reset-dev‚Äù: Resets the development database by wiping it, re-seeding it, and applying migrations in development mode.‚Äúprisma:seed‚Äù: Runs a TypeScript seed script to populate the database with initial data.‚Äúprisma:setup‚Äù: Generates the Prisma Client, deploys migrations to the database, and pushes the schema to the database.‚Äúprisma:studio‚Äù: Opens Prisma Studio, a GUI for viewing and editing the database records.‚Äúprisma:wipe‚Äù: Resets the database by forcefully dropping all data and migrations and then pushes the schema","Resets the database by forcefully dropping all data and migrations and then pushes the schema changes.npm run prisma:setupIf your Prisma doesn‚Äôt recognize your .env.local, set your environment variable manually in your terminal. On Mac, this can be done using theexport command.export DATABASE_URL=\"postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public\"Create a primsa/seed.ts. You can use it to seed your database with data for development.import { exit } from 'node:process';import { PrismaClient } from '@prisma/client';import dotenv from 'dotenv';dotenv.config({ path: '.env.local' });const prisma = new PrismaClient();const prettyPrint = (object: any) =>  console.log(JSON.stringify(object, undefined, 2));async function seed() {  const user = await prisma.userProfile.create({    data: {      email: 'jan@reactsquad.io',      name: 'Jan Hesters',      acceptedTermsAndConditions: true,    },  });  console.log('========= üå± result of seed: =========');  prettyPrint({ user","true,    },  });  console.log('========= üå± result of seed: =========');  prettyPrint({ user });}seed()  .then(async () => {    await prisma.$disconnect();  })  // eslint-disable-next-line unicorn/prefer-top-level-await  .catch(async error => {    console.error(error);    await prisma.$disconnect();    exit(1);  });If you run it, it‚Äôll create your user.$ npm run prisma:seed> reactsquad-production@0.1.0 prisma:seed> tsx ./prisma/seed.ts========= üå± result of seed: ========={  \"user\": {    \"id\": \"clzekb5sp0000ock9gsp72p33\",    \"createdAt\": \"2024-08-03T20:04:27.289Z\",    \"updatedAt\": \"2024-08-03T20:04:27.289Z\",    \"email\": \"jan@reactsquad.io\",    \"name\": \"Jan Hesters\",    \"acceptedTermsAndConditions\": true  }}In your server components, you can use prisma to fetch any data.import prisma from '@/lib/prisma';import {  Card,  CardContent,  CardHeader,  CardTitle,} from '@/components/ui/card';export default async function Dashboard() {  const user = await prisma.userProfile.findUnique({","default async function Dashboard() {  const user = await prisma.userProfile.findUnique({    where: { email: 'jan@reactsquad.io' },  });  return (    <Card className=\"max-w-md mx-auto\">      <CardHeader>        <CardTitle>User Profile</Card.Title>      </CardHeader>      <CardContent>        {user ? (          <ul>            <li>Name: {user.name}</li>            <li>Email: {user.email}</li>          </ul>        ) : (          <p>User not found.</p>        )}      </CardContent>    </Card>  );}Use FacadesIt‚Äôs a good idea to abstract away your database calls using facades. A facade is a design pattern where you provide a simplified interface to a complex subsystem.Create a file that contains all facades related to your user profile model features/user-profile/user-profile-model.ts.import { UserProfile } from '@prisma/client';import prisma from '@/lib/prisma';export async function retrieveUserProfileFromDatabaseByEmail(  email: UserProfile['email'],) {  return await","function retrieveUserProfileFromDatabaseByEmail(  email: UserProfile['email'],) {  return await prisma.userProfile.findUnique({ where: { email } });}There are two main reasons for using facades.Increase vendor resistance ‚Äî You can switch third-party providers easily. For example, you might switch from Firebase to Supabase or vice versa. Instead of updating your whole codebase to reflect the change, you only update the facade.Simplify your code ‚Äî A facade can reduce the code you need to write in your application because it reduces the API to your specific application needs. Simultaneously, it makes your code easier to understand because you can give the facade descriptive names.Then use your facade in your server component.import { retrieveUserProfileFromDatabaseByEmail } from '@/features/user-profiles/user-profiles-model';import {  Card,  CardContent,  CardHeader,  CardTitle,} from '@/components/ui/card';export default async function Dashboard() {  const user =    await","from '@/components/ui/card';export default async function Dashboard() {  const user =    await retrieveUserProfileFromDatabaseByEmail('jan@reactsquad.io');  return (    <Card className=\"max-w-md mx-auto\">      <CardHeader>        <CardTitle>User Profile</Card.Title>      </CardHeader>      <CardContent>        {user ? (          <ul>            <li>Name: {user.name}</li>            <li>Email: {user.email}</li>          </ul>        ) : (          <p>User not found.</p>        )}      </CardContent>    </Card>  );}Vercel PostgresYou can use Vercel Postgres for your production deployment. They have an easy to follow guide, which you can check out in the Vercel documentation. But here are the steps real quick for your convenience.To set up a database in your Vercel project, follow these steps:Go to the Storage tab and click the Create Database button.When the Browse Storage modal opens, choose Postgres and click Continue.For creating a new database:In the dialog box, type","modal opens, choose Postgres and click Continue.For creating a new database:In the dialog box, type sample_postgres_db (or a name you prefer) in the Store Name field. Ensure the name has only alphanumeric characters, \"_\" or \"-\", and does not exceed 32 characters.Choose a region. For lower latency, select a region close to your function region, which is US East by default.Click Create.Then you‚Äôll need to add POSTGRES_URL_NON_POOLING to the datasource in your Prisma schema.datasource db {  provider  = \"postgresql\"  // Uses connection pooling  url       = env(\"DATABASE_URL\")  // Uses direct connection, ‚ö†Ô∏è make sure to keep this to `POSTGRES_URL_NON_POOLING`  // or you'll have dangling databases from migrations  directUrl = env(\"POSTGRES_URL_NON_POOLING\")}Vercel uses connection poolers, which manage a pool of database connections that can be reused by different parts of an application, rather than establishing a new connection for each database request. The directUrl property is used to","than establishing a new connection for each database request. The directUrl property is used to ensure operations requiring direct database access, such as migrations, can bypass the connection pooler for reliable execution.You can get the environment variables for your Vercel database by pulling them from Vercel.vercel env pull .envPlaywrightYou also want to use E2E tests because E2E tests give you the most confidence that your app works as intended. E2E tests are skipped far too often, but you really should make it a habit to write them. The benefits are compounding.Initialize Playwright.$ npm init playwright@latestGetting started with writing end-to-end tests with Playwright:Initializing project in '.'‚úî Where to put your end-to-end tests? ¬∑ playwright‚úî Add a GitHub Actions workflow? (y/N) ¬∑ false‚úî Install Playwright browsers (can be done manually via 'npx playwright install')? (Y/n) ¬∑ trueIf this is your first time using Playwright, you can have a look through the test-examples/","¬∑ trueIf this is your first time using Playwright, you can have a look through the test-examples/ folder that the initialization script creates, and then deleted it because you won't need it.Modify the webServer key in your playwright.config.ts file.webServer: {  command: process.env.CI ? 'npm run build && npm run start' : 'npm run dev',  port: 3000,},Add two scripts for your E2E tests to your package.json.\"test:e2e\": \"npx playwright test\",\"test:e2e:ui\": \"npx playwright test --ui\",The first one runs your Playwright test in headless mode, while the second one runs your test in UI mode, which gives you time travel debugging, watch mode and more.import { expect, test } from '@playwright/test';test.describe('landing page', () => {  test('given any user: shows the test user', async ({ page }) => {    await page.goto('/');    await expect(page.getByText('Jan Hesters')).toBeVisible();    await expect(page.getByText('jan@reactsquad.io')).toBeVisible();  });});Run your tests to check that your","expect(page.getByText('jan@reactsquad.io')).toBeVisible();  });});Run your tests to check that your Playwright setup worked.$ npm run test:e2e> reactsquad-production@0.1.0 test:e2e> npx playwright testRunning 3 tests using 3 workers  3 passed (3.9s)It ran three tests because by default Playwright is configured to run in Chrome, Safari, and Firefox.GitHub ActionsIt‚Äôs good practice to run your app with CI/CD. CI/CD stands for continuous delivery and continuous deployment.Add a secret for your database URL to your repository‚Äôs settings in GitHub.DATABASE_URL=\"postgresql://postgres:postgres@localhost:5432/testdb\"Then create your GitHub Actions YAML configuration in a .github/workflows/pull-request.yml file for a comprehensive CI/CD pipeline including linting, type checking, testing, and more.name: Pull Requeston: [pull_request]jobs:  lint:    name: ‚¨£ ESLint    runs-on: ubuntu-latest    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node","- name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üî¨ Lint        run: npm run lint  type-check:    name:  ¶ TypeScript    runs-on: ubuntu-latest    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üîé Type check        run: npm run type-check --if-present  commitlint:    name: ‚öôÔ∏è commitlint    runs-on: ubuntu-latest    if: github.actor != 'dependabot[bot]'    env:      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3        with:          fetch-depth: 0      - name: ‚öôÔ∏è commitlint        uses: wagoid/commitlint-github-action@v4  vitest:","0      - name: ‚öôÔ∏è commitlint        uses: wagoid/commitlint-github-action@v4  vitest:    name: ‚ö° Vitest    runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:          POSTGRES_USER: postgres          POSTGRES_PASSWORD: postgres          POSTGRES_DB: testdb        ports:          - 5432:5432    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üõ† Setup Database        run: npm run prisma:wipe        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: ‚ö° Run vitest        run: npm run test -- --coverage        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb  playwright:    name: üé≠ Playwright    runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:","runs-on: ubuntu-latest    services:      postgres:        image: postgres:12        env:          POSTGRES_USER: postgres          POSTGRES_PASSWORD: postgres          POSTGRES_DB: testdb        ports:          - 5432:5432    steps:      - name: ‚¨áÔ∏è Checkout repo        uses: actions/checkout@v3      - name: ‚éî Setup node        uses: actions/setup-node@v3        with:          node-version: 20      - name: üì• Download deps        uses: bahmutov/npm-install@v1      - name: üåê Install Playwright Browsers        run: npx playwright install --with-deps      - name: üõ† Setup Database        run: npm run prisma:wipe        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: üé≠ Playwright Run        run: npx playwright test        env:          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb      - name: üì∏ Playwright Screenshots        uses: actions/upload-artifact@v4        if: failure()        with:          name: playwright-report","uses: actions/upload-artifact@v4        if: failure()        with:          name: playwright-report          path: playwright-report/          retention-days: 30Now every time you make a pull request to your app, it automatically runs your tests to ensure it works, runs TypeScript type checks and lints it, so that everyone contributes code with the same formatting.NextjsJavaScriptNextjs 15Tutorial----18FollowWritten by Jan Hesters1K Followers¬∑10 FollowingSubscribe on YouTube: https://www.youtube.com/@JanHesters Follow on X: https://x.com/janhesters Ask better questions.FollowResponses (18)See all responsesHelpStatusAboutCareersPressBlogPrivacyRulesTermsText to speech"],"metadata":[{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":0,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":899,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":1798,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":2696,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":3586,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":4495,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":5386,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":6282,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":7180,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":8077,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":8980,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":9878,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":10779,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":11681,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":12576,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":13476,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":14382,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":15246,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":16148,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":17060,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":17956,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":18865,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":19761,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":20658,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":21557,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":22455,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":23356,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":24256,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":25157,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":26065,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":26962,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":27864,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":28762,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":29660,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":30557,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":31459,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":32362,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":33245,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":34135,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":35019,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":35921,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":36820,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":37720,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":38627,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":39532,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":40442,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"},{"description":"I‚Äôve worked on Next.js applications that scaled to over 100k monthly active users and landing pages with millions of monthly visitors. In this article, I‚Äôll share all the lessons I‚Äôve learned through‚Ä¶","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://medium.com/@jan.hesters/how-to-set-up-next-js-15-for-production-in-2024-347f542922b4","start_index":41339,"title":"How to Set Up Next.js 15 for Production in 2024 | by Jan Hesters | Medium"}]},{"source":{"collection_name":"web-search-7e61da16dfb0eee755f1fdf3a65681db0273b0c36d70b2d004e3","name":"how to create a next.js 15 app with react 19 using npx create scripts","type":"web_search","urls":["https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972"]},"document":["How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkip to content\n\n\n\nNavigation menu\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch\n\n\n\n\n                Powered by\n                Search\n\n\n\n                Algolia\n            \n\n\n\n\n\n\n\n\n              Log in\n            \n\n\n            Create account\n          \n\n\n\n\n\n\n\nDEV Community\n\nClose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        Add reaction\n      \n\n\n\n\n\n\n\n\n\n      Like\n    \n\n\n\n\n\n\n\n      Unicorn\n    \n\n\n\n\n\n\n\n      Exploding Head\n    \n\n\n\n\n\n\n\n      Raised Hands\n    \n\n\n\n\n\n\n\n      Fire\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Jump to Comments\n    \n\n\n\n\n\n\n\n\n\n      Save\n    \n\n\n\n\n\n\n\n\n      Boost\n    \n\n\n\n\n\n\n\nMore...\n\n\n\n\n            Moderate\n          \n\n\n\nCopy link\nCopy link\n\n\n\nCopied to Clipboard\n\n\n\n            Share to X\n          \n\n            Share to LinkedIn\n          \n\n            Share to Facebook","Share to LinkedIn\n          \n\n            Share to Facebook\n          \n\n            Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRoberto B.\n\n                      Posted on Nov 23, 2024\n\n                      ‚Ä¢ Edited on Dec 20, 2024\n\n\n\n\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n              How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript)\n            \n\n#nextjs\n#react\n#storyblok\n#bunjs\n\n\n\n\n\nIn this article, I would like to share with you how to create a dynamic web app with Next.js 15's App Router, React 19, and the Storyblok CMS, all powered by Bun for lightning-fast performance. This comprehensive guide walks you through setup, integration, and rendering dynamic content‚Äîperfect for modern developers.\n\nHere, I created a minimalistic Nextjs template application to integrate Storyblok. You can read more in the README: https://github.com/roberto-butti/my-nextjs15-approuter-storyblok","Key takeaways from this guide\n\n\nLearn how to set up a new Next.js app using Bun as the runtime, bundler, and package manager.\nInstall and configure the latest Storyblok React SDK for seamless CMS integration.\nUnderstand how to manage your Storyblok API token securely using environment variables.\nDiscover how to fetch data from Storyblok and render it dynamically with Next.js 15's App Router.\nEnable the Storyblok Visual Editor for an enhanced content editing experience.\n\nBonus: Explore how to use TypeScript definitions for strongly typed Storyblok components.\n\n\n\n\n  The tools\n\nIn this article, we‚Äôre combining some of the most cutting-edge tools in web development to create a powerful, efficient, and scalable web project:","Bun: more than just a runtime, Bun simplifies JavaScript development with lightning-fast performance, a built-in bundler, and an efficient package manager, an all-in-one tool. It's designed to save developers time while delivering exceptional speed.\nStoryblok: as a headless CMS, Storyblok provides a flexible and user-friendly platform for managing content. With its Visual Editor and robust API, it empowers developers to integrate content dynamically while giving content creators an intuitive interface to work with.\nNext.js App Router: the App Router in Next.js 15 unlocks the full potential of React Server Components, offering an innovative way to handle dynamic routing. It enables seamless integration of server-side and client-side rendering, improving performance and developer experience.\n\n\n\n\n  Set up your Next.js 15 project\n\nUsing Bun's command-line utility, create a Next.js 15 project:\n\n\nbunx create-next-app@latest\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","bunx create-next-app@latest\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nThe latest keyword will allow you to create a Next.js 15 project. If, for some reason, you prefer to use the Next.js 14 you can use 14 keyword instead of latest\n\nExecuting the create-next-app command, you need to answer some questions. For starting a basic project with TypeScript, here the options:\n‚úî What is your project named? my-nextjs15-storyblok\n‚úî Would you like to use TypeScript? Yes\n‚úî Would you like to use ESLint? No\n‚úî Would you like to use Tailwind CSS? No\n‚úî Would you like your code inside a src/ directory? Yes\n‚úî Would you like to use App Router? (recommended) Yes\n‚úî Would you like to use Turbopack for next dev? No\n‚úî Would you like to customize the import alias (@/* by default)? No\nOnce the command is executed, you can jump into the new directory my-nextjs15-storyblok where you can find your Next.js project with all the dependencies already installed.\n\n\ncd my-nextjs15-storyblok","cd my-nextjs15-storyblok\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Enabling the HTTPS\n\nFor checking and testing the installation and starting the HTTPS protocol, you can use the dev script using the experimental HTTPS option:\n\n\nbun run dev --experimental-https\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAs a developer, you should start a local HTTPS server when working with the Storyblok Visual Editor because the editor requires a secure connection to function correctly. Here's why:","Browser security requirements: modern browsers enforce strict security protocols for features like iframe communication, which the Visual Editor relies on. HTTPS ensures that the content loaded in the iframe (your local app) is secure and trusted, enabling the Visual Editor to work seamlessly.\nMatching production environments: most production environments use HTTPS for secure communication. Running your local development server over HTTPS mirrors this setup, helping you catch potential issues early, such as mixed content warnings or problems with third-party integrations.\nStoryblok‚Äôs integration policies: Storyblok‚Äôs Visual Editor is designed to work with secure connections, ensuring that the embedded content and API requests are encrypted. Without HTTPS, the Visual Editor might not function as intended or could block certain features.\n\n\n\n\n  Install Storyblok React SDK v4\n\nTo integrate Storyblok, install its Storyblok React SDK:\n\n\nbun add @storyblok/react@4\n\n\n\nEnter fullscreen mode","bun add @storyblok/react@4\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis SDK (version 4) is fully compatible with Next.js 15 and supports the App Router's features.\n\n\n\n  Configure Storyblok\n\nSign in to Storyblok, create a space, and copy the API token (the Preview access token) from the \"Settings -> Access Tokens\" section.\nIf you are not familiar with creating space with Storyblok, here are some links:\n\nCreating a space in Storyblok (yes, you can use the Community Plan for free): https://www.storyblok.com/docs/guide/getting-started\n\nHow to retrieve and generate access tokens: https://www.storyblok.com/faq/retrieve-and-generate-access-tokens\n\n\nWe can set up the environment variables once you have your preview access token.\nIn your project root, create a .env.local file, and add:\n\n\nNEXT_PUBLIC_STORYBLOK_TOKEN=your_token_here\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","NEXT_PUBLIC_STORYBLOK_TOKEN=your_token_here\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nSo now you have your Storyblok SDK installed and your access token set up. Now, we can initialize the Storyblok connection in our Next.js project,\n\n\n\n  Initialize Storyblok in our project\n\nInitialize Storyblok and register components in a src/lib/storyblok.ts file:\n\n\nimport DefaultPage from '@/components/DefaultPage';\nimport Teaser from '@/components/Teaser';\nimport HeroSection from '@/components/HeroSection';\nimport FallbackComponent from '@/components/FallbackComponent';\nimport { apiPlugin, storyblokInit } from '@storyblok/react/rsc';\n\nexport const getStoryblokApi = storyblokInit({\n  accessToken: process.env.NEXT_PUBLIC_STORYBLOK_TOKEN,\n  use: [apiPlugin],\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n  enableFallbackComponent: true,\n  customFallbackComponent: FallbackComponent,\n});\n\n\n\nEnter fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis code snippet demonstrates how to initialize Storyblok in a React application, set up components for dynamic rendering, enable API integration, and configure a fallback component. Here's a breakdown:\n\n\n\n  Imports\n\n\nimport DefaultPage from '@/components/DefaultPage';\nimport Teaser from '@/components/Teaser';\nimport HeroSection from '@/components/HeroSection';\nimport FallbackComponent from '@/components/FallbackComponent';\nimport { apiPlugin, storyblokInit } from '@storyblok/react/rsc';\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nComponent Imports: these imports include your custom React components (DefaultPage, Teaser, HeroSection, and FallbackComponent), which will be rendered dynamically based on Storyblok content.\nStoryblok features:\n\n\n\nstoryblokInit: Initializes Storyblok in the app.\n\napiPlugin: A plugin that allows API interaction with Storyblok.\n\n\n\n\n\n\n\n  Storyblok Initialization","apiPlugin: A plugin that allows API interaction with Storyblok.\n\n\n\n\n\n\n\n  Storyblok Initialization\n\n\nexport const getStoryblokApi = storyblokInit({\n  accessToken: process.env.NEXT_PUBLIC_STORYBLOK_TOKEN,\n  use: [apiPlugin],\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n  enableFallbackComponent: true,\n  customFallbackComponent: FallbackComponent,\n});\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\naccessToken: the accessToken is retrieved from an environment variable (NEXT_PUBLIC_STORYBLOK_TOKEN), ensuring secure access to your Storyblok space.\n\nuse: the apiPlugin is registered to enable fetching content from Storyblok's API.","use: the apiPlugin is registered to enable fetching content from Storyblok's API.\n\ncomponents: this object maps Storyblok content types (defined in your space, such as teaser, default-page, and hero-section) to their corresponding React components (Teaser, DefaultPage, and HeroSection). This ensures that the correct component is rendered based on the content type name or the component name.\n\nenableFallbackComponent: when set to true, this enables using a fallback component if a component is not mapped or recognized.\n\ncustomFallbackComponent: specifies a custom component (FallbackComponent) to display as the fallback. This is helpful for gracefully handling unmapped or unexpected content, such as showing an error message or placeholder content.\n\n\n\n\n\n  Exported Function\n\n\nexport const getStoryblokApi = storyblokInit({...});\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis function initializes Storyblok and provides access to its API, allowing your application to interact with Storyblok's content delivery system dynamically.\n\n\n\n  Load Storyblok provider\n\nIn src/components/StoryblokProvider.tsx file you can initialize the Storyblok client:\n\n\n'use client';\n\nimport { getStoryblokApi } from '@/lib/storyblok';\n\nexport default function StoryblokProvider({ children }: any) {\n  getStoryblokApi(); // Re-initialize on the client\n  return children;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThen, in the src/app/layout.tsx file, you can load the StoryblokProvider:\n\n\nimport type { Metadata } from \"next\";\nimport StoryblokProvider from '@/components/StoryblokProvider';\n\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};","export default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <StoryblokProvider>\n    <html lang=\"en\">\n      <body>\n        {children}\n      </body>\n    </html>\n    </StoryblokProvider>\n  );\n}\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Set Up the App Router with a catch-all route\n\nNext.js 15‚Äôs App Router uses a file-based routing system powered by the app directory. Let‚Äôs set up dynamic routes for Storyblok content.\nWe are going to create a \"catch-all\" route for creating the page.tsx file into the src/app/[slug]/ directory.\nThe src/app/[slug]/page.tsx file can be:\n\n\nimport styles from \"../page.module.css\";\nimport { getStoryblokApi } from '@/lib/storyblok';\nimport { StoryblokStory } from '@storyblok/react/rsc';\n\nasync function fetchData(slug: string) {\n  const storyblokApi = getStoryblokApi();\n  return storyblokApi.get('cdn/stories/' + slug, { version: 'draft' });\n}","export default async function StoryPage({params}\n  : {\n    params: Promise<{ slug: string }>\n  }) {\n  const slug = (await params).slug\n  console.log(slug)\n  const { data } = await fetchData(slug);\n\n  return (\n    <div>\n      <StoryblokStory story={data.story} />\n    </div>\n  );\n}\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Creating frontend components\n\n\n\n\n  The Content-Type component\n\nFirst, you can create the frontend component to render the Storyblok content type. For example, I have the default-page Storyblok content type mapped into the DefaultPage React component (via the storyblok.ts file):\nThe src/components/DefaultPage.tsx file:\n\n\nimport { storyblokEditable, StoryblokServerComponent } from '@storyblok/react/rsc';\n\nexport default function DefaultPage({ blok }: any) {\n  return   <main {...storyblokEditable(blok)}>\n    {blok.body.map((nestedBlok: any) => (\n      <StoryblokServerComponent blok={nestedBlok} key={nestedBlok._uid} />\n    ))}\n  </main>\n}","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\nFor now I'm using any for defining the type of the data. Later we will see how to improve this code for a better type checking.\n\n\n\n\n  The fallback component\n\nStoryblok is very flexible. The Storyblok SDK via the StoryblokServerComponent and the StoryblokStory React components load dynamically React components based on the structure and the nested components defined in Storyblok. If a React component is not yet implemented on the frontend side, a fallback component can be loaded as a placeholder. The configuration of the fallback behavior is in our src/lib/storyblok.ts file in the storyblokInit function via:\n\n\nenableFallbackComponent: true,\ncustomFallbackComponent: FallbackComponent,\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nSo, the fallback component is in src/components/FallbackComponent.tsx:\n\n\nimport { storyblokEditable } from '@storyblok/react/rsc';","import { storyblokEditable } from '@storyblok/react/rsc';\n\nconst FallbackComponent = ({ blok }: any) => {\n  return (\n    <h2 data-cy=\"fallback\" {...storyblokEditable(blok)}>\n      This component does not exists: {blok.component }\n    </h2>\n  );\n};\n\nexport default FallbackComponent;\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n  Your first Nestable component\n\nFor example, if you have a teaser Nestable component in Storyblok with a field named headline you can:\n\nload the components in the storyblokInit function in the src/lib/storyblok.ts file.\n\n\n\n  components: {\n    teaser: Teaser,\n    \"default-page\": DefaultPage,\n    \"hero-section\": HeroSection,\n  },\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\ncreate your component in src/components/Teaser.tsx:\n\n\n\nexport default function Teaser({ blok }: any) {\n  return <>\n    { blok.headline }\n  </>;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAs you can see, we use the any type definition extensively in the components and input arguments. Now, we want to improve the type definitions to enhance type checking.\n\n\n\n  BONUS: using TypeScript and automatic generation of type definitions\n\nAs you can notice, probably your editor (I'm using Zed editor) will highlight some TypeScript warning for the type checking.\nNow we are going to solve this issue, generating automatically all the types and the interfaces needed by your project, based on the component structure defined in Storyblok. Amazing!\nI strongly recommend installing and using the Storyblok CLI. If you're exploring or actively using Storyblok, investing time to learn this powerful command-line tool is highly worthwhile. It's like a Swiss Army knife for Storyblok, offering a wide range of functionalities to manage content and components efficiently. One standout feature is its ability to generate type definitions.","More info about Storyblok CLI : https://www.storyblok.com/tp/storyblok-cli-best-practices#generating-types\n\nFirst, you have to export the component JSON structure into a JSON file:\n\n\nstoryblok pull-components --space <your-space-id>\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nReplace <your-space-id> with your Space ID.\nThen, once you have the file , typically components.<your-space-id>.json, you can generate the d.ts file,:\n\n\nstoryblok generate-typescript-typedefs --sourceFilePaths ./components.<your-space-id>.json --destinationFilePath ./src/components/component-types-sb.d.ts\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nIf you take a look of your component-types-sb.d.ts file you will see a lot of auto-generated types and interfaces.\nFor example:","export interface HeroSectionStoryblok {\n  headline?: string;\n  overlay?: number | string;\n  text_color?: \"light\" | \"dark\";\n  subheadline?: string;\n  buttons?: ButtonStoryblok[];\n  horizontal_alignment?: \"left\" | \"center\";\n  vertical_alignment?: \"start\" | \"center\" | \"end\";\n  full_height?: boolean;\n  background_image?: AssetStoryblok;\n  background_video?: AssetStoryblok;\n  component: \"hero-section\";\n  _uid: string;\n  [k: string]: any;\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThe nice thing is that you can update this structure based on the component defined directly in Storyblok.\nNow let's use this type definition for example in a new component src/components/HeroSection.tsx:\n\n\nimport { storyblokEditable } from '@storyblok/react/rsc';\nimport { HeroSectionStoryblok } from '@/components/component-types-sb'\n\ninterface HeroSectionProps {\n  blok: HeroSectionStoryblok;\n}","interface HeroSectionProps {\n  blok: HeroSectionStoryblok;\n}\n\nconst HeroSection = ({ blok} : HeroSectionProps) => {\n  return (\n    <div data-cy=\"hero-dection\" {...storyblokEditable(blok)}>\n    <h2 >\n      {blok.headline }\n    </h2>\n    <h3 >\n      {blok.subheadline }\n    </h3>\n    <img src={blok.background_image?.filename + \"/m/300x200\"} width=\"300\" height=\"200\" />\n    </div>\n  );\n};\n\nexport default HeroSection;\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nAnother exmaple, i want to improve the DefaultPage component using  for example the autogenerated DefaultPageStoryblok and the SbBlokData from Storyblok the JS client:\n\n\nimport { storyblokEditable, StoryblokServerComponent } from '@storyblok/react/rsc';\nimport { DefaultPageStoryblok } from '@/components/component-types-sb'\nimport { SbBlokData } from '@storyblok/js';","export default function DefaultPage({ blok }: DefaultPageStoryblok) {\n  return   <main {...storyblokEditable(blok)}>\n    {blok.body.map((nestedBlok: SbBlokData) => (\n      <StoryblokServerComponent blok={nestedBlok} key={nestedBlok._uid} />\n    ))}\n  </main>\n}\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nNow you can implement all your component, placing them in the src/components directory and listing them in the storyblokInit function in src/lib/storyblok.ts file.\n\n\n\n  Run your project\n\nTo test your project, be sure to have your server up and running. To start the server:\n\n\nbun run dev --experimental-https\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nVisit https://localhost:3000/home to see your dynamic content rendered via Storyblok and the App Router.\n\nIf you want to use the Storyblok Visual Editor you can set the visual editor using the https://localhost:3000 as explained here: https://www.storyblok.com/docs/guide/getting-started#configuring-the-visual-editor","Top comments (7)\n\n\n\n\nSubscribe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPersonal\nTrusted User\n\n\n\n\n\n\n        Create template\n      \nTemplates let you quickly answer FAQs or store snippets for re-use.\n\n\n\nSubmit\nPreview\nDismiss\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Nov 28 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide","Nov 28 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nNice! I love that you're using bun!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n3¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nRoberto B.\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI'm using Bun for everything within JavaScript üê∞\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like","Like comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI use Bun for building, testing, installing packages, running, etc.\nSo, yeah, pretty much everything, it's quite fast!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes","Like comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nThread\n\n\n\n        Thread\n      \n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nRoberto B.\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nI've built  JS package with bun, using the bun test. Super!\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nThread\n\n\n\n        Thread\n      \n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nBest Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow","Best Codes\n\n\n\n      Best Codes\n      \n    \n\n\n\n\n\n\n\n\n      Best Codes\n      \n    \n\n\n\nFollow\n\n\n    I love coding, 3D designing, and listening to music.\nI'm currently a fanatic about Rust, TypeScript, and Next.js.\n\nChristian, Coder, Creator\n  \n\n\n\n\n            Email\n          \n\nbestcodes.official+devto@gmail.com\n\n\n\n\n            Location\n          \n\n            Earth\n          \n\n\n\n              Education\n            \n\n              Self-taught\n            \n\n\n\n              Work\n            \n\n              Freelance Programmer | Fullstack Dev\n            \n\n\n\n          Joined\n        \n\nOct 24, 2023\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 14 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nYeah me too, a few of my npm libraries are fully bundles and tested with bun :)\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nSchemetastic (Rodrigo)\n\n\n\n      Schemetastic (Rodrigo)","Expand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nSchemetastic (Rodrigo)\n\n\n\n      Schemetastic (Rodrigo)\n      \n\n\n\n\n\n\n\n\n\n      Schemetastic (Rodrigo)\n      \n\n\n\n\nFollow\n\n\n    I started with JS about 10 years ago and I fell in love with it (even though it can be weird üòÖ). I had step backs in my career that ended up being good. Currently I'm a passionate front-end developer.\n  \n\n\n\n\n          Joined\n        \n\nSep 21, 2022\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Nov 23 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nSomeone is working very hard these days üëèüèΩ\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n3¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\nCollapse\n\n\nExpand\n\n\n\n\n\n\n¬†\n\n\n\n\n\n\n\n\nKevin R\n\n\n\n      Kevin R\n      \n    \n\n\n\n\n\n\n\n\n      Kevin R\n      \n    \n\n\n\nFollow\n\n\n\n\n\n          Joined\n        \n\nNov 11, 2019\n\n\n\n\n\n\n\n‚Ä¢\n\n\n    Dec 12 '24\n  \n\n\n\nDropdown menu\n\n\n\n\n\nCopy link\n\n\n\n                Hide\n              \n\n\n\n\n\n\n\n\n\nReally hope storyblok team references this for app router.","Really hope storyblok team references this for app router.\n\n\n\n\n\nLike comment: \nLike comment: \n\n\n2¬†likes\n\n      Like\n    \n\n\nComment button\nReply\n\n\n\n\n\n\n\n\n\n\nCode of Conduct\n‚Ä¢\nReport abuse\n\n\n\n\n\n\n\n        Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.\n      \n\n\nHide child comments as well\n\n\n\n          Confirm\n        \n\n\n For further actions, you may consider blocking this person and/or reporting abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Roberto B.\n      \n    \n\n\n\nFollow\n\n\n    PHP enthusiast, passionate about quality tools, AI exploration, and sharing knowledge through articles. Automation is my playground; I‚Äôm always learning, innovating, and pushing boundaries.\n  \n\n\n\n\n            Location\n          \n\n            Italy\n          \n\n\n\n              Work\n            \n\n              Solutions Engineer II @Storyblok\n            \n\n\n\n          Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n            More from Roberto B.","Joined\n        \n\nOct 6, 2019\n\n\n\n\n\n\n\n\n            More from Roberto B.\n\n\n\n\n              How to set up a Storyblok space with the Community Plan for local development\n              \n#storyblok\n#tutorial\n#headlesscms\n#webdev\n\n\n\n              Integrating SvelteKit with Storyblok (Using Svelte 5)\n              \n#svelte\n#sveltekit\n#storyblok\n#bunjs\n\n\n\n              Building a website using Markdown content with Next.js App Router and Fusionable\n              \n#markdown\n#tutorial\n#nextjs\n#react\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nThank you to our Diamond Sponsor Neon for supporting our community.\r\n\n\n\nDEV Community ‚Äî A constructive and inclusive social network for software developers. With you every step of your journey.\n    \n\n\n\n      Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List\n    \n\n\n\n\n      Podcasts\n    \n\n\n\n\n      Videos\n    \n\n\n\n\n      Tags\n    \n\n\n\n\n      DEV Help\n    \n\n\n\n\n      Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges","Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges\n    \n\n\n\n\n      DEV Showcase\n    \n\n\n\n\n      About\n    \n\n\n\n\n      Contact\n    \n\n\n\n\n      Free Postgres Database\n    \n\n\n\n\n      Software comparisons\n    \n\n\n\n\n\n\n      Code of Conduct\n    \n\n\n\n\n      Privacy Policy\n    \n\n\n\n\n      Terms of use\n    \n\n\n\n\nBuilt on Forem ‚Äî the open source software that powers DEV and other inclusive communities.\nMade with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.\n\n\n\n\n\n\n\n\n\n\n\n          We're a place where coders share, stay up-to-date and grow their careers.\n      \n\n\n\n        Log in\n      \n\n        Create account"],"metadata":[{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":889,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":1852,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":2582,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":3486,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4440,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":4954,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":5899,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":6702,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":7660,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":8523,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":9143,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":9980,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":10859,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":11805,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":12792,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":13661,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":14535,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":15524,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":16300,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":17129,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":17970,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":18985,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":19844,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":20766,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":21718,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":22605,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":23503,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":24413,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":25330,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"},{"description":"In this article, I would like to share with you how to create a dynamic web app with Next.js 15's App... Tagged with nextjs, react, storyblok, bunjs.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/robertobutti/how-to-build-a-dynamic-website-with-nextjs-15-app-router-react-19-storyblok-and-bun--2972","start_index":26217,"title":"How to build a dynamic website with Next.js 15 App Router, React 19, Storyblok, and Bun (+ Typescript) - DEV Community"}]},{"source":{"collection_name":"web-search-b35729efecb9fda0c0a16e9a0896d6ed129b1d2d36e857c202e8","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://www.chakra-ui.com/docs/get-started/frameworks/next-app"]},"document":["Using Chakra UI in Next.js (App) | Chakra UIBuild faster with Premium Chakra UI Components üíéLearn moreSkip to ContentDocsPlaygroundGuidesBlogSponsor3.16.1Search...‚åòKGet Started Components Charts betaStyling Theming FrameworksNext.js (App)OverviewInstallationMigrationCLILLMs.txtContributingShowcaseFrameworksNext.js (App)Next.js (Pages)RemixStorybookViteEnvironmentsShadow DOMIframeUsing Chakra UI in Next.js (App)A guide for installing Chakra UI with Next.js app directoryTemplates\nUse one of the following templates to get started quickly. The templates are\nconfigured correctly to use Chakra UI.\nNext.js app templateNext.js pages template\nInstallation\n\nThe minimum node version required is Node.20.x","1Install dependenciesnpm i @chakra-ui/react @emotion/react2Add snippetsSnippets are pre-built components that you can use to build your UI faster.\nUsing the @chakra-ui/cli you can add snippets to your project.npx @chakra-ui/cli snippet add3Update tsconfigIf you're using TypeScript, you need to update the compilerOptions in the\ntsconfig file to include the following options:{\n  \"compilerOptions\": {\n    \"target\": \"ESNext\",\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Bundler\",\n    \"skipLibCheck\": true,\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  }\n}\nIf you're using JavaScript, create a jsconfig.json file and add the above\ncode to the file.\n4Setup providerWrap your application with the Provider component generated in the\ncomponents/ui/provider component at the root of your application.This provider composes the following:\nChakraProvider from @chakra-ui/react for the styling system\nThemeProvider from next-themes for color mode","ThemeProvider from next-themes for color mode\napp/layout.tsximport { Provider } from \"@/components/ui/provider\"","export default function RootLayout(props: { children: React.ReactNode }) {\n  const { children } = props\n  return (\n    <html suppressHydrationWarning>\n      <body>\n        <Provider>{children}</Provider>\n      </body>\n    </html>\n  )\n}\nAdding the suppressHydrationWarning prop to the html element is required\nto prevent the warning about the next-themes library.\n5Optimize BundleWe recommend using the experimental.optimizePackageImports feature in Next.js\nto optimize your bundle size by loading only the modules that you are actually\nusing.next.config.mjsexport default {\n  experimental: {\n    optimizePackageImports: [\"@chakra-ui/react\"],\n  },\n}This also helps to resolve warnings like:[webpack.cache.PackFileCacheStrategy] Serializing big strings (xxxkiB)6Hydration errorsIf you see an error like this: Hydration failed because the initial server\nrendered HTML did not match the client, and the error looks similar to:+<div className=\"chakra-xxx\">","-<style data-emotion=\"css-global xxx\" data-s=\"\">This is caused by how Next.js hydrates Emotion CSS in --turbo mode. Please\nremove the --turbo flag from your dev script in your package.json file.- \"dev\": \"next dev --turbo\"\n+ \"dev\": \"next dev\"When this is fixed by the Next.js team, we'll update this guide.7Enjoy!With the power of the snippets and the primitive components from Chakra UI, you\ncan build your UI faster.import { Button, HStack } from \"@chakra-ui/react\"","const Demo = () => {\n  return (\n    <HStack>\n      <Button>Click me</Button>\n      <Button>Click me</Button>\n    </HStack>\n  )\n}PreviousShowcaseNextNext.js (Pages)On this pageTemplatesInstallationInstall dependenciesAdd snippetsUpdate tsconfigSetup providerOptimize BundleHydration errorsEnjoy!Edit page on GitHubScroll to top"],"metadata":[{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":0,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":704,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":1603,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":1716,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":2668,"title":"Using Chakra UI in Next.js (App) | Chakra UI"},{"description":"A guide for installing Chakra UI with Next.js app directory","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://www.chakra-ui.com/docs/get-started/frameworks/next-app","start_index":3136,"title":"Using Chakra UI in Next.js (App) | Chakra UI"}]},{"source":{"collection_name":"web-search-3b84ce5f08f719e69df5a6a2ae39c7fa7a5b1d41f47ce12f534c","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js"]},"document":["How to Set Up Chakra UI With Next.js - Upmostly\n\n\nHow to Set Up Chakra UI With Next.js - Upmostly\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nToggle search\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTutorials\n\n\n\n\n\n\nTutorials\n\n\n\n\n\n\n\n\n\n\n\n\n\nReact.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNext.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSvelte\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVue.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTypeScript\n\n\n\n\n\n\n\n\n\nCheatsheets\n\n\n\n\n\n\nCheatsheets\n\n\n\n\n\n\n\n\n\n\n\n\n\nReact.js\n\n\n\n\n\n\n\n\n\n\n\nToggle search\n\n\n\n\n\n\n\n\n\n\nFacebook\n\n\n\n\n\nYoutube\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch‚Ä¶\n\n\n\nSearch\n\n\n\n\n\n\n\n\n\n\n\nClose modal window\n\n\n\n\n\n\n\n\n\n\n\nHome / Next.js / How to Set Up Chakra UI How to Set Up Chakra UI With Next.js\n\n\n\n \nBy\n\t\tOmari Thompson-Edwards\n\n\n\n\n\n\n\n\n\n\n\n\nHey, I'm Omari! I'm a full-stack developer from the UK. I'm currently looking for graduate and freelance software engineering roles, so if you liked this article, reach out on Twitter at @marile0n\n\nPublished:\n\t\t26 January 2023","Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components that can be easily integrated into any project. In this article, we will go over the process of setting up Chakra UI with Next.js, a popular framework for building server-rendered React applications.\nCreating your Next.js app\nIf you‚Äôre adding Chakra UI to an existing app, you can feel free to skip this step. \nFirst, we will need to create a new Next.js project. We can do this by running the following command in our terminal:\nnpx create-next-app my-app\n# or with TypeScript\nnpx create-next-app@latest --ts\nThis will create a new directory called ‚Äúmy-app‚Äù with the basic structure of a Next.js project. Feel free to swap out ‚Äúmy-app‚Äù for whatever your app should be called. I also tend to use TypeScript with my Next.js apps, but you can choose either TS or JS.\nSetting Up Chakra UI","Setting Up Chakra UI\nNext, we will need to install Chakra UI and its dependencies. We can do this by running the following command in our terminal:\nnpm install @chakra-ui/react @emotion/react @emotion/styled framer-motion\nExample\nLet‚Äôs showcase Chakra UI by building a simple social card. Here‚Äôs what the end result will look like:","Firstly, to make sure that the Chakra UI styles are applied globally, we need to wrap our application in the ChakraProvider component. \nimport { ChakraProvider } from '@chakra-ui/react';\n\nexport default function MyApp({ Component, pageProps }: AppProps) {\n    return (\n        <ChakraProvider>\n            <Component {...pageProps} />\n        </ChakraProvider>\n    );\n}\n\nHere‚Äôs the code for our page component:\nexport default function Home() {\n    return (\n        <Flex w=\"100vw\" h=\"100%\" align=\"center\" justify=\"center\">\n            <Head>\n                <title>Hello World!</title>\n                <link rel=\"icon\" href=\"/favicon.ico\" />\n            </Head>\n            <main>\n                <Flex w=\"100%\" h=\"100vh\" align=\"center\">\n                    <ProfileCard />\n                </Flex>\n            </main>\n        </Flex>\n    );\n}","We‚Äôre starting off with our main page component. Chakra UI provides a generic Flex component, which gives us a generic container with ‚Äúdisplay: flex‚Äù applied. Chakra UI works around style props, which let you provide values through props. There are a lot of shorthand versions of these props, such as ‚Äúw‚Äù instead of ‚Äúwidth‚Äù, ‚Äúalign‚Äù instead of ‚ÄúalignItems‚Äù.\nLet‚Äôs drill into the ProfileCard component:\nfunction ProfileCard() {\n    return (\n        <Card\n            w=\"auto\"\n            display=\"flex\"\n            direction=\"column\"\n            align=\"center\"\n            justify=\"center\"\n            padding=\"2\">\n            <ProfileHeader />\n            <ProfileBody />\n        </Card>\n    );\n}\nI‚Äôm using ChakraUI‚Äôs generic card component. This is a generic card component with a rounded edge and shadow. One helpful part is that ChakraUI allows you to split your card up into parts, e.g. CardHeader, CardBody, and CardFooter.","Then inside our header:\nfunction ProfileHeader() {\n    return (\n        <CardHeader\n            display=\"flex\"\n            flexDirection=\"column\"\n            gap=\"2\"\n            alignItems=\"center\">\n            <Avatar\n                height=\"80px\"\n                width=\"80px\"\n                src=\"https://i.pravatar.cc/300\"\n            />\n            <Heading size=\"md\">John Doe</Heading>\n            <Text>Senior UX/UI Designer</Text>\n        </CardHeader>\n    );\n}\nAgain I‚Äôm using style props to pass through styles. I‚Äôm also using the ChakraUI Avatar component, used to represent users/profile pictures.\nInside the body:\nfunction ProfileBody() {\n    return (\n        <CardBody display=\"flex\" flexDirection=\"column\" gap=\"2\">\n            <ProfileStats />\n            <ProfileButtons />\n        </CardBody>\n    );\n}\nWe have a stats and buttons component, so let‚Äôs break these down.\nIn the stats:\nfunction ProfileStats() {\n    const stats = {\n        posts: 100,\n        followers: 1782,","function ProfileStats() {\n    const stats = {\n        posts: 100,\n        followers: 1782,\n        following: 404,\n    };\n    return (\n        <HStack w=\"100%\" justify=\"space-evenly\">\n            {Object.entries(stats).map(([title, value]) => (\n                <Flex\n                    fontSize=\"xs\"\n                    key={title}\n                    justify=\"center\"\n                    align=\"center\"\n                    direction=\"column\">\n                    <Text casing=\"capitalize\" fontWeight=\"bold\">\n                        {title}\n                    </Text>\n                    <Text>{value}</Text>\n                </Flex>\n            ))}\n        </HStack>\n    );\n}\nWe have an HStack component, used for horizontally stacking items. ChakraUI also provides VStack for vertical stacks, as well as Stack, which can take a direction as a prop.\nThen in the ProfileButtons:\nfunction ProfileButtons() {\n    return (\n        <ButtonGroup colorScheme=\"blue\">\n            <Button>Follow</Button>","return (\n        <ButtonGroup colorScheme=\"blue\">\n            <Button>Follow</Button>\n            <Button variant=\"outline\">Message</Button>\n        </ButtonGroup>\n    );\n}\nChakraUI provides some pre-built button styles which are very helpful, with a variety of colours and variations. It also provides a built-in ButtonGroup component, which has the added benefit of sharing styles between buttons.\nAnd that‚Äôs all of our components from start to finish!\nConclusion\nAnd that‚Äôs it! We have successfully set up Chakra UI with Next.js. With this setup, you can start using Chakra UI‚Äôs pre-built components, and styles to quickly build accessible, and visually pleasing interfaces.\nRemember to also check the documentation for the library and the framework, to see all the features and possibilities. We also have articles covering alternative styling solutions, such as TailwindCSS.\nIf you liked this article, feel free to leave a comment below!\nHappy coding!","If you liked this article, feel free to leave a comment below!\nHappy coding!\nRelated Posts:How To Set Up TailwindCSS in Your Next.js AppHow to set up a GraphQL server with Node.js & ExpressSet Up Axios Interceptors in your ReactJS ApplicationHow to set up ESLint in ReactHow To Set Up Redux in ReactHow To Use Vue With Pinia To Set Up Authentication","üëã Hey, I'm Omari Thompson-Edwards\n\t\t    Hey, I'm Omari! I'm a full-stack developer from the UK. I'm currently looking for graduate and freelance software engineering roles, so if you liked this article, reach out on Twitter at @marile0n      \n\n\n\n\n\n\n\nüí¨ Leave a comment Cancel replyYour email address will not be published. Required fields are marked *\n\n\nEmail address\n\nWe will never share your email with anyone else.\n\n\nName\n\n\n \n\nŒî \n\n\n\n\n\n\n\nFeatured\n\n1\n\n              Build a React Switch Toggle Component            \n\n\n2\n\n              Upload a File from a React Component            \n\n\n3\n\n              How React Reignited My Love for Web Development            \n\n\n4\n\n              How to Use the setState Callback in React            \n\n\n5\n\n              Simplifying React State and the useState Hook            \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUpmostly brings you original JavaScript framework tutorials every week.\n\n\n\nTutorials\n\n\nReact.js\n\n\nNext.js\n\n\nSvelte\n\n\nAngular\n\n\nVue.js","Tutorials\n\n\nReact.js\n\n\nNext.js\n\n\nSvelte\n\n\nAngular\n\n\nVue.js\n\n\nTypeScript\n\n\n\n\nCheatsheets\n\n\nReact.js\n\n\n\n\nInfo\n\n\nAbout\n\n\nWrite For Us\n\n\nPrivacy\n\n\nRSS\n\n\n\n\n\n\n\nCopyright ¬©\n\t\t\t2025\n\t\t\tUpmostly\n\n\n\n\n\nFacebook\n\n\n\n\n\nTwitter\n\n\n\n\n\n\n\n\n\n\n\n\nGithub\n\n\n\n\n\nYoutube"],"metadata":[{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":5,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":976,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":1897,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":2230,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":3074,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":4004,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":4902,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":5814,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":6694,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":7049,"title":"How to Set Up Chakra UI With Next.js - Upmostly"},{"description":"Chakra UI is a popular library for building user interfaces with a focus on accessibility and developer experience. It provides a set of reusable components","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://upmostly.com/next-js/how-to-set-up-chakra-ui-with-next-js","start_index":7979,"title":"How to Set Up Chakra UI With Next.js - Upmostly"}]},{"source":{"collection_name":"web-search-64437e4a61bca33d33b48446fc028ca10b4487290a0ebaae91bf","name":"setup chakra ui in next.js 15 project","type":"web_search","urls":["https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l"]},"document":["Creating a Next.js project with Chakra-UI integration - DEV Community\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSkip to content\n\n\n\nNavigation menu\n\n\n\n\n\n\n\n\n\n\n\n\n\nSearch\n\n\n\n\n                Powered by\n                Search\n\n\n\n                Algolia\n            \n\n\n\n\n\n\n\n\n              Log in\n            \n\n\n            Create account\n          \n\n\n\n\n\n\n\nDEV Community\n\nClose\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        Add reaction\n      \n\n\n\n\n\n\n\n\n\n      Like\n    \n\n\n\n\n\n\n\n      Unicorn\n    \n\n\n\n\n\n\n\n      Exploding Head\n    \n\n\n\n\n\n\n\n      Raised Hands\n    \n\n\n\n\n\n\n\n      Fire\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Jump to Comments\n    \n\n\n\n\n\n\n\n\n\n      Save\n    \n\n\n\n\n\n\n\n\n      Boost\n    \n\n\n\n\n\n\n\nMore...\n\n\n\n\n            Moderate\n          \n\n\n\nCopy link\nCopy link\n\n\n\nCopied to Clipboard\n\n\n\n            Share to X\n          \n\n            Share to LinkedIn\n          \n\n            Share to Facebook\n          \n\n            Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEthan","Share to Mastodon\n          \n\n\n\n\nReport Abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEthan\n\n                      Posted on Oct 30, 2022\n\n\n\n\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n¬†\n\n\n\n              Creating a Next.js project with Chakra-UI integration\n            \n\n#nextjs\n#tutorial\n#beginners\n#javascript\n\n\n\n\n\n\n\n\n  Introduction\n\nHello, in this tutorial I will show you how to create a simple Next.js project with Chakra UI intergration. üëÄ\n\n\n\n\n  What is Chakra-UI\n\nChakra-UI is an open source component library used for building modular, accessible and good looking user interfaces. \nThe main advantages of Chakra-UI are as follows:","Accessibility: Chakra-UI allows us to use pre-build components created by the Chakra-UI team.\nThemeable: The library ships with a default theme, which can be customized if needed.\nLight and dark mode: both are supported out of the box and can rely on the user's system settings. For example if the user sets their computer to dark mode by default, Chakra-UI will default to dark mode.\nComposibility: Components can be created from the Chakra-UI ones or if needed custom components can be created with ease.\nTypescript Support: Chakra-UI is written in TypeScript and provides class types for easy integration.\n\n\n\n\n\n  What we will be making\n\nIn this tutorial we will use Chakra-UI to create a simple user list/profile page. \nWe will also integrate a toggler to toggle between light and dark mode.\nYou will learn how to set up a basic Next.js application with Chakra-UI integration.\n\n\n\n\n  Creating the Next.js application and installing the dependencies","Creating the Next.js application and installing the dependencies\n\nFirst we need to create a new Next.js app and install the dependencies needed for the example.\nThe Next.js app can be created via the following command:\n\n\n\nnpx create-next-app@latest\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis will set up the Next.js project automatically for you.\nNext we need to install Chakra-ui which can be done via the following command:\n\n\n\nyarn add @chakra-ui/react @emotion/react@^11 @emotion/styled@^11 framer-motion@^4 @chakra-ui/icons\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\n\n\n\n\n  Creating fake Users\n\nNext we will need some fake users to actually populate the page. \nCreate a \"data\" folder in the root directory and create a \"users.js\" file and populate it with the following data: (feel free to use your own custom data but be careful of the parameter names):\nhttps://github.com/ethand91/nextjs-chakra-sample/blob/main/data/users.js\n\n\n\n\n  Creating the components","Creating the components\n\nNext we need to create the components needed for the sample page, create a new folder called \"components\" and within that create a \"TopBar\" folder.\nWithin the TopBar folder create a new file called \"index.js\" and populate it with the following contents:\n\n\n\nimport {\n  Box,\n  Button,\n  useColorMode\n} from '@chakra-ui/react';\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons';\n\nfunction TopBar() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const ColorModeIcon = colorMode === 'light' ? SunIcon : MoonIcon;\n\n  return (\n    <Box width=\"100%\" padding=\"1\" backgroundColor=\"purple.700\">\n      <Box maxWidth=\"container.xl\" margin=\"auto\">\n        <Button\n          aria-label=\"ui theme\"\n          leftIcon={ <ColorModeIcon /> }\n          onClick={ toggleColorMode }\n          size=\"xs\"\n          marginRight=\"2\"\n          borderRadius=\"sm\"\n        >\n          Toggle Theme\n        </Button>\n      </Box>\n    </Box>\n  );  \n};\n\nexport default TopBar;","export default TopBar;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we create a simple top bar for the application, we give it a background color of purple and also provide a button that allows the user to toggle between light/dark mode using Chakra-UI.\nNext we need a component to display the users, so create a new \"UserCard\" directory and within that directory create an \"index.js\" file and populate it with the following contents:\n\n\n\nimport Link from 'next/link';\nimport {\n  Box,\n  Text,\n  Avatar,\n  Center,\n  VStack,\n  useColorModeValue\n} from '@chakra-ui/react';","function UserCard(props) {\n  return (\n    <Link href={ `/users/${props.username}` } passHref>\n      <VStack\n        spacing=\"4\"\n        borderRadius=\"md\"\n        boxShadow=\"x1\"\n        padding=\"5\"\n        backgroundColor={\n          useColorModeValue('gray.50', 'gray.700')\n        }\n      >   \n        <Center>\n          <Avatar size=\"lg\" src={ props.avatar } />\n        </Center>\n        <Center>\n          <Box textAlign=\"center\">\n            <Text fontWeight=\"bold\" fontSize=\"xl\">\n              { props.first_name } { props.last_name }\n            </Text>\n            <Text fontSize=\"xs\">{ props.job_title }</Text>\n          </Box>\n        </Center>\n      </VStack>\n    </Link>\n  );  \n};\n\nexport default UserCard;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThis card will link to the user details page, using Chakra-UI we are easily able to center contents using \"Center\". We also use Avatar to easily display the user's profile picture.\nThats the components created.","Creating the Pages\n\nNext we need to start working on the pages.\nWe will be overriding the default Next.js document which can be done by creating a \"_document.js\" inside the pages directory. \nCreate the file and populate it with the following:\n\n\n\nimport { ColorModeScript } from '@chakra-ui/react';\nimport NextDocument, {\n  Html,\n  Head,\n  Main,\n  NextScript\n} from 'next/document';\nimport { extendTheme } from '@chakra-ui/react';\n\nconst config = { \n  useSystemColorMode: true\n};\n\nconst theme = extendTheme({ config }); \n\nexport default class Document extends NextDocument {\n  render () {\n    return (\n      <Html lang=\"en\">\n        <Head />\n        <body>\n          <ColorModeScript\n            initialColorMode={ theme.config.initialColorMode }\n          />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );  \n  }\n}\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nThe reason for overriding the default layout is because we want to apply both light/dark theme to the entire page.\nNext we need to apply Chara-UI to the application so open up pages/_app.js and change the contents to the following:\n\n\n\nimport { ChakraProvider, Box } from '@chakra-ui/react';\nimport TopBar from './../components/TopBar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ChakraProvider>\n      <TopBar />\n      <Box maxWidth=\"container.xl\" margin=\"auto\">\n        <Component { ...pageProps} />\n      </Box>\n    </ChakraProvider>\n  );  \n}\n\nexport default MyApp\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we bascially tell Next.js to use the Chara-UI provider and make sure everypage has our custom TopBar.\nNext we need to edit the pages/index.js to contain the following contents:\n\n\n\nimport {\n  Box,\n  Grid,\n  Text,\n  GridItem\n} from '@chakra-ui/react';","import {\n  Box,\n  Grid,\n  Text,\n  GridItem\n} from '@chakra-ui/react';\n\nimport UserCard from './../components/UserCard';\nimport users from './../data/users';\n\nexport default function Home() {\n  return (\n    <Box>\n      <Text\n        fontSize=\"xxx-large\"\n        fontWeight=\"extrabold\"\n        textAlign=\"center\"\n        marginTop=\"9\"\n      >   \n        Users\n      </Text>\n\n      <Grid\n        gridTemplateColumns={ ['1fr', 'repeat(2, 1fr)', 'repeat(3, 1fr)'] }\n        gridGap=\"10\"\n        padding=\"10\"\n      >   \n        {\n          users.map((user) => (\n            <GridItem key={ user.id }>\n              <UserCard { ...user } />\n            </GridItem>\n          ))\n        }\n      </Grid>\n    </Box>\n  );  \n}\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","Enter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nHere we basically list all the users using Chakra-UI's Grid component. The \"gridTemplateColumns\" allows us to set the sizes for small screens, medium screens and large screens. For example if you view the page on a large screen each row will have 3 users, however if you view it on a mobile device each row will only have one user.\nFeel free to run the project using:\n\n\n\nnpm run dev\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nIf you access the page (https://localhost:3000), you should see the following page:\n\nIf you prefer light mode you should see the following:","If you prefer light mode you should see the following:\n\nFeel free to play with the toggle button. If you try clicking on a user you will be greeted with a 404 not found response so let's create the user profile page!\nCreate a \"users\" folder inside the pages folder and create the \"[username].js\". (Note if you're using a terminal like me you may need to escape the brackets with a backslash).\nNow fill the file with the following contents:\n\n\n\nmport Link from 'next/link';\nimport {\n  Avatar,\n  Box,\n  Center,\n  Text,\n  Image,\n  Button,\n  Flex,\n  useColorModeValue\n} from '@chakra-ui/react';\n\nimport users from './../../data/users';\n\nexport function getStaticPaths() {\n  const paths = users.map((user) => ({\n    params: {\n      username: user.username\n    }   \n  }));\n\n  return {\n    paths,\n    fallback: false\n  };  \n}\n\nexport function getStaticProps({ params }) {\n  const { username } = params;","export function getStaticProps({ params }) {\n  const { username } = params;\n\n  return { \n    props: {\n      user: users.find((user) => user.username === username)\n    }   \n  };  \n};\n\nfunction UserPage({ user }) {\n  return (\n    <Center\n      marginTop={ ['0', '0', '8' ] }\n      boxShadow=\"lg\"\n      minHeight=\"fit-content\"\n    >\n      <Box>\n        <Box position=\"relative\">\n          <Image src={user.cover_image} width=\"fit-content\" height=\"250px\" objectFit=\"cover\" />\n\n          <Flex\n            alignItems=\"flex-end\"\n            position=\"absolute\"\n            top=\"0\"\n            left=\"0\"\n            backgroundColor={\n              useColorModeValue('blackAlpha.400', 'blackAlpha.600')\n            }\n            width=\"100%\"\n            height=\"100%\"\n            padding=\"8\"\n            color=\"white\"","<Avatar size=\"lg\" src={ user.avatar } />\n            <Box marginLeft=\"6\">\n              <Text as=\"h1\" fontSize=\"xx-large\" fontWeight=\"bold\">\n                { user.first_name } { user.last_name }\n              </Text>\n              <Text as=\"p\" fontSize=\"large\" lineHeight=\"1.5\">\n                { user.job_title }\n              </Text>\n            </Box>\n          </Flex>\n        </Box>\n        <Box\n          maxW=\"container.xl\"\n          margin=\"auto\"\n          padding=\"8\"\n          backgroundColor={\n            useColorModeValue('white', 'gray.700')\n          }\n        >\n          <Text as=\"p\">{ user.description }</Text>\n          <Link href=\"/\" passHref>\n            <Button marginTop=\"8\" colorScheme=\"whatsapp\" as=\"a\">\n              Back to all users\n            </Button>\n          </Link>\n        </Box>\n      </Box>\n    </Center>\n  );\n};\n\nexport default UserPage;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode","export default UserPage;\n\n\n\n\n\nEnter fullscreen mode\n\n\nExit fullscreen mode\n\n\n\n\n\nPhew! Here we use \"getStaticPaths\" to tell Next.js we need to render a new page for each user in the user's array.\nWe also tell Next.js to display the default 404 page if the requested user is not found.\nChakra-UI allows us to easily center the contents. This page basically displays the contents of the user and provides a button to go back using a Chakra-UI feature.\nAll done fire up the dev server and load up https://localhost:3000 in the browser. \nOnce loading try clicking on a user you should see the following page:\n\n\nAll done! üòé\n\n\n\n\n  Conclusion\n\nHere I have demonstrated how to use Next.js with Chakra-UI. Feel free to customize anyway you wish. üòâ\nI'm actually thinking of using Next.js for my next side project.\nHopefully you have learned something new, you can find the source code for this tutorial via:\nhttps://github.com/ethand91/nextjs-chakra-sample","Like me work? I post about a variety of topics, if you would like to see more please like and follow me.\nAlso I love coffee. \n\n\n\n\n\n\n\n\n            Top comments (0)\n\n\n\n\nSubscribe\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPersonal\nTrusted User\n\n\n\n\n\n\n        Create template\n      \nTemplates let you quickly answer FAQs or store snippets for re-use.\n\n\n\nSubmit\nPreview\nDismiss\n\n\n\n\n\n\n\n\n\nCode of Conduct\n‚Ä¢\nReport abuse\n\n\n\n\n\n\n\n        Are you sure you want to hide this comment? It will become hidden in your post, but will still be visible via the comment's permalink.\n      \n\n\nHide child comments as well\n\n\n\n          Confirm\n        \n\n\n For further actions, you may consider blocking this person and/or reporting abuse\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      Ethan\n      \n    \n\n\n\nFollow\n\n\n    Programmer/System Admin. Currently working on media solutions. \nLove learning new things :)\n\nPosts include a variety of topics, mostly media/computer vision related.\n  \n\n\n\n\n            Location\n          \n\n            Japan","Location\n          \n\n            Japan\n          \n\n\n\n              Education\n            \n\n              University of Cumbria\n            \n\n\n\n              Work\n            \n\n              Software Engineer/System Admin\n            \n\n\n\n          Joined\n        \n\nJan 5, 2022\n\n\n\n\n\n\n\n\n            More from Ethan\n\n\n\n\n              Flask Video Streaming App Tutorial\n              \n#python\n#flask\n#programming\n#beginners\n\n\n\n              WebCodec - Sending and Receiving\n              \n#webdev\n#javascript\n#beginners\n#programming\n\n\n\n              Introduction to the WebCodec API - Real Time Video Encoding and Display\n              \n#javascript\n#webdev\n#tutorial\n#html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nThank you to our Diamond Sponsor Neon for supporting our community.\r\n\n\n\nDEV Community ‚Äî A constructive and inclusive social network for software developers. With you every step of your journey.\n    \n\n\n\n      Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List","Home\n    \n\n\n\n\n      DEV++\n    \n\n\n\n\n      Reading List\n    \n\n\n\n\n      Podcasts\n    \n\n\n\n\n      Videos\n    \n\n\n\n\n      Tags\n    \n\n\n\n\n      DEV Help\n    \n\n\n\n\n      Forem Shop\n    \n\n\n\n\n      Advertise on DEV\n    \n\n\n\n\n      DEV Challenges\n    \n\n\n\n\n      DEV Showcase\n    \n\n\n\n\n      About\n    \n\n\n\n\n      Contact\n    \n\n\n\n\n      Free Postgres Database\n    \n\n\n\n\n      Software comparisons\n    \n\n\n\n\n\n\n      Code of Conduct\n    \n\n\n\n\n      Privacy Policy\n    \n\n\n\n\n      Terms of use\n    \n\n\n\n\nBuilt on Forem ‚Äî the open source software that powers DEV and other inclusive communities.\nMade with love and Ruby on Rails. DEV Community ¬© 2016 - 2025.\n\n\n\n\n\n\n\n\n\n\n\n          We're a place where coders share, stay up-to-date and grow their careers.\n      \n\n\n\n        Log in\n      \n\n        Create account"],"metadata":[{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":924,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":1526,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":2412,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":3378,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4341,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":4926,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":5916,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":6769,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":7642,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":8362,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":8935,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":9754,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":10576,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":11429,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":12376,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":13310,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"},{"description":"Introduction   Hello, in this tutorial I will show you how to create a simple Next.js... Tagged with nextjs, tutorial, beginners, javascript.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://dev.to/ethand91/creating-a-nextjs-project-with-chakra-ui-integration-469l","start_index":14212,"title":"Creating a Next.js project with Chakra-UI integration - DEV Community"}]},{"source":{"collection_name":"web-search-f66bd811cafe598a2826b936624732ea01e0f9c1833eab24e133","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/docs/get-started/frameworks/nextjs"]},"document":["Storybook for Next.js | Storybook docsStorybook 9 is coming! Join the newsletter to get it first. SubscribeDocsAddonsShowcaseBlogVisual TestEnterprise86,463Search docsDocs Docs ¬ª Get Started ¬ª Frameworks ¬ª Next.jsDocumentationAPITutorialsAddonsChangelogVersion 8.6Get StartedWhy Storybook?InstallFrameworksWhat's a story?Browse storiesSetupConclusionStoriesArgsParametersDecoratorsPlay functionLoadersTagsNaming components and hierarchyMocking data and modulesBuilding pages and screensStories for multiple componentsWriting stories in TypeScriptTestingComponent testsVisual testsAccessibility testsSnapshot testsTest runnerTest addonTest coverageImport stories in testsDocsAutodocsMDXDoc blocksPreview and build docsSharingPublishEmbedDesign integrationsCompositionPackage CompositionEssential addonsActionsBackgroundsControlsHighlightInteractionsMeasure & outlineToolbars & globalsViewportAddonsInstallWriteConfigure addonsWrite a presetAdd to catalogTypes of addonsKnowledge baseAddon APIMigrate","addonsWrite a presetAdd to catalogTypes of addonsKnowledge baseAddon APIMigrate addons to 8.0ConfigureStyling and CSSUpgradingTelemetryIntegrationStory renderingStory layoutUser InterfaceEnvironment variablesBuildersViteWebpackAPIAPImain.js|ts configurationComponent Story Format (CSF)ArgTypesParametersDoc BlocksPortable StoriesFrameworksCLI optionsContributeRFC processCodeDocumentationFrameworksReproduceRoadmapFAQMigrate to 8.0Migrate from 6.x to 8.0Storybook for Next.jsStorybook for Next.js is a framework that makes it easy to develop and test UI components in isolation for Next.js applications. It includes:","üîÄ Routing\nüñº Image optimization\n‚§µÔ∏è Absolute imports\nüé® Styling\nüéõ Webpack & Babel config\nüí´ and more!\n\nRequirements\n\nNext.js ‚â• 13.5\nStorybook ‚â• 7.0\n\nGetting started\nIn a project without Storybook\nFollow the prompts after running this command in your Next.js project's root directory:\n\n npmnpm create storybook@latest\n\nMore on getting started with Storybook.\nIn a project with Storybook\nThis framework is designed to work with Storybook 7+. If you‚Äôre not already using v7, upgrade with this command:\n\n npmnpx storybook@latest upgrade\n\nAutomatic migration\nWhen running the upgrade command above, you should get a prompt asking you to migrate to @storybook/nextjs, which should handle everything for you. In case that auto-migration does not work for your project, refer to the manual migration below.\nManual migration\nFirst, install the framework:\n\n npmnpm install --save-dev @storybook/nextjs\n\nThen, update your .storybook/main.js|ts to change the framework property:","Then, update your .storybook/main.js|ts to change the framework property:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  // framework: '@storybook/react-webpack5', üëà Remove this\n  framework: '@storybook/nextjs', // üëà Add this\n};\n \nexport default config;\n\nFinally, if you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  addons: [\n    // ...\n    // üëá These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n \nexport default config;","With Vite\n(‚ö†Ô∏è Experimental)\nYou can use our freshly baked, experimental @storybook/experimental-nextjs-vite framework, which is based on Vite and removes the need for Webpack and Babel. It supports all of the features documented here.\n‚ÑπÔ∏èUsing the Next.js framework with Vite requires Next.js 14.1.0 or later.\n\n npmnpm install --save-dev @storybook/experimental-nextjs-vite\n\nThen, update your .storybook/main.js|ts to change the framework property:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/experimental-nextjs-vite';\n \nconst config: StorybookConfig = {\n  // ...\n  // framework: '@storybook/react-webpack5', üëà Remove this\n  framework: '@storybook/experimental-nextjs-vite', // üëà Add this\n};\n \nexport default config;","‚ÑπÔ∏èIf your Storybook configuration contains custom Webpack operations in webpackFinal, you will likely need to create equivalents in viteFinal.For more information, see the Vite builder documentation.\nFinally, if you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/experimental-nextjs-vite';\n \nconst config: StorybookConfig = {\n  // ...\n  addons: [\n    // ...\n    // üëá These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n \nexport default config;\n\nRun the Setup Wizard\nIf all goes well, you should see a setup wizard that will help you get started with Storybook introducing you to the main concepts and features, including how the UI is organized, how to write your first story, and how to test your components' response to various inputs utilizing controls.","If you skipped the wizard, you can always run it again by adding the ?path=/onboarding query parameter to the URL of your Storybook instance, provided that the example stories are still available.\nNext.js's Image component\nThis framework allows you to use Next.js's next/image with no configuration.\nLocal images\nLocal images are supported.\n // index.jsx\nimport Image from 'next/image';\nimport profilePic from '../public/me.png';\n \nfunction Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image\n        src={profilePic}\n        alt=\"Picture of the author\"\n        // width={500} automatically provided\n        // height={500} automatically provided\n        // blurDataURL=\"../public/me.png\" set to equal the image itself (for this framework)\n        // placeholder=\"blur\" // Optional blur-up while loading\n      />\n      <p>Welcome to my homepage!</p>\n    </>\n  );\n}\nRemote images\nRemote images are also supported.\n // index.jsx\nimport Image from 'next/image';","}\nRemote images\nRemote images are also supported.\n // index.jsx\nimport Image from 'next/image';\n \nexport default function Home() {\n  return (\n    <>\n      <h1>My Homepage</h1>\n      <Image src=\"/me.png\" alt=\"Picture of the author\" width={500} height={500} />\n      <p>Welcome to my homepage!</p>\n    </>\n  );\n}\nNext.js font optimization\nnext/font is partially supported in Storybook. The packages next/font/google and next/font/local are supported.\nnext/font/google\nYou don't have to do anything. next/font/google is supported out of the box.\nnext/font/local\nFor local fonts you have to define the src property.\nThe path is relative to the directory where the font loader function is called.\nIf the following component defines your localFont like this:\n // src/components/MyComponent.js\nimport localFont from 'next/font/local';\n \nconst localRubikStorm = localFont({ src: './fonts/RubikStorm-Regular.ttf' });\nstaticDir mapping","const localRubikStorm = localFont({ src: './fonts/RubikStorm-Regular.ttf' });\nstaticDir mapping\n‚ÑπÔ∏èYou can safely skip this section if you are using @storybook/experimental-nextjs-vite instead of @storybook/nextjs. The Vite-based framework takes care of the mapping automatically.\nYou have to tell Storybook where the fonts directory is located, via the staticDirs configuration. The from value is relative to the .storybook directory. The to value is relative to the execution context of Storybook. Very likely it is the root of your project.",".storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  staticDirs: [\n    {\n      from: '../src/components/fonts',\n      to: 'src/components/fonts',\n    },\n  ],\n};\n \nexport default config;\n\nNot supported features of next/font\nThe following features are not supported (yet). Support for these features might be planned for the future:\n\nSupport font loaders configuration in next.config.js\nfallback option\nadjustFontFallback option\npreload option gets ignored. Storybook handles Font loading its own way.\ndisplay option gets ignored. All fonts are loaded with display set to \"block\" to make Storybook load the font properly.","Mocking fonts during testing\nOccasionally fetching fonts from Google may fail as part of your Storybook build step. It is highly recommended to mock these requests, as those failures can cause your pipeline to fail as well. Next.js supports mocking fonts via a JavaScript module located where the env var NEXT_FONT_GOOGLE_MOCKED_RESPONSES references.\nFor example, using GitHub Actions:\n # .github/workflows/ci.yml\n- uses: chromaui/action@v1\n  env:\n    #üëá the location of mocked fonts to use\n    NEXT_FONT_GOOGLE_MOCKED_RESPONSES: ${{ github.workspace }}/mocked-google-fonts.js\n  with:\n    projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}\n    token: ${{ secrets.GITHUB_TOKEN }}\nYour mocked fonts will look something like this:\n // mocked-google-fonts.js\n//üëá Mocked responses of google fonts with the URL as the key\nmodule.exports = {\n  'https://fonts.googleapis.com/css?family=Inter:wght@400;500;600;800&display=block': `\n    /* cyrillic-ext */\n    @font-face {\n      font-family: 'Inter';","/* cyrillic-ext */\n    @font-face {\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 400;\n      font-display: block;\n      src: url(https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZJhiJ-Ek-_EeAmM.woff2) format('woff2');\n      unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n    }\n    /* more font declarations go here */\n    /* latin */\n    @font-face {\n      font-family: 'Inter';\n      font-style: normal;\n      font-weight: 400;\n      font-display: block;\n      src: url(https://fonts.gstatic.com/s/inter/v12/UcCO3FwrK3iLTeHuS_fvQtMwCp50KnMw2boKoduKmMEVuLyfAZ9hiJ-Ek-_EeA.woff2) format('woff2');\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n    }`,\n};\nNext.js routing","}`,\n};\nNext.js routing\nNext.js's router is automatically stubbed for you so that when the router is interacted with, all of its interactions are automatically logged to the Actions panel if you have the Storybook actions addon.\nYou should only use next/router in the pages directory. In the app directory, it is necessary to use next/navigation.\nOverriding defaults\nPer-story overrides can be done by adding a nextjs.router property onto the story parameters. The framework will shallowly merge whatever you put here into the router.","RouterBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport RouterBasedComponent from './RouterBasedComponent';\n \nconst meta: Meta<typeof RouterBasedComponent> = {\n  component: RouterBasedComponent,\n};\nexport default meta;\n \ntype Story = StoryObj<typeof RouterBasedComponent>;\n \n// If you have the actions addon,\n// you can interact with the links and see the route change events there\nexport const Example: Story = {\n  parameters: {\n    nextjs: {\n      router: {\n        pathname: '/profile/[id]',\n        asPath: '/profile/1',\n        query: {\n          id: '1',\n        },\n      },\n    },\n  },\n};","These overrides can also be applied to all stories for a component or all stories in your project. Standard parameter inheritance rules apply.\nDefault router\nThe default values on the stubbed router are as follows (see globals for more details on how globals work).\n // Default router\nconst defaultRouter = {\n  // The locale should be configured globally: https://storybook.js.org/docs/essentials/toolbars-and-globals#globals\n  locale: globals?.locale,\n  asPath: '/',\n  basePath: '/',\n  isFallback: false,\n  isLocaleDomain: false,\n  isReady: true,\n  isPreview: false,\n  route: '/',\n  pathname: '/',\n  query: {},\n};\nAdditionally, the router object contains all of the original methods (such as push(), replace(), etc.) as mock functions that can be manipulated and asserted on using regular mock APIs.\nTo override these defaults, you can use parameters and beforeEach:\n // .storybook/preview.ts\nimport { Preview } from '@storybook/react';","// .storybook/preview.ts\nimport { Preview } from '@storybook/react';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/router.mock';\n \nconst preview: Preview = {\n  parameters: {\n    nextjs: {\n      // üëá Override the default router properties\n      router: {\n        basePath: '/app/',\n      },\n    },\n  },\n  async beforeEach() {\n    // üëá Manipulate the default router method mocks\n    getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js navigation\nPlease note that next/navigation can only be used in components/pages in the app directory.\nSet nextjs.appDirectory to true\nIf your story imports components that use next/navigation, you need to set the parameter nextjs.appDirectory to true in for that component's stories:","NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true, // üëà Set this\n    },\n  },\n};\nexport default meta;\n\nIf your Next.js project uses the app directory for every page (in other words, it does not have a pages directory), you can set the parameter nextjs.appDirectory to true in the .storybook/preview.js|ts file to apply it to all stories.\n\n .storybook/preview.tsTypescriptimport { Preview } from '@storybook/react';\n \nconst preview: Preview = {\n  // ...\n  parameters: {\n    // ...\n    nextjs: {\n      appDirectory: true,\n    },\n  },\n};\n \nexport default preview;","Overriding defaults\nPer-story overrides can be done by adding a nextjs.navigation property onto the story parameters. The framework will shallowly merge whatever you put here into the router.\n\n NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n    },\n  },\n};\nexport default meta;\n \ntype Story = StoryObj<typeof NavigationBasedComponent>;\n \n// If you have the actions addon,\n// you can interact with the links and see the route change events there\nexport const Example: Story = {\n  parameters: {\n    nextjs: {\n      navigation: {\n        pathname: '/profile',\n        query: {\n          user: '1',\n        },\n      },\n    },\n  },\n};","These overrides can also be applied to all stories for a component or all stories in your project. Standard parameter inheritance rules apply.\nuseSelectedLayoutSegment, useSelectedLayoutSegments, and useParams hooks\nThe useSelectedLayoutSegment, useSelectedLayoutSegments, and useParams hooks are supported in Storybook. You have to set the nextjs.navigation.segments parameter to return the segments or the params you want to use.","NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n      navigation: {\n        segments: ['dashboard', 'analytics'],\n      },\n    },\n  },\n};\nexport default meta;\nWith the above configuration, the component rendered in the stories would receive the following values from the hooks:\n // NavigationBasedComponent.js\nimport { useSelectedLayoutSegment, useSelectedLayoutSegments, useParams } from 'next/navigation';\n \nexport default function NavigationBasedComponent() {\n  const segment = useSelectedLayoutSegment(); // dashboard\n  const segments = useSelectedLayoutSegments(); // [\"dashboard\", \"analytics\"]\n  const params = useParams(); // {}\n  // ...\n}","To use useParams, you have to use a segments array where each element is an array containing two strings. The first string is the param key and the second string is the param value.\n\n NavigationBasedComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport NavigationBasedComponent from './NavigationBasedComponent';\n \nconst meta: Meta<typeof NavigationBasedComponent> = {\n  component: NavigationBasedComponent,\n  parameters: {\n    nextjs: {\n      appDirectory: true,\n      navigation: {\n        segments: [\n          ['slug', 'hello'],\n          ['framework', 'nextjs'],\n        ],\n      },\n    },\n  },\n};\nexport default meta;","With the above configuration, the component rendered in the stories would receive the following values from the hooks:\n // ParamsBasedComponent.js\nimport { useSelectedLayoutSegment, useSelectedLayoutSegments, useParams } from 'next/navigation';\n \nexport default function ParamsBasedComponent() {\n  const segment = useSelectedLayoutSegment(); // hello\n  const segments = useSelectedLayoutSegments(); // [\"hello\", \"nextjs\"]\n  const params = useParams(); // { slug: \"hello\", framework: \"nextjs\" }\n  ...\n}\nThese overrides can also be applied to a single story or all stories in your project. Standard parameter inheritance rules apply.\nThe default value of nextjs.navigation.segments is [] if not set.\nDefault navigation context\nThe default values on the stubbed navigation context are as follows:\n // Default navigation context\nconst defaultNavigationContext = {\n  pathname: '/',\n  query: {},\n};","// Default navigation context\nconst defaultNavigationContext = {\n  pathname: '/',\n  query: {},\n};\nAdditionally, the router object contains all of the original methods (such as push(), replace(), etc.) as mock functions that can be manipulated and asserted on using regular mock APIs.\nTo override these defaults, you can use parameters and beforeEach:\n // .storybook/preview.ts\nimport { Preview } from '@storybook/react';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/navigation.mock';\n \nconst preview: Preview = {\n  parameters: {\n    nextjs: {\n      // üëá Override the default navigation properties\n      navigation: {\n        pathname: '/app/',\n      },\n    },\n  },\n  async beforeEach() {\n    // üëá Manipulate the default navigation method mocks\n    getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js Head","getRouter().push.mockImplementation(() => {\n      /* ... */\n    });\n  },\n};\nNext.js Head\nnext/head is supported out of the box. You can use it in your stories like you would in your Next.js application. Please keep in mind, that the Head children are placed into the head element of the iframe that Storybook uses to render your stories.\nSass/Scss\nGlobal Sass/Scss stylesheets are supported without any additional configuration as well. Just import them into .storybook/preview.js|ts\n // .storybook/preview.js|ts\nimport '../styles/globals.scss';\nThis will automatically include any of your custom Sass configurations in your next.config.js file.\n // next.config.js\nimport * as path from 'path';\n \nexport default {\n  // Any options here are included in Sass compilation for your stories\n  sassOptions: {\n    includePaths: [path.join(__dirname, 'styles')],\n  },\n};\nCSS/Sass/Scss Modules\nCSS modules work as expected.\n // src/components/Button.jsx\n// This import will work in Storybook","CSS modules work as expected.\n // src/components/Button.jsx\n// This import will work in Storybook\nimport styles from './Button.module.css';\n// Sass/Scss is also supported\n// import styles from './Button.module.scss'\n// import styles from './Button.module.sass'\n \nexport function Button() {\n  return (\n    <button type=\"button\" className={styles.error}>\n      Destroy\n    </button>\n  );\n}\nStyled JSX\nThe built in CSS-in-JS solution for Next.js is styled-jsx, and this framework supports that out of the box too, zero config.\n // src/components/HelloWorld.jsx\n// This will work in Storybook\nfunction HelloWorld() {\n  return (\n    <div>\n      Hello world\n      <p>scoped!</p>\n      <style jsx>{`\n        p {\n          color: blue;\n        }\n        div {\n          background: red;\n        }\n        @media (max-width: 600px) {\n          div {\n            background: blue;\n          }\n        }\n      `}</style>\n      <style global jsx>{`\n        body {\n          background: black;\n        }","`}</style>\n      <style global jsx>{`\n        body {\n          background: black;\n        }\n      `}</style>\n    </div>\n  );\n}\n \nexport default HelloWorld;\nYou can use your own babel config too. This is an example of how you can customize styled-jsx.\n // .babelrc (or whatever config file you use)\n{\n  \"presets\": [\n    [\n      \"next/babel\",\n      {\n        \"styled-jsx\": {\n          \"plugins\": [\"@styled-jsx/plugin-sass\"]\n        }\n      }\n    ]\n  ]\n}\nPostCSS\nNext.js lets you customize PostCSS config. Thus this framework will automatically handle your PostCSS config for you.\nThis allows for cool things like zero-config Tailwind! (See Next.js' example)\nAbsolute imports\nAbsolute imports from the root directory are supported.\n // index.jsx\n// All good!\nimport Button from 'components/button';\n// Also good!\nimport styles from 'styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>","return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nAlso OK for global styles in .storybook/preview.js|ts!\n // .storybook/preview.js|ts\n \nimport 'styles/globals.scss';\n \n// ...\n‚ö†Ô∏èAbsolute imports cannot be mocked in stories/tests. See the Mocking modules section for more information.\nModule aliases\nModule aliases are also supported.\n // index.jsx\n// All good!\nimport Button from '@/components/button';\n// Also good!\nimport styles from '@/styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nSubpath imports\nAs an alternative to module aliases, you can use subpath imports to import modules. This follows Node package standards and has benefits when mocking modules.","To configure subpath imports, you define the imports property in your project's package.json file. This property maps the subpath to the actual file path. The example below configures subpath imports for all modules in the project:\n // package.json\n{\n  \"imports\": {\n    \"#*\": [\"./*\", \"./*.ts\", \"./*.tsx\"]\n  }\n}\n‚ÑπÔ∏èBecause subpath imports replace module aliases, you can remove the path aliases from your TypeScript configuration.\nWhich can then be used like this:\n // index.jsx\nimport Button from '#components/button';\nimport styles from '#styles/HomePage.module.css';\n \nexport default function HomePage() {\n  return (\n    <>\n      <h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nMocking modules","<h1 className={styles.title}>Hello World</h1>\n      <Button />\n    </>\n  );\n}\nMocking modules\nComponents often depend on modules that are imported into the component file. These can be from external packages or internal to your project. When rendering those components in Storybook or testing them, you may want to mock those modules to control and assert their behavior.\nBuilt-in mocked modules\nThis framework provides mocks for many of Next.js' internal modules:","@storybook/nextjs/cache.mock\n@storybook/nextjs/headers.mock\n@storybook/nextjs/navigation.mock\n@storybook/nextjs/router.mock\n\nMocking other modules\nHow you mock other modules in Storybook depends on how you import the module into your component.\nWith either approach, the first step is to create a mock file. Here's an example of a mock file for a module named session:\n\n lib/session.mock.tsimport { fn } from '@storybook/test';\nimport * as actual from './session';\n \nexport * from './session';\nexport const getUserFromSession = fn(actual.getUserFromSession).mockName('getUserFromSession');\n\nWith subpath imports\nIf you're using subpath imports, you can adjust your configuration to apply conditions so that the mocked module is used inside Storybook. The example below configures subpath imports for four internal modules, which are then mocked in Storybook:","package.json{\n  \"imports\": {\n    \"#api\": {\n      // storybook condition applies to Storybook\n      \"storybook\": \"./api.mock.ts\",\n      \"default\": \"./api.ts\",\n    },\n    \"#app/actions\": {\n      \"storybook\": \"./app/actions.mock.ts\",\n      \"default\": \"./app/actions.ts\",\n    },\n    \"#lib/session\": {\n      \"storybook\": \"./lib/session.mock.ts\",\n      \"default\": \"./lib/session.ts\",\n    },\n    \"#lib/db\": {\n      // test condition applies to test environments *and* Storybook\n      \"test\": \"./lib/db.mock.ts\",\n      \"default\": \"./lib/db.ts\",\n    },\n    \"#*\": [\"./*\", \"./*.ts\", \"./*.tsx\"],\n  },\n}\n\n‚ÑπÔ∏èEach subpath must begin with #, to differentiate it from a regular module path. The #* entry is a catch-all that maps all subpaths to the root directory.\nWith module aliases\nIf you're using module aliases, you can add a Webpack alias to your Storybook configuration to point to the mock file.","vitewebpack .storybook/main.tsTypescript// Replace your-framework with the framework you are using (e.g., react-webpack5, vue3-vite)\nimport type { StorybookConfig } from '@storybook/your-framework';\n \nconst config: StorybookConfig = {\n  framework: '@storybook/your-framework',\n  stories: ['../src/**/*.mdx', '../src/**/*.stories.@(js|jsx|mjs|ts|tsx)'],\n  viteFinal: async (config) => {\n    if (config.resolve) {\n      config.resolve.alias = {\n        ...config.resolve?.alias,\n        // üëá External module\n        lodash: require.resolve('./lodash.mock'),\n        // üëá Internal modules\n        '@/api': path.resolve(__dirname, './api.mock.ts'),\n        '@/app/actions': path.resolve(__dirname, './app/actions.mock.ts'),\n        '@/lib/session': path.resolve(__dirname, './lib/session.mock.ts'),\n        '@/lib/db': path.resolve(__dirname, './lib/db.mock.ts'),\n      };\n    }\n \n    return config;\n  },\n};\n \nexport default config;","Runtime config\nNext.js allows for Runtime Configuration which lets you import a handy getConfig function to get certain configuration defined in your next.config.js file at runtime.\nIn the context of Storybook with this framework, you can expect Next.js's Runtime Configuration feature to work just fine.\nNote, because Storybook doesn't server render your components, your components will only see what they normally see on the client side (i.e. they won't see serverRuntimeConfig but will see publicRuntimeConfig).\nFor example, consider the following Next.js config:\n // next.config.js\nmodule.exports = {\n  serverRuntimeConfig: {\n    mySecret: 'secret',\n    secondSecret: process.env.SECOND_SECRET, // Pass through env variables\n  },\n  publicRuntimeConfig: {\n    staticFolder: '/static',\n  },\n};\nCalls to getConfig would return the following object when called within Storybook:\n // Runtime config\n{\n  \"serverRuntimeConfig\": {},\n  \"publicRuntimeConfig\": {\n    \"staticFolder\": \"/static\"\n  }\n}","{\n  \"serverRuntimeConfig\": {},\n  \"publicRuntimeConfig\": {\n    \"staticFolder\": \"/static\"\n  }\n}\nCustom Webpack config\n‚ÑπÔ∏èYou can safely skip this section if you are using @storybook/experimental-nextjs-vite instead of @storybook/nextjs.\nThe Vite-based Next.js framework does not support Webpack settings.\nNext.js comes with a lot of things for free out of the box like Sass support, but sometimes you add custom Webpack config modifications to Next.js. This framework takes care of most of the Webpack modifications you would want to add. If Next.js supports a feature out of the box, then that feature will work out of the box in Storybook. If Next.js doesn't support something out of the box, but makes it easy to configure, then this framework will do the same for that thing for Storybook.\nAny Webpack modifications desired for Storybook should be made in .storybook/main.js|ts.","Any Webpack modifications desired for Storybook should be made in .storybook/main.js|ts.\nNote: Not all Webpack modifications are copy/paste-able between next.config.js and .storybook/main.js|ts. It is recommended to do your research on how to properly make your modification to Storybook's Webpack config and on how Webpack works.\nBelow is an example of how to add SVGR support to Storybook with this framework.",".storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  webpackFinal: async (config) => {\n    config.module = config.module || {};\n    config.module.rules = config.module.rules || [];\n \n    // This modifies the existing image rule to exclude .svg files\n    // since you want to handle those files with @svgr/webpack\n    const imageRule = config.module.rules.find((rule) => rule?.['test']?.test('.svg'));\n    if (imageRule) {\n      imageRule['exclude'] = /\\.svg$/;\n    }\n \n    // Configure .svg files to be loaded with @svgr/webpack\n    config.module.rules.push({\n      test: /\\.svg$/,\n      use: ['@svgr/webpack'],\n    });\n \n    return config;\n  },\n};\n \nexport default config;","Typescript\nStorybook handles most Typescript configurations, but this framework adds additional support for Next.js's support for Absolute Imports and Module path aliases. In short, it takes into account your tsconfig.json's baseUrl and paths. Thus, a tsconfig.json like the one below would work out of the box.\n // tsconfig.json\n{\n  \"compilerOptions\": {\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@/components/*\": [\"components/*\"]\n    }\n  }\n}\nReact Server Components (RSC)\n(‚ö†Ô∏è Experimental)\nIf your app uses React Server Components (RSC), Storybook can render them in stories in the browser.\nTo enable this set the experimentalRSC feature flag in your .storybook/main.js|ts config:\n\n .storybook/main.tsTypescriptimport { StorybookConfig } from '@storybook/nextjs';\n \nconst config: StorybookConfig = {\n  // ...\n  features: {\n    experimentalRSC: true,\n  },\n};\n \nexport default config;","Setting this flag automatically wraps your story in a Suspense wrapper, which is able to render asynchronous components in NextJS's version of React.\nIf this wrapper causes problems in any of your existing stories, you can selectively disable it using the react.rsc parameter at the global/component/story level:\n\n MyServerComponent.stories.tsTypescriptimport { Meta, StoryObj } from '@storybook/react';\n \nimport MyServerComponent from './MyServerComponent';\n \nconst meta: Meta<typeof MyServerComponent> = {\n  component: MyServerComponent,\n  parameters: {\n    react: { rsc: false },\n  },\n};\nexport default meta;","Note that wrapping your server components in Suspense does not help if your server components access server-side resources like the file system or Node-specific libraries. To work around this, you'll need to mock out your data access layer using Webpack aliases or an addon like storybook-addon-module-mock.\nIf your server components access data via the network, we recommend using the MSW Storybook Addon to mock network requests.\nIn the future we will provide better mocking support in Storybook and support for Server Actions.\n\nNotes for Yarn v2 and v3 users\nIf you're using Yarn v2 or v3, you may run into issues where Storybook can't resolve style-loader or css-loader. For example, you might get errors like:\n Module not found: Error: Can't resolve 'css-loader'\nModule not found: Error: Can't resolve 'style-loader'","This is because those versions of Yarn have different package resolution rules than Yarn v1.x. If this is the case for you, please install the package directly.\nFAQ\nStories for pages/components which fetch data\nNext.js pages can fetch data directly within server components in the app directory, which often include module imports that only run in a node environment. This does not (currently) work within Storybook, because if you import from a Next.js page file containing those node module imports in your stories, your Storybook's Webpack will crash because those modules will not run in a browser. To get around this, you can extract the component in your page file into a separate file and import that pure component in your stories. Or, if that's not feasible for some reason, you can polyfill those modules in your Storybook's webpackFinal configuration.\nBefore\n // app/my-page/index.jsx\nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}","// app/my-page/index.jsx\nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}\n \n// Using this component in your stories will break the Storybook build\nexport default async function Page() {\n  const data = await getData();\n \n  return // ...\n}\nAfter\n // app/my-page/index.jsx\n \n// Use this component in your stories\nimport MyPage from './components/MyPage';\n \nasync function getData() {\n  const res = await fetch(...);\n  // ...\n}\n \nexport default async function Page() {\n  const data = await getData();\n \n  return <MyPage {...data} />;\n}\nStatically imported images won't load\nMake sure you are treating image imports the same way you treat them when using next/image in normal development.\nBefore using this framework, image imports would import the raw path to the image (e.g. 'static/media/stories/assets/logo.svg'). Now image imports work the \"Next.js way\", meaning that you now get an object when importing an image. For example:\n // Image import object\n{","// Image import object\n{\n  \"src\": \"static/media/stories/assets/logo.svg\",\n  \"height\": 48,\n  \"width\": 48,\n  \"blurDataURL\": \"static/media/stories/assets/logo.svg\"\n}\nTherefore, if something in Storybook isn't showing the image properly, make sure you expect the object to be returned from an import instead of only the asset path.\nSee local images for more detail on how Next.js treats static image imports.\nModule not found: Error: Can't resolve package name\nYou might get this if you're using Yarn v2 or v3. See Notes for Yarn v2 and v3 users for more details.\nWhat if I'm using the Vite builder?\nWe have introduced experimental Vite builder support. Just install the experimental framework package @storybook/experimental-nextjs-vite and replace all instances of @storybook/nextjs with @storybook/experimental-nextjs-vite.\nError: You are importing avif images, but you don't have sharp installed. You have to install sharp in order to use image optimization features in Next.js.","sharp is a dependency of Next.js's image optimization feature. If you see this error, you need to install sharp in your project.\n npm install sharp\n yarn add sharp\n pnpm add sharp\nYou can refer to the Install sharp to Use Built-In Image Optimization in the Next.js documentation for more information.\nAPI\nModules\nThe @storybook/nextjs¬†package exports¬†several modules that enable¬†you to mock Next.js's internal behavior.\n@storybook/nextjs/export-mocks\nType: { getPackageAliases: ({ useESM?: boolean }) => void }\ngetPackageAliases is a helper for generating the aliases needed to set up portable stories.\n // jest.config.ts\nimport type { Config } from 'jest';\nimport nextJest from 'next/jest.js';\n// üëá Import the utility function\nimport { getPackageAliases } from '@storybook/nextjs/export-mocks';\n \nconst createJestConfig = nextJest({\n  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment\n  dir: './',\n});\n \nconst config: Config = {","dir: './',\n});\n \nconst config: Config = {\n  testEnvironment: 'jsdom',\n  // ... rest of Jest config\n  moduleNameMapper: {\n    ...getPackageAliases(), // üëà Add the utility as mapped module names\n  },\n};\n \nexport default createJestConfig(config);\n@storybook/nextjs/cache.mock\nType: typeof import('next/cache')\nThis module exports mocked implementations of the next/cache module's exports. You can use it to create your own mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { revalidatePath } from '@storybook/nextjs/cache.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const Submitted: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n \n    const submitButton = canvas.getByRole('button', { name: /submit/i });\n    await userEvent.click(saveButton);\n    // üëá Use any mock assertions on the function\n    await expect(revalidatePath).toHaveBeenCalledWith('/');\n  },\n};","@storybook/nextjs/headers.mock\nType: cookies, headers and draftMode from Next.js\nThis module exports writable mocked implementations of the next/headers module's exports. You can use it to set up cookies or headers that are read in your story, and to later assert that they have been called.\nNext.js's default headers() export is read-only, but this module exposes methods allowing you to write to the headers:\n\nheaders().append(name: string, value: string): Appends the value to the header if it exists already.\nheaders().delete(name: string): Deletes the header\nheaders().set(name: string, value: string): Sets the header to the value provided.\n\nFor cookies, you can use the existing API to write them. E.g., cookies().set('firstName', 'Jane').\nBecause headers(), cookies() and their sub-functions are all mocks you can use any mock utilities in your stories, like headers().getAll.mock.calls.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { cookies, headers } from '@storybook/nextjs/headers.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const LoggedInEurope: Story = {\n  async beforeEach() {\n    // üëá Set mock cookies and headers ahead of rendering\n    cookies().set('username', 'Sol');\n    headers().set('timezone', 'Central European Summer Time');\n  },\n  async play() {\n    // üëá Assert that your component called the mocks\n    await expect(cookies().get).toHaveBeenCalledOnce();\n    await expect(cookies().get).toHaveBeenCalledWith('username');\n    await expect(headers().get).toHaveBeenCalledOnce();","await expect(headers().get).toHaveBeenCalledOnce();\n    await expect(cookies().get).toHaveBeenCalledWith('timezone');\n  },\n};","@storybook/nextjs/navigation.mock\nType: typeof import('next/navigation') & getRouter: () => ReturnType<typeof import('next/navigation')['useRouter']>\nThis module exports mocked implementations of the next/navigation module's exports. It also exports a getRouter function that returns a mocked version of Next.js's router object from useRouter, allowing the properties to be manipulated and asserted on. You can use it mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { redirect, getRouter } from '@storybook/nextjs/navigation.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n  parameters: {\n    nextjs: {\n      // üëá As in the Next.js application, next/navigation only works using App Router\n      appDirectory: true,\n    },\n  },\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const Unauthenticated: Story = {\n  async play() {\n    // üëá Assert that your component called redirect()\n    await expect(redirect).toHaveBeenCalledWith('/login', 'replace');\n  },\n};\n \nexport const GoBack: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');","const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');\n \n    await userEvent.click(backBtn);\n    // üëá Assert that your component called back()\n    await expect(getRouter().back).toHaveBeenCalled();\n  },\n};","@storybook/nextjs/router.mock\nType: typeof import('next/router') & getRouter: () => ReturnType<typeof import('next/router')['useRouter']>\nThis module exports mocked implementations of the next/router module's exports. It also exports a getRouter function that returns a mocked version of Next.js's router object from useRouter, allowing the properties to be manipulated and asserted on. You can use it mock implementations or assert on mock calls in a story's play function.","MyForm.stories.tsTypescriptimport type { Meta, StoryObj } from '@storybook/react';\nimport { expect, fireEvent, userEvent, within } from '@storybook/test';\n// üëá Must include the `.mock` portion of filename to have mocks typed correctly\nimport { getRouter } from '@storybook/nextjs/router.mock';\n \nimport MyForm from './my-form';\n \nconst meta: Meta<typeof MyForm> = {\n  component: MyForm,\n};\n \nexport default meta;\n \ntype Story = StoryObj<typeof MyForm>;\n \nexport const GoBack: Story = {\n  async play({ canvasElement }) {\n    const canvas = within(canvasElement);\n    const backBtn = await canvas.findByText('Go back');\n \n    await userEvent.click(backBtn);\n    // üëá Assert that your component called back()\n    await expect(getRouter().back).toHaveBeenCalled();\n  },\n};","Options\nYou can pass an options object for additional configuration if needed:\n // .storybook/main.js\nimport * as path from 'path';\n \nexport default {\n  // ...\n  framework: {\n    name: '@storybook/nextjs',\n    options: {\n      image: {\n        loading: 'eager',\n      },\n      nextConfigPath: path.resolve(__dirname, '../next.config.js'),\n    },\n  },\n};\nThe available options are:\nbuilder\nType: Record<string, any>\nConfigure options for the framework's builder. For Next.js, available options can be found in the Webpack builder docs.\nimage\nType: object\nProps to pass to every instance of next/image. See next/image docs for more details.\nnextConfigPath\nType: string\nThe absolute path to the next.config.js file. This is necessary if you have a custom next.config.js file that is not in the root directory of your project.\nParameters\nThis framework contributes the following parameters to Storybook, under the nextjs namespace:\nappDirectory\nType: boolean\nDefault: false","appDirectory\nType: boolean\nDefault: false\nIf your story imports components that use next/navigation, you need to set the parameter nextjs.appDirectory to true. Because this is a parameter, you can apply it to a single story, all stories for a component, or every story in your Storybook. See Next.js Navigation for more details.\nnavigation\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n  segments?: (string | [string, string])[];\n}\nDefault value:\n {\n  segments: [];\n}\nThe router object that is passed to the next/navigation context. See Next.js's navigation docs for more details.\nrouter\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n}","router\nType:\n {\n  asPath?: string;\n  pathname?: string;\n  query?: Record<string, string>;\n}\nThe router object that is passed to the next/router context. See Next.js's router docs for more details.Was this page useful?üëçüëé‚úçÔ∏è Edit on GithubOn this pageJoin the communitySubscribe6,378 developers and countingWhyWhy StorybookComponent driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":0,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":919,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":1537,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":2426,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":3201,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":3949,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":4917,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":5795,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":6625,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":7170,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":7866,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":8795,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":9702,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":10238,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":10880,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":11749,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":12580,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":13406,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":14305,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":14739,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":15655,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":16316,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":17111,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":17939,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":18824,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":19723,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":20623,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":21456,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":22087,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":22553,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":23414,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":24302,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":25232,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":26131,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":26922,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":27336,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":28086,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":28971,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":29584,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":30407,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":31278,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":32228,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":33207,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":34148,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":34643,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":35434,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":36332,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37216,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37343,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":37836,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":38719,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":38965,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":39442,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":40212,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":41140,"title":"Storybook for Next.js | Storybook docs"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/docs/get-started/frameworks/nextjs","start_index":41758,"title":"Storybook for Next.js | Storybook docs"}]},{"source":{"collection_name":"web-search-ef9ef7392ff889cb2162bccfdd1d7e84f7b68d9ffaa0e570067a","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/blog/get-started-with-storybook-and-next-js/"]},"document":["Get started with Storybook and Next.jsDocsAddonsShowcaseBlogVisual TestEnterprise86,466Search docs‚åÉKBack to blogJoin the community:Get started with Storybook and Next.jsIntegrate Storybook with Next.js in four simple stepsMichael ChanNov 08, 2021 ‚Äî @chantasticLast updated: Jul 03, 20242023 UPDATE: Storybook created a zero-config integration with NextJS. Learn how to use it here.Next.js is a fantastic framework for building high-performance applications in React. But as it becomes more advanced ‚Äî with features like next/image ‚Äî it becomes more difficult to integrate with documentation and testing environments like Storybook.I dove in deep to learn how to make Storybook the best component-driven UI environment for Next.js pages. This article shows you how to do the same in four straightforward steps:üì¶ Initialize a new Storybook with Webpack 5üìë Create stories for Next.js pagesüåé Import shared, global styles in preview.js‚¨áÔ∏è De-optimize Next Image for use in StoriesIf you prefer video, jump","global styles in preview.js‚¨áÔ∏è De-optimize Next Image for use in StoriesIf you prefer video, jump to the end. We cover all these steps (and more) in a 27 minute code-along YouTube video!Start with a Next.js AppBefore we start, we need a Next.js app. This tutorial uses the fantastic Getting Started guide on nextjs.org.A fresh Next.js app running in the browserI recommend following along in a new app and then repeating the steps in an existing one. Here is the complete source on Github, updated for Next.js 12.Initialize a new Storybook with Webpack 5Storybook has an initializer that does the heavy lifting for us: npx sb init. This script detects your project type and adapts to it. But we can also give it a few hints.Next.js v11 and later use Webpack 5. We can also use Webpack 5 in Storybook to get improved integration and performance. To do that we use the builder option and run this command:npx sb init --builder webpack5Read more about the benefits of Storybook's Webpack 5","this command:npx sb init --builder webpack5Read more about the benefits of Storybook's Webpack 5 builder.Create stories for full Next.js pagesNext.js and Storybook have extremely compatible component models. Next.js uses components for pages and Storybook uses components for documentation and testing. This makes Storybook a great component-driven development environment for Next.js!Let's create a story for our Next.js home page.Create a new file /stories/pages/home.stories.jsxImport /pages/index.jsExport a default story object, with title and component propertiesExport a story for Home// /stories/pages/home.stories.jsx","import Home from \"../../pages/index\";\n\nexport default {\n  title: \"Pages/Home\",\n  component: Home,\n};","export const HomePage = () => <Home />\nWe now have our Home page in Storybook. But it isn't much to look at yet. We need to import global styles.Import shared, global stylesheets in preview.jsMost apps have stylesheet for global resets or font styles that is shared globally. Our Next.js tutorial app holds global styles in /styles/globals.css.We can import our global stylesheet into our home.stories.jsx story file. But doing so would require a lot of duplication in story files ‚Äî a very error-prone process. It'd be better to import global stylesheets one for all stories.Storybook holds shared story configuration in .storybook/preview.js. This file controls the way all stories are rendered. Stylesheets can be imported with a module import:// .storybook/preview.js","import \"../styles/globals.css\";Story, before and after adding globals.css. Much better!We did it! Save for a broken image, our story looks like the homepage served from Next.js.For more ways to handle styles in Storybook, check out our Styling and CSS guide.De-optimize Next.js Image in storiesThe most challenging part of a Next.js and Storybook integration is handling images.Storybook must be configured to serve next/images in the /public directoryNext.js v10 and newer include the Next.js Image component. In their words, it's \"an extension of the HTML <img>element, evolved for the modern web.\" Utilizing it optimizes file size, visual stability, and load times. It's a marvel of UI engineering.Because Storybook runs these components in isolation of Next.js framework-integrations, we need to configure it in two important ways:Serve the Next.js public directory in StorybookAdd the unoptimized prop to Next.js Image component in all stories1. Serve the public directory in StorybookThe sb","prop to Next.js Image component in all stories1. Serve the public directory in StorybookThe sb init script creates two Storybook scripts in our package.json. Update both of them to serve the publicdirectory (where Next.js images are kept). The CLI option we use for this is -s. or --static-dir.// package.json","\"scripts\": {\n-    \"storybook\": \"start-storybook -p 6006\",\n-    \"build-storybook\": \"build-storybook\"\n+    \"storybook\": \"start-storybook -p 6006 -s ./public\",\n+    \"build-storybook\": \"build-storybook -s public\"\n}\nFind more CLI options in our CLI options doc. And learn more about Serving Static Files via Storybook.2. Use the unoptimized prop for Next.js Images in StorybookEverywhere that the Next.js Image component is used, images are served from a /_next-prefixed path. We want to utilize Next Image's prop APIs and attributes, but we don't want to require that the Next.js dev server be running. We can do exactly this with the unoptimized prop. But how do we do this in Storybook but not Next.js ü§îWith a bit of module trickery, we can de-optimize Next.js Image only in stories.// .storybook/preview.js\nimport * as NextImage from \"next/image\";\n\nconst OriginalNextImage = NextImage.default;","Object.defineProperty(NextImage, \"default\", {\n  configurable: true,\n  value: (props) => <OriginalNextImage {...props} unoptimized />,\n});","This snippet of configuration modifies how Storybook evaluates the next/image module. Anywhere that Next.js Image's default export is used, the unoptimized prop is applied.Restart your server and check out the Vercel SVG at the bottom. We're back in business!For more information on this technique, read How to Use the Next.js Image Component in Storybook ‚Äî a fantastic post by Jonas Schumacher.Next.js home page running as an app (left) and independently in Storybook (right).What's next?You've already done a great job with this Next.js and Storybook integration. But there's so much more that we can do!If you're hungry for more, checkout my YouTube tutorial. I take this integration even further with Mock Service Worker for use with getServerSideProps and getStaticProps.What are your Next.jsü§ùStorybook tips?We want to hear from you!What wisdom can you share about making Next.js and Storybook a super dev environment? Comment here or join the Storybook Discord Server! We can't wait to meet","a super dev environment? Comment here or join the Storybook Discord Server! We can't wait to meet you ü§©Next.js 12 is here! @chantastic shares four quick tips to¬†get the most from Next.js and Storybook!üì¶ Use Webpack 5üìë Write stories for Next.js pagesüåé Import shared global styles in preview.js‚¨áÔ∏è Integrate next/imagehttps://t.co/By5EfB4XnI pic.twitter.com/jED2qN0crP‚Äî Storybook (@storybookjs) November 10, 2021","Join the Storybook mailing listGet the latest news, updates and releasesYour emailSend6,784 developers and countingWe‚Äôre hiring!Join the team behind Storybook and Chromatic. Build tools that are used in production by 100s of thousands of developers. Remote-first.View jobs‚öõÔ∏è ReactNext.jsPopular posts4 ways to document your design system with StorybookHow to show UI components, specs, and usage guidelines togetherVarun VachharNov 16, 2021Storybook + Netlify CMSBring your content to StorybookVarun VachharNov 23, 2021Interactive stories (beta)Simulate user behaviour using play functionsVarun VachharNov 04, 2021Join the communityYour emailSubscribe6,784 developers and countingWhyWhy StorybookComponent-driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareStorybookMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":0,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":903,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":1792,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":2420,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":2522,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":3293,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":4195,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":4506,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":5400,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":5538,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":6437,"title":"Get started with Storybook and Next.js"},{"description":"Integrate Storybook with Next.js in four simple steps","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/blog/get-started-with-storybook-and-next-js/","start_index":6848,"title":"Get started with Storybook and Next.js"}]},{"source":{"collection_name":"web-search-17c22d27b5865e550328688c4bd651665e826b76199d67a47b8c","name":"integrate storybook with next.js 15","type":"web_search","urls":["https://storybook.js.org/recipes/next"]},"document":["Next.js | Storybook recipesStorybook 9 is coming! Join the newsletter to get it first. SubscribeDocsAddonsShowcaseBlogVisual TestEnterprise86,463Search docs Back to integrationsIntegrate Next.js with StorybookNext.js enables you to create full-stack web applications by extending the latest React features‚ÑπÔ∏èPrerequisitesThis recipe assumes that you have a Next >= 12 app. Don‚Äôt have this? Follow Next's setup instructions then run: # Add Storybook:\nnpm create storybook@latest\nSet up your project\nIn a project without Storybook\nFollow the prompts after running this command in your Next.js project's root directory:\n npm create storybook@latest\nIn a project with Storybook\nThis framework is designed to work with Storybook 7. If you‚Äôre not already using v7, upgrade with this command:\n npx storybook@latest upgrade\nAutomatic migration","npx storybook@latest upgrade\nAutomatic migration\nWhen running the upgrade command above, you should get a prompt asking you to migrate to @storybook/nextjs, which should handle everything for you. In case that auto-migration does not work for your project, refer to the manual migration below.\nManual migration\nInstall the framework:\n yarn add -D @storybook/nextjs\nUpdate your main.js to change the framework property:\n // .storybook/main.js\n \nexport default {\n  // ...\n  framework: {\n    // name: '@storybook/react-webpack5', // Remove this\n    name: '@storybook/nextjs', // Add this\n    options: {},\n  },\n};\nIf you were using Storybook plugins to integrate with Next.js, those are no longer necessary when using this framework and can be removed:\n // .storybook/main.js\n \nexport default {\n  // ...\n  addons: [\n    // ...\n    // These can both be removed\n    // 'storybook-addon-next',\n    // 'storybook-addon-next-router',\n  ],\n};\n(Experimental) SWC support","// 'storybook-addon-next-router',\n  ],\n};\n(Experimental) SWC support\nIf you're working with a Next.js project that already uses SWC (e.g., version 14 or higher), you can enable it in Storybook by adding the following to your main.js:\n // .storybook/main.js\n \nexport default {\n  // ...\n  framework: {\n    name: '@storybook/nextjs',\n    options: {\n      builder: {\n        useSWC: true, // Enables SWC support\n      },\n    },\n  },\n};\nüí°SWC support was introduced in version 7.6, is currently experimental, and may not work for all projects. If you encounter any issues, contact us by opening a discussion on GitHub.\nGet involved\nNow you're ready to use Next.js with Storybook. üéâ If you use Nextjs at work, we'd love your feedback on the Next + Storybook experience.","Join the maintainers and our thriving community in Discord.Tagsüõ† CodeNextjsFrameworkContributorsShaunEveningJoin the communitySubscribe6,378 developers and countingWhyWhy StorybookComponent driven UIDocsGuidesTutorialsChangelogTelemetryCommunityAddonsGet involvedBlogShowcaseExploreProjectsComponent glossaryOpen source softwareMaintained byChromaticSpecial thanks to Netlify and CircleCI"],"metadata":[{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":0,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":786,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":1677,"title":"Next.js | Storybook recipes"},{"description":"Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. It's open source and free.","embedding_config":"{\"engine\": \"\", \"model\": \"sentence-transformers/all-MiniLM-L6-v2\"}","language":"en","source":"https://storybook.js.org/recipes/next","start_index":2440,"title":"Next.js | Storybook recipes"}]}],"lastSentence":"Potential challenges: Ensuring React 19 compatibility, correct Storybook integration with Next.js 15.","done":true}],"tags":[],"timestamp":1745909473462,"files":[]},"updated_at":1745910077,"created_at":1745909473,"share_id":null,"archived":false,"pinned":false,"meta":{"tags":["technology","frontend_frameworks","web_development"]},"folder_id":null}]